/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'ntkrnlmp.exe'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct _RTL_BALANCED_NODE;
struct _EXCEPTION_RECORD;
struct _CONTEXT;
struct _KPCR;
struct _KDPC;
struct _KSCHEDULING_GROUP;
struct _KSCB;
struct _KARM_VFP_STATE;
struct _KTRAP_FRAME;
struct _KPROCESS;
struct _KTHREAD;
struct _KQUEUE;
struct _KWAIT_BLOCK;
struct _THREAD_PERFORMANCE_DATA;
struct _KTHREAD_COUNTERS;
struct _XSTATE_SAVE;
struct _KAPC;
struct _KPRCB;
struct _KSPIN_LOCK_QUEUE;
struct _LOOKASIDE_LIST_EX;
struct _GENERAL_LOOKASIDE;
struct _REQUEST_MAILBOX;
struct _KNODE;
struct _PROCESSOR_IDLE_CONSTRAINTS;
struct _PROCESSOR_IDLE_DEPENDENCY;
struct _PROCESSOR_IDLE_PREPARE_INFO;
struct _PERFINFO_PPM_STATE_SELECTION;
struct _PPM_SELECTION_DEPENDENCY;
struct _PPM_SELECTION_MENU_ENTRY;
struct _PPM_VETO_ENTRY;
struct _PPM_IDLE_STATES;
struct _PROC_IDLE_ACCOUNTING;
struct _PROC_FEEDBACK_COUNTER;
struct _PROC_PERF_CHECK;
struct _PROC_PERF_CONSTRAINT;
struct _PROC_PERF_DOMAIN;
struct _PPM_CONCURRENCY_ACCOUNTING;
struct _PROC_PERF_LOAD;
struct _PROC_PERF_HISTORY;
struct _KSHARED_READY_QUEUE;
struct _ENODE;
struct _EX_WORK_QUEUE;
struct _TERMINATION_PORT;
struct _ETHREAD;
struct _DEVICE_OBJECT;
struct _DRIVER_OBJECT;
struct _IO_CLIENT_EXTENSION;
struct _VPB;
struct _SECTION_OBJECT_POINTERS;
struct _FILE_OBJECT;
struct _IO_COMPLETION_CONTEXT;
struct _OWNER_ENTRY;
struct _ERESOURCE;
struct _FS_FILTER_SECTION_SYNC_OUTPUT;
struct _FS_FILTER_CALLBACK_DATA;
struct _FS_FILTER_CALLBACKS;
struct _DRIVER_EXTENSION;
struct _FILE_BASIC_INFORMATION;
struct _FILE_STANDARD_INFORMATION;
struct _PROCESS_DISK_COUNTERS;
struct _EJOB;
struct _IO_MINI_COMPLETION_PACKET_USER;
struct _PROCESS_ENERGY_VALUES;
struct _PEB_LDR_DATA;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _RTL_CRITICAL_SECTION;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _PEB;
struct _EPROCESS;
struct _HANDLE_TABLE_ENTRY_INFO;
union _HANDLE_TABLE_ENTRY;
struct _HANDLE_TRACE_DEBUG_INFO;
struct _HANDLE_TABLE;
struct _OBJECT_NAME_INFORMATION;
struct _MMWSLE_NONDIRECT_HASH;
struct _MMWSLE_HASH;
struct _MMWSLE;
struct _MMVAD_SHORT;
struct _MI_VAD_EVENT_BLOCK;
struct _MMPTE;
struct _MMPFN;
struct _CONTROL_AREA;
struct _MMEXTEND_INFO;
struct _MI_SECTION_IMAGE_INFORMATION;
struct _SEGMENT;
struct _MI_CONTROL_AREA_WAIT_BLOCK;
struct _MI_IMAGE_SECURITY_REFERENCE;
struct _SUBSECTION;
struct _MI_FILE_EXTENTS_WAIT_BLOCK;
struct _MI_FILE_EXTENTS;
struct _MI_PER_SESSION_PROTOS;
union $5C05C9D415929844BF733FF5D0CABA36;
struct _MDL;
struct _MMINPAGE_SUPPORT;
struct _IRP;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _ACCESS_STATE;
struct _IO_SECURITY_CONTEXT;
struct _NAMED_PIPE_CREATE_PARAMETERS;
struct _MAILSLOT_CREATE_PARAMETERS;
struct _FILE_GET_QUOTA_INFORMATION;
struct _INTERFACE;
struct _DEVICE_CAPABILITIES;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _POWER_SEQUENCE;
struct _CM_RESOURCE_LIST;
struct _IO_STACK_LOCATION;
struct _MMPAGING_FILE;
struct _MI_PARTITION;
struct _MI_NODE_INFORMATION;
struct _PHYSICAL_MEMORY_DESCRIPTOR;
struct _MMPFNLIST;
struct _MMMOD_WRITER_MDL_ENTRY;
struct _MI_PAGING_FILE_SPACE_BITMAPS;
struct _COLORED_PAGE_INFO;
struct _MI_LARGEPAGE_MEMORY_INFO;
struct _MMVAD;
struct _MMWSL;
struct _PO_DIAG_STACK_RECORD;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct _DYNAMIC_FUNCTION_TABLE;
struct _INVERTED_FUNCTION_TABLE;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _COMPRESSED_DATA_INFO;
struct _FAST_IO_DISPATCH;
struct _IO_TIMER;
struct _POP_COOLING_EXTENSION;
struct _DEVICE_OBJECT_POWER_EXTENSION;
struct _DEVOBJ_EXTENSION;
struct _THREAD_ENERGY_VALUES;
struct _MMCLONE_DESCRIPTOR;
struct _MMCLONE_BLOCK;
struct _MMCLONE_HEADER;
struct _CELL_DATA;
struct _HV_GET_CELL_CONTEXT;
struct CMP_OFFSET_ARRAY;
struct _HBASE_BLOCK;
struct _HVIEW_MAP_TABLE;
struct _HVIEW_MAP_DIRECTORY;
struct _HMAP_TABLE;
struct _HMAP_DIRECTORY;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _DEVICE_NODE;
struct _POP_FX_DEVICE;
struct _POP_IRP_DATA;
struct PEPHANDLE__;
struct _POP_FX_WORK_ORDER_WATCHDOG_INFO;
struct _POP_FX_PLUGIN;
struct _PEP_CRASHDUMP_INFORMATION;
struct _POP_FX_IDLE_STATE;
struct _POP_FX_PROVIDER;
struct _POP_FX_DEPENDENT;
struct _POP_FX_COMPONENT;
struct _PO_FX_PERF_STATE_CHANGE;
struct _PO_FX_PERF_STATE;
struct _PO_FX_COMPONENT_PERF_SET;
struct _POP_FX_PERF_SET;
struct _POP_FX_PERF_INFO;
struct _DEVICE_RELATIONS;
struct _PNP_DEVICE_EVENT_ENTRY;
struct _RELATION_LIST;
struct DOCK_INTERFACE;
struct _PENDING_RELATIONS_LIST_ENTRY;
struct _VACB_ARRAY_HEADER;
struct _VACB;
struct _MBCB;
struct _CACHE_MANAGER_CALLBACKS;
struct _CACHE_UNINITIALIZE_EVENT;
struct _HEAP;
struct _HEAP_TAG_ENTRY;
struct _HEAP_PSEUDO_TAG_ENTRY;
struct _HEAP_LOCK;
struct _KALPC_MESSAGE;
struct _KALPC_RESERVE;
struct _KALPC_SECURITY_DATA;
struct _KALPC_SECTION;
struct _KALPC_VIEW;
struct _KALPC_REGION;
struct _KALPC_HANDLE_DATA;
struct _ALPC_COMMUNICATION_INFO;
struct _ALPC_COMPLETION_PACKET_LOOKASIDE;
struct _ALPC_COMPLETION_LIST_HEADER;
struct _ALPC_COMPLETION_LIST;
struct _PALPC_PORT_REFERENCE_WAIT_BLOCK;
struct _WMI_BUFFER_HEADER;
struct _OBJECT_DIRECTORY_ENTRY;
struct _DEVICE_MAP;
struct _OBJECT_DIRECTORY;
struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION;
struct _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION;
struct _SEP_SID_VALUES_BLOCK;
struct _WHEAP_ERROR_RECORD_WRAPPER;
struct _INTERRUPT_CONNECTION_DATA;
struct _CM_KEY_CONTROL_BLOCK;
struct _CM_NAME_CONTROL_BLOCK;
struct _CM_KEY_SECURITY_CACHE;
struct _CM_INDEX_HINT_BLOCK;
struct _CM_KEY_BODY;
struct _CM_KEY_HASH_TABLE_ENTRY;
struct _CM_KEY_SECURITY_CACHE_ENTRY;
struct _CM_WORKITEM;
struct _CM_CELL_REMAP_BLOCK;
struct _CM_RM;
struct _HIVE_WAIT_PACKET;
struct _CMHIVE;
struct _KENLISTMENT;
struct _KRESOURCEMANAGER;
struct _KTM;
struct _KTRANSACTION;
struct _CM_TRANS;
struct _CM_KCB_UOW;
struct _CM_NOTIFY_BLOCK;
struct _RTL_RANGE;
struct _TRIAGE_POP_IRP_DATA;
struct _TRIAGE_POP_FX_DEVICE;
struct _VI_DEADLOCK_RESOURCE;
struct _VI_DEADLOCK_THREAD;
struct _POP_TRIGGER_WAIT;
struct _ETW_QUEUE_ENTRY;
struct _ETW_PROVIDER_TRAITS;
struct _LPCP_NONPAGED_PORT_QUEUE;
struct _LPCP_PORT_QUEUE;

/* 1 */
enum SE_WS_APPX_SIGNATURE_ORIGIN : __int32
{
  SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0x0,
  SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 0x1,
  SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 0x2,
  SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 0x3,
  SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE = 0x4,
};

/* 2 */
enum _NT_PRODUCT_TYPE : __int32
{
  NtProductWinNt = 0x1,
  NtProductLanManNt = 0x2,
  NtProductServer = 0x3,
};

/* 3 */
enum _ALTERNATIVE_ARCHITECTURE_TYPE : __int32
{
  StandardDesign = 0x0,
  NEC98x86 = 0x1,
  EndAlternatives = 0x2,
};

/* 4 */
enum _TP_CALLBACK_PRIORITY : __int32
{
  TP_CALLBACK_PRIORITY_HIGH = 0x0,
  TP_CALLBACK_PRIORITY_NORMAL = 0x1,
  TP_CALLBACK_PRIORITY_LOW = 0x2,
  TP_CALLBACK_PRIORITY_INVALID = 0x3,
  TP_CALLBACK_PRIORITY_COUNT = 0x3,
};

/* 5 */
enum _MODE : __int32
{
  KernelMode = 0x0,
  UserMode = 0x1,
  MaximumMode = 0x2,
};

/* 6 */
enum _KSPIN_LOCK_QUEUE_NUMBER : __int32
{
  LockQueueUnusedSpare0 = 0x0,
  LockQueueUnusedSpare1 = 0x1,
  LockQueueUnusedSpare2 = 0x2,
  LockQueueUnusedSpare3 = 0x3,
  LockQueueVacbLock = 0x4,
  LockQueueMasterLock = 0x5,
  LockQueueNonPagedPoolLock = 0x6,
  LockQueueIoCancelLock = 0x7,
  LockQueueWorkQueueLock = 0x8,
  LockQueueIoVpbLock = 0x9,
  LockQueueIoDatabaseLock = 0xA,
  LockQueueIoCompletionLock = 0xB,
  LockQueueNtfsStructLock = 0xC,
  LockQueueAfdWorkQueueLock = 0xD,
  LockQueueBcbLock = 0xE,
  LockQueueUnusedSpare15 = 0xF,
  LockQueueUnusedSpare16 = 0x10,
  LockQueueMaximumLock = 0x11,
};

/* 7 */
enum _EVENT_TYPE : __int32
{
  NotificationEvent = 0x0,
  SynchronizationEvent = 0x1,
};

/* 8 */
enum _POOL_TYPE : __int32
{
  NonPagedPool = 0x0,
  NonPagedPoolExecute = 0x0,
  PagedPool = 0x1,
  NonPagedPoolMustSucceed = 0x2,
  DontUseThisType = 0x3,
  NonPagedPoolCacheAligned = 0x4,
  PagedPoolCacheAligned = 0x5,
  NonPagedPoolCacheAlignedMustS = 0x6,
  MaxPoolType = 0x7,
  NonPagedPoolBase = 0x0,
  NonPagedPoolBaseMustSucceed = 0x2,
  NonPagedPoolBaseCacheAligned = 0x4,
  NonPagedPoolBaseCacheAlignedMustS = 0x6,
  NonPagedPoolSession = 0x20,
  PagedPoolSession = 0x21,
  NonPagedPoolMustSucceedSession = 0x22,
  DontUseThisTypeSession = 0x23,
  NonPagedPoolCacheAlignedSession = 0x24,
  PagedPoolCacheAlignedSession = 0x25,
  NonPagedPoolCacheAlignedMustSSession = 0x26,
  NonPagedPoolNx = 0x200,
  NonPagedPoolNxCacheAligned = 0x204,
  NonPagedPoolSessionNx = 0x220,
};

/* 9 */
enum _PP_NPAGED_LOOKASIDE_NUMBER : __int32
{
  LookasideSmallIrpList = 0x0,
  LookasideMediumIrpList = 0x1,
  LookasideLargeIrpList = 0x2,
  LookasideMdlList = 0x3,
  LookasideCreateInfoList = 0x4,
  LookasideNameBufferList = 0x5,
  LookasideTwilightList = 0x6,
  LookasideCompletionList = 0x7,
  LookasideScratchBufferList = 0x8,
  LookasideMaximumList = 0x9,
};

/* 10 */
enum _EX_GEN_RANDOM_DOMAIN : __int32
{
  ExGenRandomDomainKernel = 0x0,
  ExGenRandomDomainFirst = 0x0,
  ExGenRandomDomainUserVisible = 0x1,
  ExGenRandomDomainMax = 0x2,
};

/* 11 */
enum _FILE_INFORMATION_CLASS : __int32
{
  FileDirectoryInformation = 0x1,
  FileFullDirectoryInformation = 0x2,
  FileBothDirectoryInformation = 0x3,
  FileBasicInformation = 0x4,
  FileStandardInformation = 0x5,
  FileInternalInformation = 0x6,
  FileEaInformation = 0x7,
  FileAccessInformation = 0x8,
  FileNameInformation = 0x9,
  FileRenameInformation = 0xA,
  FileLinkInformation = 0xB,
  FileNamesInformation = 0xC,
  FileDispositionInformation = 0xD,
  FilePositionInformation = 0xE,
  FileFullEaInformation = 0xF,
  FileModeInformation = 0x10,
  FileAlignmentInformation = 0x11,
  FileAllInformation = 0x12,
  FileAllocationInformation = 0x13,
  FileEndOfFileInformation = 0x14,
  FileAlternateNameInformation = 0x15,
  FileStreamInformation = 0x16,
  FilePipeInformation = 0x17,
  FilePipeLocalInformation = 0x18,
  FilePipeRemoteInformation = 0x19,
  FileMailslotQueryInformation = 0x1A,
  FileMailslotSetInformation = 0x1B,
  FileCompressionInformation = 0x1C,
  FileObjectIdInformation = 0x1D,
  FileCompletionInformation = 0x1E,
  FileMoveClusterInformation = 0x1F,
  FileQuotaInformation = 0x20,
  FileReparsePointInformation = 0x21,
  FileNetworkOpenInformation = 0x22,
  FileAttributeTagInformation = 0x23,
  FileTrackingInformation = 0x24,
  FileIdBothDirectoryInformation = 0x25,
  FileIdFullDirectoryInformation = 0x26,
  FileValidDataLengthInformation = 0x27,
  FileShortNameInformation = 0x28,
  FileIoCompletionNotificationInformation = 0x29,
  FileIoStatusBlockRangeInformation = 0x2A,
  FileIoPriorityHintInformation = 0x2B,
  FileSfioReserveInformation = 0x2C,
  FileSfioVolumeInformation = 0x2D,
  FileHardLinkInformation = 0x2E,
  FileProcessIdsUsingFileInformation = 0x2F,
  FileNormalizedNameInformation = 0x30,
  FileNetworkPhysicalNameInformation = 0x31,
  FileIdGlobalTxDirectoryInformation = 0x32,
  FileIsRemoteDeviceInformation = 0x33,
  FileUnusedInformation = 0x34,
  FileNumaNodeInformation = 0x35,
  FileStandardLinkInformation = 0x36,
  FileRemoteProtocolInformation = 0x37,
  FileRenameInformationBypassAccessCheck = 0x38,
  FileLinkInformationBypassAccessCheck = 0x39,
  FileVolumeNameInformation = 0x3A,
  FileIdInformation = 0x3B,
  FileIdExtdDirectoryInformation = 0x3C,
  FileReplaceCompletionInformation = 0x3D,
  FileHardLinkFullIdInformation = 0x3E,
  FileIdExtdBothDirectoryInformation = 0x3F,
  FileMaximumInformation = 0x40,
};

/* 12 */
enum _FSINFOCLASS : __int32
{
  FileFsVolumeInformation = 0x1,
  FileFsLabelInformation = 0x2,
  FileFsSizeInformation = 0x3,
  FileFsDeviceInformation = 0x4,
  FileFsAttributeInformation = 0x5,
  FileFsControlInformation = 0x6,
  FileFsFullSizeInformation = 0x7,
  FileFsObjectIdInformation = 0x8,
  FileFsDriverPathInformation = 0x9,
  FileFsVolumeFlagsInformation = 0xA,
  FileFsSectorSizeInformation = 0xB,
  FileFsDataCopyInformation = 0xC,
  FileFsMetadataSizeInformation = 0xD,
  FileFsMaximumInformation = 0xE,
};

/* 13 */
enum _DEVICE_RELATION_TYPE : __int32
{
  BusRelations = 0x0,
  EjectionRelations = 0x1,
  PowerRelations = 0x2,
  RemovalRelations = 0x3,
  TargetDeviceRelation = 0x4,
  SingleBusRelations = 0x5,
  TransportRelations = 0x6,
};

/* 14 */
enum BUS_QUERY_ID_TYPE : __int32
{
  BusQueryDeviceID = 0x0,
  BusQueryHardwareIDs = 0x1,
  BusQueryCompatibleIDs = 0x2,
  BusQueryInstanceID = 0x3,
  BusQueryDeviceSerialNumber = 0x4,
  BusQueryContainerID = 0x5,
};

/* 15 */
enum DEVICE_TEXT_TYPE : __int32
{
  DeviceTextDescription = 0x0,
  DeviceTextLocationInformation = 0x1,
};

/* 16 */
enum _DEVICE_USAGE_NOTIFICATION_TYPE : __int32
{
  DeviceUsageTypeUndefined = 0x0,
  DeviceUsageTypePaging = 0x1,
  DeviceUsageTypeHibernation = 0x2,
  DeviceUsageTypeDumpFile = 0x3,
  DeviceUsageTypeBoot = 0x4,
  DeviceUsageTypePostDisplay = 0x5,
};

/* 17 */
enum _SYSTEM_POWER_STATE : __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 18 */
enum _POWER_STATE_TYPE : __int32
{
  SystemPowerState = 0x0,
  DevicePowerState = 0x1,
};

/* 19 */
enum POWER_ACTION : __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
  PowerActionDisplayOff = 0x8,
};

/* 20 */
enum _IO_PRIORITY_HINT : __int32
{
  IoPriorityVeryLow = 0x0,
  IoPriorityLow = 0x1,
  IoPriorityNormal = 0x2,
  IoPriorityHigh = 0x3,
  IoPriorityCritical = 0x4,
  MaxIoPriorityTypes = 0x5,
};

/* 21 */
enum _MEMORY_CACHING_TYPE : __int32
{
  MmNonCached = 0x0,
  MmCached = 0x1,
  MmWriteCombined = 0x2,
  MmHardwareCoherentCached = 0x3,
  MmNonCachedUnordered = 0x4,
  MmUSWCCached = 0x5,
  MmMaximumCacheType = 0x6,
  MmNotMapped = 0xFFFFFFFF,
};

/* 22 */
enum _MM_PAGE_ACCESS_TYPE : __int32
{
  MmPteAccessType = 0x0,
  MmCcReadAheadType = 0x1,
  MmPfnRepurposeType = 0x2,
  MmMaximumPageAccessType = 0x3,
};

/* 23 */
enum _PF_FILE_ACCESS_TYPE : __int32
{
  PfFileAccessTypeRead = 0x0,
  PfFileAccessTypeWrite = 0x1,
  PfFileAccessTypeMax = 0x2,
};

/* 24 */
enum _DEVICE_POWER_STATE : __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 25 */
enum _DEVICE_WAKE_DEPTH : __int32
{
  DeviceWakeDepthNotWakeable = 0x0,
  DeviceWakeDepthD0 = 0x1,
  DeviceWakeDepthD1 = 0x2,
  DeviceWakeDepthD2 = 0x3,
  DeviceWakeDepthD3hot = 0x4,
  DeviceWakeDepthD3cold = 0x5,
  DeviceWakeDepthMaximum = 0x6,
};

/* 26 */
enum _WHEA_ERROR_TYPE : __int32
{
  WheaErrTypeProcessor = 0x0,
  WheaErrTypeMemory = 0x1,
  WheaErrTypePCIExpress = 0x2,
  WheaErrTypeNMI = 0x3,
  WheaErrTypePCIXBus = 0x4,
  WheaErrTypePCIXDevice = 0x5,
  WheaErrTypeGeneric = 0x6,
};

/* 27 */
enum _WHEA_ERROR_SEVERITY : __int32
{
  WheaErrSevRecoverable = 0x0,
  WheaErrSevFatal = 0x1,
  WheaErrSevCorrected = 0x2,
  WheaErrSevInformational = 0x3,
};

/* 28 */
enum _WHEA_ERROR_SOURCE_TYPE : __int32
{
  WheaErrSrcTypeMCE = 0x0,
  WheaErrSrcTypeCMC = 0x1,
  WheaErrSrcTypeCPE = 0x2,
  WheaErrSrcTypeNMI = 0x3,
  WheaErrSrcTypePCIe = 0x4,
  WheaErrSrcTypeGeneric = 0x5,
  WheaErrSrcTypeINIT = 0x6,
  WheaErrSrcTypeBOOT = 0x7,
  WheaErrSrcTypeSCIGeneric = 0x8,
  WheaErrSrcTypeIPFMCA = 0x9,
  WheaErrSrcTypeIPFCMC = 0xA,
  WheaErrSrcTypeIPFCPE = 0xB,
  WheaErrSrcTypeMax = 0xC,
};

/* 29 */
enum _WHEA_ERROR_PACKET_DATA_FORMAT : __int32
{
  WheaDataFormatIPFSalRecord = 0x0,
  WheaDataFormatXPFMCA = 0x1,
  WheaDataFormatMemory = 0x2,
  WheaDataFormatPCIExpress = 0x3,
  WheaDataFormatNMIPort = 0x4,
  WheaDataFormatPCIXBus = 0x5,
  WheaDataFormatPCIXDevice = 0x6,
  WheaDataFormatGeneric = 0x7,
  WheaDataFormatMax = 0x8,
};

/* 30 */
enum _EVENT_INFO_CLASS : __int32
{
  EventProviderBinaryTrackInfo = 0x0,
  EventProviderSetEnableAllKeywords = 0x1,
  EventProviderSetTraits = 0x2,
  EventProviderUseDescriptorType = 0x3,
  MaxEventInfo = 0x4,
};

/* 31 */
enum _MMLISTS : __int32
{
  ZeroedPageList = 0x0,
  FreePageList = 0x1,
  StandbyPageList = 0x2,
  ModifiedPageList = 0x3,
  ModifiedNoWritePageList = 0x4,
  BadPageList = 0x5,
  ActiveAndValid = 0x6,
  TransitionPage = 0x7,
};

/* 32 */
enum _MI_PFN_CACHE_ATTRIBUTE : __int32
{
  MiNonCached = 0x0,
  MiCached = 0x1,
  MiWriteCombined = 0x2,
  MiNotMapped = 0x3,
};

/* 33 */
enum _MI_SYSTEM_VA_TYPE : __int32
{
  MiVaUnused = 0x0,
  MiVaSessionSpace = 0x1,
  MiVaProcessSpace = 0x2,
  MiVaBootLoaded = 0x3,
  MiVaPfnDatabase = 0x4,
  MiVaNonPagedPool = 0x5,
  MiVaPagedPool = 0x6,
  MiVaSpecialPoolPaged = 0x7,
  MiVaSystemCache = 0x8,
  MiVaSystemPtes = 0x9,
  MiVaHal = 0xA,
  MiVaSessionGlobalSpace = 0xB,
  MiVaDriverImages = 0xC,
  MiVaSpecialPoolNonPaged = 0xD,
  MiVaPagedProtoPool = 0xE,
  MiVaMaximumType = 0xF,
  MiVaSystemPtesLarge = 0x10,
};

/* 34 */
enum _CM_LOAD_FAILURE_TYPE : __int32
{
  _None = 0x0,
  _CmInitializeHive = 0x1,
  _HvInitializeHive = 0x2,
  _HvpBuildMap = 0x3,
  _HvpBuildMapForLoaderHive = 0x4,
  _HvpInitMap = 0x5,
  _HvLoadHive = 0x6,
  _HvpMapHiveImage = 0x7,
  _HvpRecoverData = 0x8,
  _CmpValidateHiveSecurityDescriptors = 0x9,
  _HvpEnlistBinInMap = 0xA,
  _CmCheckRegistry = 0xB,
  _CmRegistryIO = 0xC,
  _CmCheckRegistry2 = 0xD,
  _CmpCheckKey = 0xE,
  _CmpCheckValueList = 0xF,
  _HvCheckHive = 0x10,
  _HvCheckBin = 0x11,
  _HvpGetLogEntryDirtyVector = 0x12,
  _HvpReadLogEntryHeader = 0x13,
  _HvpReadLogEntry = 0x14,
  _CmpMountPreloadedHives = 0x15,
  _CmpLoadHiveThread = 0x16,
};

/* 35 */
enum _CMP_FAILURE_INJECTION_POINT : __int32
{
  CmpFailurePointPoolAllocation = 0x0,
  CmpFailurePointViewMapping = 0x1,
  CmpFailurePointViewPinning = 0x2,
  CmpFailurePointResourceCharging = 0x3,
  CmpFailurePointFileWrite = 0x4,
  CmpFailurePointFileRead = 0x5,
  CmpFailurePointCacheFlush = 0x6,
  CmpFailurePointFlush = 0x7,
  CmpFailurePointFlushAndPurge = 0x8,
  CmpFailurePointForceLargeBin = 0x9,
  CmpFailurePointDontFixAlignment = 0xA,
  CmpFailureInjectionPointCount = 0xB,
};

/* 36 */
enum _PCW_CALLBACK_TYPE : __int32
{
  PcwCallbackAddCounter = 0x0,
  PcwCallbackRemoveCounter = 0x1,
  PcwCallbackEnumerateInstances = 0x2,
  PcwCallbackCollectData = 0x3,
};

/* 37 */
enum _PNP_DEVNODE_STATE : __int32
{
  DeviceNodeUnspecified = 0x300,
  DeviceNodeUninitialized = 0x301,
  DeviceNodeInitialized = 0x302,
  DeviceNodeDriversAdded = 0x303,
  DeviceNodeResourcesAssigned = 0x304,
  DeviceNodeStartPending = 0x305,
  DeviceNodeStartCompletion = 0x306,
  DeviceNodeStartPostWork = 0x307,
  DeviceNodeStarted = 0x308,
  DeviceNodeQueryStopped = 0x309,
  DeviceNodeStopped = 0x30A,
  DeviceNodeRestartCompletion = 0x30B,
  DeviceNodeEnumeratePending = 0x30C,
  DeviceNodeEnumerateCompletion = 0x30D,
  DeviceNodeAwaitingQueuedDeletion = 0x30E,
  DeviceNodeAwaitingQueuedRemoval = 0x30F,
  DeviceNodeQueryRemoved = 0x310,
  DeviceNodeRemovePendingCloses = 0x311,
  DeviceNodeRemoved = 0x312,
  DeviceNodeDeletePendingCloses = 0x313,
  DeviceNodeDeleted = 0x314,
  MaxDeviceNodeState = 0x315,
};

/* 38 */
enum _INTERFACE_TYPE : __int32
{
  InterfaceTypeUndefined = 0xFFFFFFFF,
  Internal = 0x0,
  Isa = 0x1,
  Eisa = 0x2,
  MicroChannel = 0x3,
  TurboChannel = 0x4,
  PCIBus = 0x5,
  VMEBus = 0x6,
  NuBus = 0x7,
  PCMCIABus = 0x8,
  CBus = 0x9,
  MPIBus = 0xA,
  MPSABus = 0xB,
  ProcessorInternal = 0xC,
  InternalPowerBus = 0xD,
  PNPISABus = 0xE,
  PNPBus = 0xF,
  Vmcs = 0x10,
  ACPIBus = 0x11,
  MaximumInterfaceType = 0x12,
};

/* 39 */
enum PROFILE_STATUS : __int32
{
  DOCK_NOTDOCKDEVICE = 0x0,
  DOCK_QUIESCENT = 0x1,
  DOCK_ARRIVING = 0x2,
  DOCK_DEPARTING = 0x3,
  DOCK_EJECTIRP_COMPLETED = 0x4,
};

/* 40 */
enum _TOKEN_INFORMATION_CLASS : __int32
{
  TokenUser = 0x1,
  TokenGroups = 0x2,
  TokenPrivileges = 0x3,
  TokenOwner = 0x4,
  TokenPrimaryGroup = 0x5,
  TokenDefaultDacl = 0x6,
  TokenSource = 0x7,
  TokenType = 0x8,
  TokenImpersonationLevel = 0x9,
  TokenStatistics = 0xA,
  TokenRestrictedSids = 0xB,
  TokenSessionId = 0xC,
  TokenGroupsAndPrivileges = 0xD,
  TokenSessionReference = 0xE,
  TokenSandBoxInert = 0xF,
  TokenAuditPolicy = 0x10,
  TokenOrigin = 0x11,
  TokenElevationType = 0x12,
  TokenLinkedToken = 0x13,
  TokenElevation = 0x14,
  TokenHasRestrictions = 0x15,
  TokenAccessInformation = 0x16,
  TokenVirtualizationAllowed = 0x17,
  TokenVirtualizationEnabled = 0x18,
  TokenIntegrityLevel = 0x19,
  TokenUIAccess = 0x1A,
  TokenMandatoryPolicy = 0x1B,
  TokenLogonSid = 0x1C,
  TokenIsAppContainer = 0x1D,
  TokenCapabilities = 0x1E,
  TokenAppContainerSid = 0x1F,
  TokenAppContainerNumber = 0x20,
  TokenUserClaimAttributes = 0x21,
  TokenDeviceClaimAttributes = 0x22,
  TokenRestrictedUserClaimAttributes = 0x23,
  TokenRestrictedDeviceClaimAttributes = 0x24,
  TokenDeviceGroups = 0x25,
  TokenRestrictedDeviceGroups = 0x26,
  TokenSecurityAttributes = 0x27,
  TokenIsRestricted = 0x28,
  TokenProcessTrustLevel = 0x29,
  TokenPrivateNameSpace = 0x2A,
  MaxTokenInfoClass = 0x2B,
};

/* 41 */
enum _ARBITER_REQUEST_SOURCE : __int32
{
  ArbiterRequestUndefined = 0xFFFFFFFF,
  ArbiterRequestLegacyReported = 0x0,
  ArbiterRequestHalReported = 0x1,
  ArbiterRequestLegacyAssigned = 0x2,
  ArbiterRequestPnpDetected = 0x3,
  ArbiterRequestPnpEnumerated = 0x4,
};

/* 42 */
enum _POWER_REQUEST_TYPE : __int32
{
  PowerRequestDisplayRequired = 0x0,
  PowerRequestSystemRequired = 0x1,
  PowerRequestAwayModeRequired = 0x2,
  PowerRequestExecutionRequired = 0x3,
};

/* 43 */
enum _POWER_REQUEST_TYPE_INTERNAL : __int32
{
  PowerRequestDisplayRequiredInternal = 0x0,
  PowerRequestSystemRequiredInternal = 0x1,
  PowerRequestAwayModeRequiredInternal = 0x2,
  PowerRequestExecutionRequiredInternal = 0x3,
  PowerRequestPerfBoostRequiredInternal = 0x4,
  PowerRequestInternalInvalid = 0x5,
};

/* 44 */
enum _PEP_ACPI_RESOURCE_TYPE : __int32
{
  PepAcpiMemory = 0x0,
  PepAcpiIoPort = 0x1,
  PepAcpiInterrupt = 0x2,
  PepAcpiGpioIo = 0x3,
  PepAcpiGpioInt = 0x4,
  PepAcpiSpbI2c = 0x5,
  PepAcpiSpbSpi = 0x6,
  PepAcpiSpbUart = 0x7,
  PepAcpiExtendedMemory = 0x8,
  PepAcpiExtendedIo = 0x9,
};

/* 45 */
enum _KINTERRUPT_MODE : __int32
{
  LevelSensitive = 0x0,
  Latched = 0x1,
};

/* 46 */
enum _KINTERRUPT_POLARITY : __int32
{
  InterruptPolarityUnknown = 0x0,
  InterruptActiveHigh = 0x1,
  InterruptRisingEdge = 0x1,
  InterruptActiveLow = 0x2,
  InterruptFallingEdge = 0x2,
  InterruptActiveBoth = 0x3,
  InterruptActiveBothTriggerLow = 0x3,
  InterruptActiveBothTriggerHigh = 0x4,
};

/* 47 */
enum _GPIO_PIN_CONFIG_TYPE : __int32
{
  PullDefault = 0x0,
  PullUp = 0x1,
  PullDown = 0x2,
  PullNone = 0x3,
};

/* 48 */
enum _GPIO_PIN_IORESTRICTION_TYPE : __int32
{
  IoRestrictionNone = 0x0,
  IoRestrictionInputOnly = 0x1,
  IoRestrictionOutputOnly = 0x2,
  IoRestrictionNoneAndPreserve = 0x3,
};

/* 49 */
enum SYSTEM_POWER_CONDITION : __int32
{
  PoAc = 0x0,
  PoDc = 0x1,
  PoHot = 0x2,
  PoConditionMaximum = 0x3,
};

/* 50 */
enum _HEAP_FAILURE_TYPE : __int32
{
  heap_failure_internal = 0x0,
  heap_failure_unknown = 0x1,
  heap_failure_generic = 0x2,
  heap_failure_entry_corruption = 0x3,
  heap_failure_multiple_entries_corruption = 0x4,
  heap_failure_virtual_block_corruption = 0x5,
  heap_failure_buffer_overrun = 0x6,
  heap_failure_buffer_underrun = 0x7,
  heap_failure_block_not_busy = 0x8,
  heap_failure_invalid_argument = 0x9,
  heap_failure_usage_after_free = 0xA,
  heap_failure_cross_heap_operation = 0xB,
  heap_failure_freelists_corruption = 0xC,
  heap_failure_listentry_corruption = 0xD,
  heap_failure_lfh_bitmap_mismatch = 0xE,
  heap_failure_segment_lfh_bitmap_corruption = 0xF,
  heap_failure_segment_lfh_double_free = 0x10,
  heap_failure_vs_subsegment_corruption = 0x11,
};

/* 51 */
enum _BLOB_ID : __int32
{
  BLOB_TYPE_UNKNOWN = 0x0,
  BLOB_TYPE_CONNECTION_INFO = 0x1,
  BLOB_TYPE_MESSAGE = 0x2,
  BLOB_TYPE_SECURITY_CONTEXT = 0x3,
  BLOB_TYPE_SECTION = 0x4,
  BLOB_TYPE_REGION = 0x5,
  BLOB_TYPE_VIEW = 0x6,
  BLOB_TYPE_RESERVE = 0x7,
  BLOB_TYPE_DIRECT_TRANSFER = 0x8,
  BLOB_TYPE_HANDLE_DATA = 0x9,
  BLOB_TYPE_MAX_ID = 0xA,
};

/* 52 */
enum _KWAIT_REASON : __int32
{
  Executive = 0x0,
  FreePage = 0x1,
  PageIn = 0x2,
  PoolAllocation = 0x3,
  DelayExecution = 0x4,
  Suspended = 0x5,
  UserRequest = 0x6,
  WrExecutive = 0x7,
  WrFreePage = 0x8,
  WrPageIn = 0x9,
  WrPoolAllocation = 0xA,
  WrDelayExecution = 0xB,
  WrSuspended = 0xC,
  WrUserRequest = 0xD,
  WrSpare0 = 0xE,
  WrQueue = 0xF,
  WrLpcReceive = 0x10,
  WrLpcReply = 0x11,
  WrVirtualMemory = 0x12,
  WrPageOut = 0x13,
  WrRendezvous = 0x14,
  WrKeyedEvent = 0x15,
  WrTerminated = 0x16,
  WrProcessInSwap = 0x17,
  WrCpuRateControl = 0x18,
  WrCalloutStack = 0x19,
  WrKernel = 0x1A,
  WrResource = 0x1B,
  WrPushLock = 0x1C,
  WrMutex = 0x1D,
  WrQuantumEnd = 0x1E,
  WrDispatchInt = 0x1F,
  WrPreempted = 0x20,
  WrYieldExecution = 0x21,
  WrFastMutex = 0x22,
  WrGuardedMutex = 0x23,
  WrRundown = 0x24,
  WrAlertByThreadId = 0x25,
  WrDeferredPreempt = 0x26,
  MaximumWaitReason = 0x27,
};

/* 53 */
enum _EX_POOL_PRIORITY : __int32
{
  LowPoolPriority = 0x0,
  LowPoolPrioritySpecialPoolOverrun = 0x8,
  LowPoolPrioritySpecialPoolUnderrun = 0x9,
  NormalPoolPriority = 0x10,
  NormalPoolPrioritySpecialPoolOverrun = 0x18,
  NormalPoolPrioritySpecialPoolUnderrun = 0x19,
  HighPoolPriority = 0x20,
  HighPoolPrioritySpecialPoolOverrun = 0x28,
  HighPoolPrioritySpecialPoolUnderrun = 0x29,
};

/* 54 */
enum _LOCK_OPERATION : __int32
{
  IoReadAccess = 0x0,
  IoWriteAccess = 0x1,
  IoModifyAccess = 0x2,
};

/* 55 */
enum _IOP_PRIORITY_HINT : __int32
{
  IopIoPriorityNotSet = 0x0,
  IopIoPriorityVeryLow = 0x1,
  IopIoPriorityLow = 0x2,
  IopIoPriorityNormal = 0x3,
  IopIoPriorityHigh = 0x4,
  IopIoPriorityCritical = 0x5,
  MaxIopIoPriorityTypes = 0x6,
};

/* 56 */
enum _TRANSFER_TYPE : __int32
{
  ReadTransfer = 0x0,
  WriteTransfer = 0x1,
  OtherTransfer = 0x2,
};

/* 57 */
enum _CREATE_FILE_TYPE : __int32
{
  CreateFileTypeNone = 0x0,
  CreateFileTypeNamedPipe = 0x1,
  CreateFileTypeMailslot = 0x2,
};

/* 58 */
enum _ETW_RT_EVENT_LOSS : __int32
{
  EtwRtEventNoLoss = 0x0,
  EtwRtEventLost = 0x1,
  EtwRtBufferLost = 0x2,
  EtwRtBackupLost = 0x3,
  EtwRtEventLossMax = 0x4,
};

/* 59 */
enum _KPROFILE_SOURCE : __int32
{
  ProfileTime = 0x0,
  ProfileAlignmentFixup = 0x1,
  ProfileTotalIssues = 0x2,
  ProfilePipelineDry = 0x3,
  ProfileLoadInstructions = 0x4,
  ProfilePipelineFrozen = 0x5,
  ProfileBranchInstructions = 0x6,
  ProfileTotalNonissues = 0x7,
  ProfileDcacheMisses = 0x8,
  ProfileIcacheMisses = 0x9,
  ProfileCacheMisses = 0xA,
  ProfileBranchMispredictions = 0xB,
  ProfileStoreInstructions = 0xC,
  ProfileFpInstructions = 0xD,
  ProfileIntegerInstructions = 0xE,
  Profile2Issue = 0xF,
  Profile3Issue = 0x10,
  Profile4Issue = 0x11,
  ProfileSpecialInstructions = 0x12,
  ProfileTotalCycles = 0x13,
  ProfileIcacheIssues = 0x14,
  ProfileDcacheAccesses = 0x15,
  ProfileMemoryBarrierCycles = 0x16,
  ProfileLoadLinkedIssues = 0x17,
  ProfileMaximum = 0x18,
};

/* 60 */
enum _TOKEN_TYPE : __int32
{
  TokenPrimary = 0x1,
  TokenImpersonation = 0x2,
};

/* 61 */
enum _SECURITY_IMPERSONATION_LEVEL : __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 62 */
enum POWER_POLICY_DEVICE_TYPE : __int32
{
  PolicyDeviceSystemButton = 0x0,
  PolicyDeviceThermalZone = 0x1,
  PolicyDeviceBattery = 0x2,
  PolicyDeviceMemory = 0x3,
  PolicyInitiatePowerActionAPI = 0x4,
  PolicySetPowerStateAPI = 0x5,
  PolicyImmediateDozeS4 = 0x6,
  PolicySystemIdle = 0x7,
  PolicyDeviceWakeAlarm = 0x8,
  PolicyDeviceFan = 0x9,
  PolicyCsBatterySaver = 0xA,
  PolicyDeviceMax = 0xB,
};

/* 63 */
enum _KTIMER2_TYPE : __int32
{
  KTimer2TypeMin = 0x0,
  KTimer2Plain = 0x0,
  KTimer2IdleResilient = 0x1,
  KTimer2HighResolution = 0x2,
  KTimer2NoWake = 0x3,
  KTimer2NoWakeFinite = 0x4,
  KTimer2TypeMax = 0x5,
};

/* 64 */
enum IRPLOCK : __int32
{
  IRPLOCK_CANCELABLE = 0x0,
  IRPLOCK_CANCEL_STARTED = 0x1,
  IRPLOCK_CANCEL_COMPLETE = 0x2,
  IRPLOCK_COMPLETED = 0x3,
};

/* 65 */
enum _PNP_DEVICE_DELETE_TYPE : __int32
{
  QueryRemoveDevice = 0x0,
  CancelRemoveDevice = 0x1,
  RemoveDevice = 0x2,
  SurpriseRemoveDevice = 0x3,
  EjectDevice = 0x4,
  RemoveFailedDevice = 0x5,
  RemoveUnstartedFailedDevice = 0x6,
  MaxDeviceDeleteType = 0x7,
};

/* 66 */
enum _TRACE_INFORMATION_CLASS : __int32
{
  TraceIdClass = 0x0,
  TraceHandleClass = 0x1,
  TraceEnableFlagsClass = 0x2,
  TraceEnableLevelClass = 0x3,
  GlobalLoggerHandleClass = 0x4,
  EventLoggerHandleClass = 0x5,
  AllLoggerHandlesClass = 0x6,
  TraceHandleByNameClass = 0x7,
  LoggerEventsLostClass = 0x8,
  TraceSessionSettingsClass = 0x9,
  LoggerEventsLoggedClass = 0xA,
  DiskIoNotifyRoutinesClass = 0xB,
  TraceInformationClassReserved1 = 0xC,
  AllPossibleNotifyRoutinesClass = 0xC,
  FltIoNotifyRoutinesClass = 0xD,
  TraceInformationClassReserved2 = 0xE,
  WdfNotifyRoutinesClass = 0xF,
  MaxTraceInformationClass = 0x10,
};

/* 67 */
enum _MI_WORKING_SET_TYPE : __int32
{
  MiWorkingSetTypeSystemCache = 0x0,
  MiWorkingSetTypePagedPool = 0x1,
  MiWorkingSetTypeSystemPtes = 0x2,
  MiWorkingSetTypeMaximum = 0x3,
};

/* 68 */
enum SLEEPSTUDY_SPM_SCENARIO_CS_EXIT : __int32
{
  SpmScenarioStopReasonUnspecified = 0x10,
  SpmScenarioStopReasonCsExit = 0x11,
  SpmScenarioStopReasonMax = 0x12,
};

/* 69 */
enum _MI_NODE_NONPAGED_POOL_BITMAP : __int32
{
  NonPagedPoolLargePdeNx = 0x0,
  NonPagedPoolSmallPde = 0x1,
  NonPagedPoolPerPage = 0x2,
};

/* 70 */
enum _USER_ACTIVITY_PRESENCE : __int32
{
  PowerUserPresent = 0x0,
  PowerUserNotPresent = 0x1,
  PowerUserInactive = 0x2,
  PowerUserMaximum = 0x3,
  PowerUserInvalid = 0x3,
};

/* 71 */
enum _WHEA_ERROR_SOURCE_STATE : __int32
{
  WheaErrSrcStateStopped = 0x1,
  WheaErrSrcStateStarted = 0x2,
};

/* 72 */
enum _EXQUEUEINDEX : __int32
{
  ExPoolUntrusted = 0x0,
  ExPoolTrusted = 0x1,
  ExPoolMax = 0x8,
};

/* 73 */
enum _DMA_WIDTH : __int32
{
  Width8Bits = 0x0,
  Width16Bits = 0x1,
  Width32Bits = 0x2,
  Width64Bits = 0x3,
  WidthNoWrap = 0x4,
  MaximumDmaWidth = 0x5,
};

/* 74 */
enum _DMA_SPEED : __int32
{
  Compatible = 0x0,
  TypeA = 0x1,
  TypeB = 0x2,
  TypeC = 0x3,
  TypeF = 0x4,
  MaximumDmaSpeed = 0x5,
};

/* 75 */
enum _PS_RESOURCE_TYPE : __int32
{
  PsResourceNonPagedPool = 0x0,
  PsResourcePagedPool = 0x1,
  PsResourcePageFile = 0x2,
  PsResourceWorkingSet = 0x3,
  PsResourceMax = 0x4,
};

/* 76 */
enum _ETW_HEADER_TYPE : __int32
{
  EtwHeaderTypeNative = 0x0,
  EtwHeaderTypeMax = 0x1,
};

/* 77 */
enum _PNP_VETO_TYPE : __int32
{
  PNP_VetoTypeUnknown = 0x0,
  PNP_VetoLegacyDevice = 0x1,
  PNP_VetoPendingClose = 0x2,
  PNP_VetoWindowsApp = 0x3,
  PNP_VetoWindowsService = 0x4,
  PNP_VetoOutstandingOpen = 0x5,
  PNP_VetoDevice = 0x6,
  PNP_VetoDriver = 0x7,
  PNP_VetoIllegalDeviceRequest = 0x8,
  PNP_VetoInsufficientPower = 0x9,
  PNP_VetoNonDisableable = 0xA,
  PNP_VetoLegacyDriver = 0xB,
  PNP_VetoInsufficientRights = 0xC,
};

/* 78 */
enum _JOBOBJECTINFOCLASS : __int32
{
  JobObjectBasicAccountingInformation = 0x1,
  JobObjectBasicLimitInformation = 0x2,
  JobObjectBasicProcessIdList = 0x3,
  JobObjectBasicUIRestrictions = 0x4,
  JobObjectSecurityLimitInformation = 0x5,
  JobObjectEndOfJobTimeInformation = 0x6,
  JobObjectAssociateCompletionPortInformation = 0x7,
  JobObjectBasicAndIoAccountingInformation = 0x8,
  JobObjectExtendedLimitInformation = 0x9,
  JobObjectJobSetInformation = 0xA,
  JobObjectGroupInformation = 0xB,
  JobObjectNotificationLimitInformation = 0xC,
  JobObjectLimitViolationInformation = 0xD,
  JobObjectGroupInformationEx = 0xE,
  JobObjectCpuRateControlInformation = 0xF,
  JobObjectCompletionFilter = 0x10,
  JobObjectCompletionCounter = 0x11,
  JobObjectFreezeInformation = 0x12,
  JobObjectExtendedAccountingInformation = 0x13,
  JobObjectWakeInformation = 0x14,
  JobObjectBackgroundInformation = 0x15,
  JobObjectSchedulingRankBiasInformation = 0x16,
  JobObjectTimerVirtualizationInformation = 0x17,
  JobObjectCycleTimeNotification = 0x18,
  JobObjectClearEvent = 0x19,
  JobObjectInterferenceInformation = 0x1A,
  JobObjectClearPeakJobMemoryUsed = 0x1B,
  JobObjectMemoryUsageInformation = 0x1C,
  JobObjectSharedCommit = 0x1D,
  JobObjectContainerId = 0x1E,
  JobObjectIoRateControlInformation = 0x1F,
  JobObjectReserved1Information = 0x12,
  JobObjectReserved2Information = 0x13,
  JobObjectReserved3Information = 0x14,
  JobObjectReserved4Information = 0x15,
  JobObjectReserved5Information = 0x16,
  JobObjectReserved6Information = 0x17,
  JobObjectReserved7Information = 0x18,
  JobObjectReserved8Information = 0x19,
  JobObjectReserved9Information = 0x1A,
  JobObjectReserved10Information = 0x1B,
  JobObjectReserved11Information = 0x1C,
  JobObjectReserved12Information = 0x1D,
  JobObjectReserved13Information = 0x1E,
  JobObjectReserved14Information = 0x1F,
  JobObjectNetRateControlInformation = 0x20,
  JobObjectNotificationLimitInformation2 = 0x21,
  JobObjectLimitViolationInformation2 = 0x22,
  JobObjectCreateSilo = 0x23,
  JobObjectSiloBasicInformation = 0x24,
  JobObjectSiloRootDirectory = 0x25,
  JobObjectServerSiloBasicInformation = 0x26,
  JobObjectServerSiloServiceSessionId = 0x27,
  JobObjectServerSiloInitialize = 0x28,
  JobObjectServerSiloDefaultCompartmentId = 0x29,
  MaxJobObjectInfoClass = 0x2A,
};

/* 79 */
enum _CM_SHARE_DISPOSITION : __int32
{
  CmResourceShareUndetermined = 0x0,
  CmResourceShareDeviceExclusive = 0x1,
  CmResourceShareDriverExclusive = 0x2,
  CmResourceShareShared = 0x3,
};

/* 80 */
enum _ConnectionResourceConsumerDesc : __int32
{
  ConnectionResourceConsumerDescIsUndefined = 0x0,
  ConnectionResourceConsumerDescIsDevice = 0x1,
  ConnectionResourceConsumerDescIsOpregion = 0x2,
  ConnectionResourceConsumerDescMax = 0x3,
};

/* 81 */
enum _MM_PREEMPTIVE_TRIMS : __int32
{
  MmPreemptForNonPaged = 0x0,
  MmPreemptForPaged = 0x1,
  MmPreemptForNonPagedPriority = 0x2,
  MmPreemptForPagedPriority = 0x3,
  MmMaximumPreempt = 0x4,
};

/* 82 */
enum _ETW_BUFFER_STATE : __int32
{
  EtwBufferStateFree = 0x0,
  EtwBufferStateGeneralLogging = 0x1,
  EtwBufferStateCSwitch = 0x2,
  EtwBufferStateFlush = 0x3,
  EtwBufferStateMaximum = 0x4,
};

/* 83 */
enum _PROC_HYPERVISOR_STATE : __int32
{
  ProcHypervisorNone = 0x0,
  ProcHypervisorPresent = 0x1,
  ProcHypervisorPower = 0x2,
  ProcHypervisorHvCounters = 0x3,
};

/* 84 */
enum PROFILE_DEPARTURE_STYLE : __int32
{
  PDS_UPDATE_DEFAULT = 0x1,
  PDS_UPDATE_ON_REMOVE = 0x2,
  PDS_UPDATE_ON_INTERFACE = 0x3,
  PDS_UPDATE_ON_EJECT = 0x4,
};

/* 85 */
enum LSA_FOREST_TRUST_RECORD_TYPE : __int32
{
  ForestTrustTopLevelName = 0x0,
  ForestTrustTopLevelNameEx = 0x1,
  ForestTrustDomainInfo = 0x2,
  ForestTrustRecordTypeLast = 0x2,
};

/* 86 */
enum _TYPE_OF_MEMORY : __int32
{
  LoaderExceptionBlock = 0x0,
  LoaderSystemBlock = 0x1,
  LoaderFree = 0x2,
  LoaderBad = 0x3,
  LoaderLoadedProgram = 0x4,
  LoaderFirmwareTemporary = 0x5,
  LoaderFirmwarePermanent = 0x6,
  LoaderOsloaderHeap = 0x7,
  LoaderOsloaderStack = 0x8,
  LoaderSystemCode = 0x9,
  LoaderHalCode = 0xA,
  LoaderBootDriver = 0xB,
  LoaderConsoleInDriver = 0xC,
  LoaderConsoleOutDriver = 0xD,
  LoaderStartupDpcStack = 0xE,
  LoaderStartupKernelStack = 0xF,
  LoaderStartupPanicStack = 0x10,
  LoaderStartupPcrPage = 0x11,
  LoaderStartupPdrPage = 0x12,
  LoaderRegistryData = 0x13,
  LoaderMemoryData = 0x14,
  LoaderNlsData = 0x15,
  LoaderSpecialMemory = 0x16,
  LoaderBBTMemory = 0x17,
  LoaderZero = 0x18,
  LoaderXIPRom = 0x19,
  LoaderHALCachedMemory = 0x1A,
  LoaderLargePageFiller = 0x1B,
  LoaderErrorLogMemory = 0x1C,
  LoaderVsmMemory = 0x1D,
  LoaderFirmwareCode = 0x1E,
  LoaderFirmwareData = 0x1F,
  LoaderFirmwareReserved = 0x20,
  LoaderMaximum = 0x21,
};

/* 87 */
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS : __int32
{
  JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 0x2,
  JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 0x4,
  JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 0x7,
};

/* 88 */
enum PPM_IDLE_BUCKET_TIME_TYPE : __int32
{
  PpmIdleBucketTimeInQpc = 0x0,
  PpmIdleBucketTimeIn100ns = 0x1,
  PpmIdleBucketTimeMaximum = 0x2,
};

/* 89 */
enum _MI_KSTACK_TYPE : __int32
{
  MiRegularKstack = 0x0,
  MiShortLivedKstack = 0x1,
  MiMaximumKstack = 0x2,
};

/* 90 */
enum _DEVPROP_OPERATOR : __int32
{
  DEVPROP_OPERATOR_MODIFIER_NOT = 0x10000,
  DEVPROP_OPERATOR_MODIFIER_IGNORE_CASE = 0x20000,
  DEVPROP_OPERATOR_NONE = 0x0,
  DEVPROP_OPERATOR_EXISTS = 0x1,
  DEVPROP_OPERATOR_NOT_EXISTS = 0x10001,
  DEVPROP_OPERATOR_EQUALS = 0x2,
  DEVPROP_OPERATOR_NOT_EQUALS = 0x10002,
  DEVPROP_OPERATOR_GREATER_THAN = 0x3,
  DEVPROP_OPERATOR_LESS_THAN = 0x4,
  DEVPROP_OPERATOR_GREATER_THAN_EQUALS = 0x5,
  DEVPROP_OPERATOR_LESS_THAN_EQUALS = 0x6,
  DEVPROP_OPERATOR_EQUALS_IGNORE_CASE = 0x20002,
  DEVPROP_OPERATOR_NOT_EQUALS_IGNORE_CASE = 0x30002,
  DEVPROP_OPERATOR_BITWISE_AND = 0x7,
  DEVPROP_OPERATOR_BITWISE_OR = 0x8,
  DEVPROP_OPERATOR_BEGINS_WITH = 0x9,
  DEVPROP_OPERATOR_ENDS_WITH = 0xA,
  DEVPROP_OPERATOR_CONTAINS = 0xB,
  DEVPROP_OPERATOR_BEGINS_WITH_IGNORE_CASE = 0x20009,
  DEVPROP_OPERATOR_ENDS_WITH_IGNORE_CASE = 0x2000A,
  DEVPROP_OPERATOR_CONTAINS_IGNORE_CASE = 0x2000B,
  DEVPROP_OPERATOR_LIST_CONTAINS = 0x1000,
  DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH = 0x2000,
  DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH = 0x3000,
  DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS = 0x4000,
  DEVPROP_OPERATOR_LIST_CONTAINS_IGNORE_CASE = 0x21000,
  DEVPROP_OPERATOR_LIST_ELEMENT_BEGINS_WITH_IGNORE_CASE = 0x22000,
  DEVPROP_OPERATOR_LIST_ELEMENT_ENDS_WITH_IGNORE_CASE = 0x23000,
  DEVPROP_OPERATOR_LIST_ELEMENT_CONTAINS_IGNORE_CASE = 0x24000,
  DEVPROP_OPERATOR_AND_OPEN = 0x100000,
  DEVPROP_OPERATOR_AND_CLOSE = 0x200000,
  DEVPROP_OPERATOR_OR_OPEN = 0x300000,
  DEVPROP_OPERATOR_OR_CLOSE = 0x400000,
  DEVPROP_OPERATOR_NOT_OPEN = 0x500000,
  DEVPROP_OPERATOR_NOT_CLOSE = 0x600000,
  DEVPROP_OPERATOR_ARRAY_CONTAINS = 0x10000000,
  DEVPROP_OPERATOR_MASK_EVAL = 0xFFF,
  DEVPROP_OPERATOR_MASK_LIST = 0xF000,
  DEVPROP_OPERATOR_MASK_MODIFIER = 0xF0000,
  DEVPROP_OPERATOR_MASK_NOT_LOGICAL = 0xF00FFFFF,
  DEVPROP_OPERATOR_MASK_LOGICAL = 0xFF00000,
  DEVPROP_OPERATOR_MASK_ARRAY = 0xF0000000,
};

/* 91 */
enum _TlgBlob_t : __int32
{
  _TlgBlobNone = 0x0,
  _TlgBlobEnd = 0x1,
  _TlgBlobProvider = 0x2,
  _TlgBlobEvent3 = 0x3,
  _TlgBlobProvider3 = 0x4,
  _TlgBlobEvent2 = 0x5,
  _TlgBlobMax = 0x6,
};

/* 92 */
enum _IRQ_PRIORITY : __int32
{
  IrqPriorityUndefined = 0x0,
  IrqPriorityLow = 0x1,
  IrqPriorityNormal = 0x2,
  IrqPriorityHigh = 0x3,
};

/* 93 */
enum _KHETERO_CPU_POLICY : __int32
{
  KHeteroCpuPolicyAll = 0x0,
  KHeteroCpuPolicyLarge = 0x1,
  KHeteroCpuPolicyLargeOrIdle = 0x2,
  KHeteroCpuPolicySmall = 0x3,
  KHeteroCpuPolicySmallOrIdle = 0x4,
  KHeteroCpuPolicyDynamic = 0x5,
  KHeteroCpuPolicyStaticMax = 0x5,
  KHeteroCpuPolicyBiasedSmall = 0x6,
  KHeteroCpuPolicyBiasedLarge = 0x7,
  KHeteroCpuPolicyDefault = 0x8,
  KHeteroCpuPolicyMax = 0x9,
};

/* 94 */
enum _PLUGPLAY_EVENT_CATEGORY : __int32
{
  HardwareProfileChangeEvent = 0x0,
  TargetDeviceChangeEvent = 0x1,
  DeviceClassChangeEvent = 0x2,
  CustomDeviceEvent = 0x3,
  DeviceInstallEvent = 0x4,
  DeviceArrivalEvent = 0x5,
  VetoEvent = 0x6,
  BlockedDriverEvent = 0x7,
  InvalidIDEvent = 0x8,
  DevicePropertyChangeEvent = 0x9,
  DeviceInstanceRemovalEvent = 0xA,
  DeviceInstanceStartedEvent = 0xB,
  MaxPlugEventCategory = 0xC,
};

/* 95 */
enum _MI_MEMORY_HIGHLOW : __int32
{
  MiMemoryHigh = 0x0,
  MiMemoryLow = 0x1,
  MiMemoryHighLow = 0x2,
};

/* 96 */
enum _ETW_STRING_TOKEN_TYPE : __int32
{
  ETW_STRING_TOKEN_EXE = 0x0,
  ETW_STRING_TOKEN_PACKAGE_ID = 0x1,
  ETW_STRING_TOKEN_PKG_APP_ID = 0x2,
  ETW_STRING_TOKEN_MAX_COUNT = 0x3,
};

/* 97 */
enum _OB_OPEN_REASON : __int32
{
  ObCreateHandle = 0x0,
  ObOpenHandle = 0x1,
  ObDuplicateHandle = 0x2,
  ObInheritHandle = 0x3,
  ObMaxOpenReason = 0x4,
};

/* 98 */
enum _SECURITY_OPERATION_CODE : __int32
{
  SetSecurityDescriptor = 0x0,
  QuerySecurityDescriptor = 0x1,
  DeleteSecurityDescriptor = 0x2,
  AssignSecurityDescriptor = 0x3,
};

/* 99 */
enum _MM_POOL_TYPES : __int32
{
  MmNonPagedPool = 0x0,
  MmPagedPool = 0x1,
  MmSessionPagedPool = 0x2,
  MmMaximumPoolType = 0x3,
};

/* 100 */
enum _KWAIT_STATE : __int32
{
  WaitInProgress = 0x0,
  WaitCommitted = 0x1,
  WaitAborted = 0x2,
  WaitSuspendInProgress = 0x3,
  WaitSuspended = 0x4,
  WaitResumeInProgress = 0x5,
  WaitResumeAborted = 0x6,
  WaitFirstSuspendState = 0x3,
  WaitLastSuspendState = 0x6,
  MaximumWaitState = 0x7,
};

/* 101 */
enum _PROCESSOR_CACHE_TYPE : __int32
{
  CacheUnified = 0x0,
  CacheInstruction = 0x1,
  CacheData = 0x2,
  CacheTrace = 0x3,
};

/* 102 */
enum _MEMORY_CACHING_TYPE_ORIG : __int32
{
  MmFrameBufferCached = 0x2,
};

/* 103 */
enum _EXCEPTION_DISPOSITION : __int32
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 104 */
enum _KTHREAD_TAG : __int32
{
  KThreadTagNone = 0x0,
  KThreadTagMediaBuffering = 0x1,
  KThreadTagMax = 0x2,
};

/* 105 */
enum _MM_POOL_PRIORITIES : __int32
{
  MmHighPriority = 0x0,
  MmNormalPriority = 0x1,
  MmLowPriority = 0x2,
  MmMaximumPoolPriority = 0x3,
};

/* 106 */
enum _POP_DEVICE_IDLE_TYPE : __int32
{
  DeviceIdleNormal = 0x0,
  DeviceIdleDisk = 0x1,
};

/* 107 */
enum _KENLISTMENT_STATE : __int32
{
  KEnlistmentUninitialized = 0x0,
  KEnlistmentActive = 0x100,
  KEnlistmentPreparing = 0x101,
  KEnlistmentPrepared = 0x102,
  KEnlistmentInDoubt = 0x103,
  KEnlistmentCommitted = 0x104,
  KEnlistmentCommittedNotify = 0x105,
  KEnlistmentCommitRequested = 0x106,
  KEnlistmentAborted = 0x107,
  KEnlistmentDelegated = 0x108,
  KEnlistmentDelegatedDisconnected = 0x109,
  KEnlistmentPrePreparing = 0x10A,
  KEnlistmentForgotten = 0x10B,
  KEnlistmentRecovering = 0x10C,
  KEnlistmentAborting = 0x10D,
  KEnlistmentReadOnly = 0x10E,
  KEnlistmentOutcomeUnavailable = 0x10F,
  KEnlistmentOffline = 0x110,
  KEnlistmentPrePrepared = 0x111,
  KEnlistmentInitialized = 0x112,
};

/* 108 */
enum _ARBITER_ACTION : __int32
{
  ArbiterActionTestAllocation = 0x0,
  ArbiterActionRetestAllocation = 0x1,
  ArbiterActionCommitAllocation = 0x2,
  ArbiterActionRollbackAllocation = 0x3,
  ArbiterActionQueryAllocatedResources = 0x4,
  ArbiterActionWriteReservedResources = 0x5,
  ArbiterActionQueryConflict = 0x6,
  ArbiterActionQueryArbitrate = 0x7,
  ArbiterActionAddReserved = 0x8,
  ArbiterActionBootAllocation = 0x9,
};

/* 109 */
enum _CM_DIRTY_VECTOR_OPERATION : __int32
{
  DirtyVectorModified = 0x0,
  DirtyDataCaptureStart = 0x1,
  DirtyDataCaptureEnd = 0x2,
};

/* 110 */
enum _KTHREAD_STATE : __int32
{
  Initialized = 0x0,
  Ready = 0x1,
  Running = 0x2,
  Standby = 0x3,
  Terminated = 0x4,
  Waiting = 0x5,
  Transition = 0x6,
  DeferredReady = 0x7,
  GateWaitObsolete = 0x8,
  WaitingForProcessInSwap = 0x9,
};

/* 111 */
enum _IO_ALLOCATION_ACTION : __int32
{
  KeepObject = 0x1,
  DeallocateObject = 0x2,
  DeallocateObjectKeepRegisters = 0x3,
};

/* 112 */
enum _INTERLOCKED_RESULT : __int32
{
  ResultNegative = 0x1,
  ResultZero = 0x0,
  ResultPositive = 0x2,
};

/* 113 */
enum _KOBJECTS : __int32
{
  EventNotificationObject = 0x0,
  EventSynchronizationObject = 0x1,
  MutantObject = 0x2,
  ProcessObject = 0x3,
  QueueObject = 0x4,
  SemaphoreObject = 0x5,
  ThreadObject = 0x6,
  GateObject = 0x7,
  TimerNotificationObject = 0x8,
  TimerSynchronizationObject = 0x9,
  Spare2Object = 0xA,
  Spare3Object = 0xB,
  Spare4Object = 0xC,
  Spare5Object = 0xD,
  Spare6Object = 0xE,
  Spare7Object = 0xF,
  Spare8Object = 0x10,
  ProfileCallbackObject = 0x11,
  ApcObject = 0x12,
  DpcObject = 0x13,
  DeviceQueueObject = 0x14,
  PriQueueObject = 0x15,
  InterruptObject = 0x16,
  ProfileObject = 0x17,
  Timer2NotificationObject = 0x18,
  Timer2SynchronizationObject = 0x19,
  ThreadedDpcObject = 0x1A,
  MaximumKernelObject = 0x1B,
};

/* 114 */
enum _PERFINFO_KERNELMEMORY_USAGE_TYPE : __int32
{
  PerfInfoMemUsagePfnMetadata = 0x0,
  PerfInfoMemUsageMax = 0x1,
};

/* 115 */
enum _MI_AVAILABLE_PAGE_WAIT_TYPES : __int32
{
  AvailablePagesWaitLow = 0x0,
  AvailablePagesWaitHigh = 0x1,
  AvailablePagesWaitMaximum = 0x2,
};

/* 116 */
enum _POLICY_AUDIT_EVENT_TYPE : __int32
{
  AuditCategorySystem = 0x0,
  AuditCategoryLogon = 0x1,
  AuditCategoryObjectAccess = 0x2,
  AuditCategoryPrivilegeUse = 0x3,
  AuditCategoryDetailedTracking = 0x4,
  AuditCategoryPolicyChange = 0x5,
  AuditCategoryAccountManagement = 0x6,
  AuditCategoryDirectoryServiceAccess = 0x7,
  AuditCategoryAccountLogon = 0x8,
};

/* 117 */
enum _PS_PROTECTED_SIGNER : __int32
{
  PsProtectedSignerNone = 0x0,
  PsProtectedSignerAuthenticode = 0x1,
  PsProtectedSignerCodeGen = 0x2,
  PsProtectedSignerAntimalware = 0x3,
  PsProtectedSignerLsa = 0x4,
  PsProtectedSignerWindows = 0x5,
  PsProtectedSignerWinTcb = 0x6,
  PsProtectedSignerMax = 0x7,
};

/* 118 */
enum _PROCESS_VA_TYPE : __int32
{
  ProcessVAImage = 0x0,
  ProcessVASection = 0x1,
  ProcessVAPrivate = 0x2,
  ProcessVAMax = 0x3,
};

/* 119 */
enum _MI_IO_PFN_TYPE : __int32
{
  MiIoPfnProbes = 0x0,
  MiIoPfnMaps = 0x1,
  MiIoPfnUnmapped = 0x2,
  MiMaximumIoPfnType = 0x3,
};

/* 120 */
enum _IO_SESSION_STATE : __int32
{
  IoSessionStateCreated = 0x1,
  IoSessionStateInitialized = 0x2,
  IoSessionStateConnected = 0x3,
  IoSessionStateDisconnected = 0x4,
  IoSessionStateDisconnectedLoggedOn = 0x5,
  IoSessionStateLoggedOn = 0x6,
  IoSessionStateLoggedOff = 0x7,
  IoSessionStateTerminated = 0x8,
  IoSessionStateMax = 0x9,
};

/* 121 */
enum _VI_DEADLOCK_RESOURCE_TYPE : __int32
{
  VfDeadlockUnknown = 0x0,
  VfDeadlockMutex = 0x1,
  VfDeadlockMutexAbandoned = 0x2,
  VfDeadlockFastMutex = 0x3,
  VfDeadlockFastMutexUnsafe = 0x4,
  VfDeadlockSpinLock = 0x5,
  VfDeadlockInStackQueuedSpinLock = 0x6,
  VfDeadlockUnusedSpinLock = 0x7,
  VfDeadlockEresource = 0x8,
  VfDeadlockTypeMaximum = 0x9,
};

/* 122 */
enum _EX_BALANCE_OBJECT : __int32
{
  ExTimerExpiration = 0x0,
  ExThreadSetManagerEvent = 0x1,
  ExThreadReaperEvent = 0x2,
  ExMaximumBalanceObject = 0x3,
};

/* 123 */
enum ReplacesCorHdrNumericDefines : __int32
{
  COMIMAGE_FLAGS_ILONLY = 0x1,
  COMIMAGE_FLAGS_32BITREQUIRED = 0x2,
  COMIMAGE_FLAGS_IL_LIBRARY = 0x4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 0x8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x10,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,
  COR_VERSION_MAJOR_V2 = 0x2,
  COR_VERSION_MAJOR = 0x2,
  COR_VERSION_MINOR = 0x5,
  COR_DELETED_NAME_LENGTH = 0x8,
  COR_VTABLEGAP_NAME_LENGTH = 0x8,
  NATIVE_TYPE_MAX_CB = 0x1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,
  IMAGE_COR_MIH_METHODRVA = 0x1,
  IMAGE_COR_MIH_EHRVA = 0x2,
  IMAGE_COR_MIH_BASICBLOCK = 0x8,
  COR_VTABLE_32BIT = 0x1,
  COR_VTABLE_64BIT = 0x2,
  COR_VTABLE_FROM_UNMANAGED = 0x4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 0x8,
  COR_VTABLE_CALL_MOST_DERIVED = 0x10,
  IMAGE_COR_EATJ_THUNK_SIZE = 0x20,
  MAX_CLASS_NAME = 0x400,
  MAX_PACKAGE_NAME = 0x400,
};

/* 124 */
enum _FUNCTION_TABLE_TYPE : __int32
{
  RF_SORTED = 0x0,
  RF_UNSORTED = 0x1,
  RF_CALLBACK = 0x2,
  RF_KERNEL_DYNAMIC = 0x3,
};

/* 125 */
enum _PROCESS_SECTION_TYPE : __int32
{
  ProcessSectionData = 0x0,
  ProcessSectionImage = 0x1,
  ProcessSectionImageNx = 0x2,
  ProcessSectionPagefileBacked = 0x3,
  ProcessSectionMax = 0x4,
};

/* 126 */
enum _REQUESTER_TYPE : __int32
{
  KernelRequester = 0x0,
  UserProcessRequester = 0x1,
  UserSharedServiceRequester = 0x2,
};

/* 127 */
enum _PNP_DEVICE_ACTION_REQUEST : __int32
{
  AssignResources = 0x0,
  ClearDeviceProblem = 0x1,
  ClearProblem = 0x2,
  ClearEjectProblem = 0x3,
  HaltDevice = 0x4,
  QueryPowerRelations = 0x5,
  Rebalance = 0x6,
  ReenumerateBootDevices = 0x7,
  ReenumerateDeviceOnly = 0x8,
  ReenumerateDeviceTree = 0x9,
  ReenumerateRootDevices = 0xA,
  RequeryDeviceState = 0xB,
  ResetDevice = 0xC,
  ResourceRequirementsChanged = 0xD,
  RestartEnumeration = 0xE,
  SetDeviceProblem = 0xF,
  StartDevice = 0x10,
  StartSystemDevicesPass0 = 0x11,
  StartSystemDevicesPass1 = 0x12,
  NotifyTransportRelationsChange = 0x13,
  NotifyEjectionRelationsChange = 0x14,
  ConfigureDevice = 0x15,
  ConfigureDeviceClass = 0x16,
  ConfigureDeviceExtensions = 0x17,
  ConfigureDeviceReset = 0x18,
};

/* 128 */
enum _HARDWARE_COUNTER_TYPE : __int32
{
  PMCCounter = 0x0,
  MaxHardwareCounterType = 0x1,
};

/* 129 */
enum _ARBITER_RESULT : __int32
{
  ArbiterResultUndefined = 0xFFFFFFFF,
  ArbiterResultSuccess = 0x0,
  ArbiterResultExternalConflict = 0x1,
  ArbiterResultNullRequest = 0x2,
};

/* 130 */
enum _ETW_PERFECT_HASH_FUNCTION_TYPE : __int32
{
  ETW_PHF_EVENT_ID = 0x0,
  ETW_PHF_STACK_WALK = 0x1,
  ETW_PHF_MAX_COUNT = 0x2,
};

/* 131 */
enum _LDR_DLL_LOAD_REASON : __int32
{
  LoadReasonStaticDependency = 0x0,
  LoadReasonStaticForwarderDependency = 0x1,
  LoadReasonDynamicForwarderDependency = 0x2,
  LoadReasonDelayloadDependency = 0x3,
  LoadReasonDynamicLoad = 0x4,
  LoadReasonAsImageLoad = 0x5,
  LoadReasonAsDataLoad = 0x6,
  LoadReasonUnknown = 0xFFFFFFFF,
};

/* 132 */
enum _LDR_DDAG_STATE : __int32
{
  LdrModulesMerged = 0xFFFFFFFB,
  LdrModulesInitError = 0xFFFFFFFC,
  LdrModulesSnapError = 0xFFFFFFFD,
  LdrModulesUnloaded = 0xFFFFFFFE,
  LdrModulesUnloading = 0xFFFFFFFF,
  LdrModulesPlaceHolder = 0x0,
  LdrModulesMapping = 0x1,
  LdrModulesMapped = 0x2,
  LdrModulesWaitingForDependencies = 0x3,
  LdrModulesSnapping = 0x4,
  LdrModulesSnapped = 0x5,
  LdrModulesCondensed = 0x6,
  LdrModulesReadyToInit = 0x7,
  LdrModulesInitializing = 0x8,
  LdrModulesReadyToRun = 0x9,
};

/* 133 */
enum _PS_WAKE_REASON : __int32
{
  PsWakeReasonUser = 0x0,
  PsWakeReasonExecutionRequired = 0x1,
  PsWakeReasonKernel = 0x2,
  PsWakeReasonInstrumentation = 0x3,
  PsWakeReasonPreserveProcess = 0x4,
  PsMaxWakeReasons = 0x5,
};

/* 134 */
enum _OBJECT_INFORMATION_CLASS : __int32
{
  ObjectBasicInformation = 0x0,
  ObjectNameInformation = 0x1,
  ObjectTypeInformation = 0x2,
  ObjectTypesInformation = 0x3,
  ObjectHandleFlagInformation = 0x4,
  ObjectSessionInformation = 0x5,
  MaxObjectInfoClass = 0x6,
};

/* 135 */
enum _KWAIT_BLOCK_STATE : __int32
{
  WaitBlockBypassStart = 0x0,
  WaitBlockBypassComplete = 0x1,
  WaitBlockSuspendBypassStart = 0x2,
  WaitBlockSuspendBypassComplete = 0x3,
  WaitBlockActive = 0x4,
  WaitBlockInactive = 0x5,
  WaitBlockSuspended = 0x6,
  WaitBlockAllStates = 0x7,
};

/* 136 */
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS : __int32
{
  JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 0x1,
  JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 0x1,
};

/* 137 */
enum _KRESOURCEMANAGER_STATE : __int32
{
  KResourceManagerUninitialized = 0x0,
  KResourceManagerOffline = 0x1,
  KResourceManagerOnline = 0x2,
};

/* 138 */
enum _MM_POOL_FAILURE_REASONS : __int32
{
  MmNonPagedNoPtes = 0x0,
  MmPriorityTooLow = 0x1,
  MmNonPagedNoPagesAvailable = 0x2,
  MmPagedNoPtes = 0x3,
  MmSessionPagedNoPtes = 0x4,
  MmPagedNoPagesAvailable = 0x5,
  MmSessionPagedNoPagesAvailable = 0x6,
  MmPagedNoCommit = 0x7,
  MmSessionPagedNoCommit = 0x8,
  MmNonPagedNoResidentAvailable = 0x9,
  MmNonPagedNoCommit = 0xA,
  MmMaximumFailureReason = 0xB,
};

/* 139 */
enum _KPROCESS_STATE : __int32
{
  ProcessInMemory = 0x0,
  ProcessOutOfMemory = 0x1,
  ProcessInTransition = 0x2,
  ProcessOutTransition = 0x3,
  ProcessInSwap = 0x4,
  ProcessOutSwap = 0x5,
  ProcessRetryOutSwap = 0x6,
  ProcessAllSwapStates = 0x7,
};

/* 140 */
enum _TlgIn_t : __int32
{
  _TlgInNULL = 0x0,
  _TlgInUNICODESTRING = 0x1,
  _TlgInANSISTRING = 0x2,
  _TlgInINT8 = 0x3,
  _TlgInUINT8 = 0x4,
  _TlgInINT16 = 0x5,
  _TlgInUINT16 = 0x6,
  _TlgInINT32 = 0x7,
  _TlgInUINT32 = 0x8,
  _TlgInINT64 = 0x9,
  _TlgInUINT64 = 0xA,
  _TlgInFLOAT = 0xB,
  _TlgInDOUBLE = 0xC,
  _TlgInBOOL32 = 0xD,
  _TlgInBINARY = 0xE,
  _TlgInGUID = 0xF,
  _TlgInPOINTER_unsupported = 0x10,
  _TlgInFILETIME = 0x11,
  _TlgInSYSTEMTIME = 0x12,
  _TlgInSID = 0x13,
  _TlgInHEXINT32 = 0x14,
  _TlgInHEXINT64 = 0x15,
  _TlgInCOUNTEDSTRING = 0x16,
  _TlgInCOUNTEDANSISTRING = 0x17,
  _TlgInSTRUCT = 0x18,
  _TlgInMax = 0x19,
  _TlgInINTPTR = 0x7,
  _TlgInUINTPTR = 0x8,
  _TlgInPOINTER = 0x14,
  _TlgInCcount = 0x20,
  _TlgInVcount = 0x40,
  _TlgInChain = 0x80,
  _TlgInCustom = 0x60,
  _TlgInTypeMask = 0x1F,
  _TlgInCountMask = 0x60,
  _TlgInFlagMask = 0xE0,
};

/* 141 */
enum _WORKING_SET_TYPE : __int32
{
  WorkingSetTypeUser = 0x0,
  WorkingSetTypeSession = 0x1,
  WorkingSetTypeSystemTypes = 0x2,
  WorkingSetTypeSystemCache = 0x2,
  WorkingSetTypePagedPool = 0x3,
  WorkingSetTypeSystemPtes = 0x4,
  WorkingSetTypeMaximum = 0x5,
};

/* 142 */
enum _KERNEL_STACK_LIMITS : __int32
{
  BugcheckStackLimits = 0x0,
  DPCStackLimits = 0x1,
  ExpandedStackLimits = 0x2,
  NormalStackLimits = 0x3,
  Win32kStackLimits = 0x4,
  SwapBusyStackLimits = 0x5,
  IsrStackLimits = 0x6,
  MaximumStackLimits = 0x7,
};

/* 143 */
enum _MI_CFG_BITMAP_TYPE : __int32
{
  CfgBitMapNative = 0x0,
  CfgBitMapMax = 0x1,
};

/* 144 */
enum KTM_STATE : __int32
{
  KKtmUninitialized = 0x0,
  KKtmInitialized = 0x1,
  KKtmRecovering = 0x2,
  KKtmOnline = 0x3,
  KKtmRecoveryFailed = 0x4,
  KKtmOffline = 0x5,
};

/* 145 */
enum _KTRANSACTION_STATE : __int32
{
  KTransactionUninitialized = 0x0,
  KTransactionActive = 0x1,
  KTransactionPreparing = 0x2,
  KTransactionPrepared = 0x3,
  KTransactionInDoubt = 0x4,
  KTransactionCommitted = 0x5,
  KTransactionAborted = 0x6,
  KTransactionDelegated = 0x7,
  KTransactionPrePreparing = 0x8,
  KTransactionForgotten = 0x9,
  KTransactionRecovering = 0xA,
  KTransactionPrePrepared = 0xB,
};

/* 146 */
enum _KTRANSACTION_OUTCOME : __int32
{
  KTxOutcomeUninitialized = 0x0,
  KTxOutcomeUndetermined = 0x1,
  KTxOutcomeCommitted = 0x2,
  KTxOutcomeAborted = 0x3,
  KTxOutcomeUnavailable = 0x4,
};

/* 147 */
enum UoWActionType : __int32
{
  UoWAddThisKey = 0x0,
  UoWAddChildKey = 0x1,
  UoWDeleteThisKey = 0x2,
  UoWDeleteChildKey = 0x3,
  UoWSetValueNew = 0x4,
  UoWSetValueExisting = 0x5,
  UoWDeleteValue = 0x6,
  UoWSetKeyUserFlags = 0x7,
  UoWSetLastWriteTime = 0x8,
  UoWSetSecurityDescriptor = 0x9,
  UoWRenameSubKey = 0xA,
  UoWRenameOldSubKey = 0xB,
  UoWRenameNewSubKey = 0xC,
  UoWIsolation = 0xD,
  UoWInvalid = 0xE,
};

/* 148 */
enum HSTORAGE_TYPE : __int32
{
  Stable = 0x0,
  Volatile = 0x1,
  InvalidStorage = 0x2,
};

/* 149 */
enum _WOW64_SHARED_INFORMATION : __int32
{
  SharedNtdll32LdrInitializeThunk = 0x0,
  SharedNtdll32KiUserExceptionDispatcher = 0x1,
  SharedNtdll32KiUserApcDispatcher = 0x2,
  SharedNtdll32KiUserCallbackDispatcher = 0x3,
  SharedNtdll32ExpInterlockedPopEntrySListFault = 0x4,
  SharedNtdll32ExpInterlockedPopEntrySListResume = 0x5,
  SharedNtdll32ExpInterlockedPopEntrySListEnd = 0x6,
  SharedNtdll32RtlUserThreadStart = 0x7,
  SharedNtdll32pQueryProcessDebugInformationRemote = 0x8,
  SharedNtdll32BaseAddress = 0x9,
  SharedNtdll32LdrSystemDllInitBlock = 0xA,
  Wow64SharedPageEntriesCount = 0xB,
};

/* 150 */
enum _REG_NOTIFY_CLASS : __int32
{
  RegNtDeleteKey = 0x0,
  RegNtPreDeleteKey = 0x0,
  RegNtSetValueKey = 0x1,
  RegNtPreSetValueKey = 0x1,
  RegNtDeleteValueKey = 0x2,
  RegNtPreDeleteValueKey = 0x2,
  RegNtSetInformationKey = 0x3,
  RegNtPreSetInformationKey = 0x3,
  RegNtRenameKey = 0x4,
  RegNtPreRenameKey = 0x4,
  RegNtEnumerateKey = 0x5,
  RegNtPreEnumerateKey = 0x5,
  RegNtEnumerateValueKey = 0x6,
  RegNtPreEnumerateValueKey = 0x6,
  RegNtQueryKey = 0x7,
  RegNtPreQueryKey = 0x7,
  RegNtQueryValueKey = 0x8,
  RegNtPreQueryValueKey = 0x8,
  RegNtQueryMultipleValueKey = 0x9,
  RegNtPreQueryMultipleValueKey = 0x9,
  RegNtPreCreateKey = 0xA,
  RegNtPostCreateKey = 0xB,
  RegNtPreOpenKey = 0xC,
  RegNtPostOpenKey = 0xD,
  RegNtKeyHandleClose = 0xE,
  RegNtPreKeyHandleClose = 0xE,
  RegNtPostDeleteKey = 0xF,
  RegNtPostSetValueKey = 0x10,
  RegNtPostDeleteValueKey = 0x11,
  RegNtPostSetInformationKey = 0x12,
  RegNtPostRenameKey = 0x13,
  RegNtPostEnumerateKey = 0x14,
  RegNtPostEnumerateValueKey = 0x15,
  RegNtPostQueryKey = 0x16,
  RegNtPostQueryValueKey = 0x17,
  RegNtPostQueryMultipleValueKey = 0x18,
  RegNtPostKeyHandleClose = 0x19,
  RegNtPreCreateKeyEx = 0x1A,
  RegNtPostCreateKeyEx = 0x1B,
  RegNtPreOpenKeyEx = 0x1C,
  RegNtPostOpenKeyEx = 0x1D,
  RegNtPreFlushKey = 0x1E,
  RegNtPostFlushKey = 0x1F,
  RegNtPreLoadKey = 0x20,
  RegNtPostLoadKey = 0x21,
  RegNtPreUnLoadKey = 0x22,
  RegNtPostUnLoadKey = 0x23,
  RegNtPreQueryKeySecurity = 0x24,
  RegNtPostQueryKeySecurity = 0x25,
  RegNtPreSetKeySecurity = 0x26,
  RegNtPostSetKeySecurity = 0x27,
  RegNtCallbackObjectContextCleanup = 0x28,
  RegNtPreRestoreKey = 0x29,
  RegNtPostRestoreKey = 0x2A,
  RegNtPreSaveKey = 0x2B,
  RegNtPostSaveKey = 0x2C,
  RegNtPreReplaceKey = 0x2D,
  RegNtPostReplaceKey = 0x2E,
  RegNtPreQueryKeyName = 0x2F,
  RegNtPostQueryKeyName = 0x30,
  MaxRegNtNotifyClass = 0x31,
};

/* 151 */
enum _TlgOut_t : __int32
{
  _TlgOutNULL = 0x0,
  _TlgOutNOPRINT = 0x1,
  _TlgOutSTRING = 0x2,
  _TlgOutBOOLEAN = 0x3,
  _TlgOutHEX = 0x4,
  _TlgOutPID = 0x5,
  _TlgOutTID = 0x6,
  _TlgOutPORT = 0x7,
  _TlgOutIPV4 = 0x8,
  _TlgOutIPV6 = 0x9,
  _TlgOutSOCKETADDRESS = 0xA,
  _TlgOutXML = 0xB,
  _TlgOutJSON = 0xC,
  _TlgOutWIN32ERROR = 0xD,
  _TlgOutNTSTATUS = 0xE,
  _TlgOutHRESULT = 0xF,
  _TlgOutFILETIME = 0x10,
  _TlgOutSIGNED = 0x11,
  _TlgOutUNSIGNED = 0x12,
  _TlgOutMax = 0x13,
  _TlgOutChain = 0x80,
  _TlgOutTypeMask = 0x7F,
};

/* 152 */
enum _PERFINFO_MM_STAT : __int32
{
  PerfInfoMMStatNotUsed = 0x0,
  PerfInfoMMStatAggregatePageCombine = 0x1,
  PerfInfoMMStatIterationPageCombine = 0x2,
  PerfInfoMMStatMax = 0x3,
};

/* 153 */
enum _FILE_OBJECT_EXTENSION_TYPE : __int32
{
  FoExtTypeTransactionParams = 0x0,
  FoExtTypeInternal = 0x1,
  FoExtTypeIosbRange = 0x2,
  FoExtTypeGeneric = 0x3,
  FoExtTypeSfio = 0x4,
  FoExtTypeSymlink = 0x5,
  FoExtTypeOplockKey = 0x6,
  MaxFoExtTypes = 0x7,
};

/* 154 */
enum _MI_MEMORY_EVENT_TYPES : __int32
{
  LowAvailablePagesEvent = 0x0,
  HighAvailablePagesEvent = 0x1,
  LowPagedPoolEvent = 0x2,
  HighPagedPoolEvent = 0x3,
  LowNonPagedPoolEvent = 0x4,
  HighNonPagedPoolEvent = 0x5,
  LowCommitEvent = 0x6,
  HighCommitEvent = 0x7,
  MaximumCommitEvent = 0x8,
  BadMemoryDetectedEvent = 0x9,
  PhysicalMemoryChangeEvent = 0xA,
  TotalNumberOfMemoryEvents = 0xB,
};

/* 155 */
enum _MI_LOCK_ACQUIRE_TYPE : __int32
{
  MiAcquireExclusive = 0x0,
  MiAcquireExclusiveAutoExpand = 0x1,
  MiAcquireShared = 0x2,
  MiAcquireSharedAutoExpand = 0x3,
};

/* 156 */
enum _tag_ARMINTR_BARRIER_TYPE : __int32
{
  _ARM_BARRIER_SY = 0xF,
  _ARM_BARRIER_ST = 0xE,
  _ARM_BARRIER_ISH = 0xB,
  _ARM_BARRIER_ISHST = 0xA,
  _ARM_BARRIER_NSH = 0x7,
  _ARM_BARRIER_NSHST = 0x6,
  _ARM_BARRIER_OSH = 0x3,
  _ARM_BARRIER_OSHST = 0x2,
};

/* 157 */
enum _MI_DYNAMICBASE_BITMAP : __int32
{
  DynamicBaseBitMap32 = 0x0,
  LastDynamicBaseBitMap = 0x1,
};

/* 158 */
enum _FS_FILTER_SECTION_SYNC_TYPE : __int32
{
  SyncTypeOther = 0x0,
  SyncTypeCreateSection = 0x1,
};

/* 159 */
enum _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE : __int32
{
  NotifyTypeCreate = 0x0,
  NotifyTypeRetired = 0x1,
};

/* 160 */
enum _POP_IO_STATUS : __int32
{
  IoReady = 0x0,
  IoPending = 0x1,
  IoDone = 0x2,
};

/* 161 */
enum INTERRUPT_CONNECTION_TYPE : __int32
{
  InterruptTypeControllerInput = 0x0,
  InterruptTypeXapicMessage = 0x1,
  InterruptTypeHypertransport = 0x2,
  InterruptTypeMessageRequest = 0x3,
};

/* 162 */
enum HAL_APIC_DESTINATION_MODE : __int32
{
  ApicDestinationModePhysical = 0x1,
  ApicDestinationModeLogicalFlat = 0x2,
  ApicDestinationModeLogicalClustered = 0x3,
  ApicDestinationModeUnknown = 0x4,
};

/* 163 */
enum _PO_FX_PERF_STATE_UNIT : __int32
{
  PoFxPerfStateUnitOther = 0x0,
  PoFxPerfStateUnitFrequency = 0x1,
  PoFxPerfStateUnitBandwidth = 0x2,
  PoFxPerfStateUnitMaximum = 0x3,
};

/* 164 */
enum _PO_FX_PERF_STATE_TYPE : __int32
{
  PoFxPerfStateTypeDiscrete = 0x0,
  PoFxPerfStateTypeRange = 0x1,
  PoFxPerfStateTypeMaximum = 0x2,
};

/* 165 */
enum _DUMP_EVENTS : __int32
{
  DUMP_EVENT_NONE = 0x0,
  DUMP_EVENT_HIBER_RESUME = 0x1,
  DUMP_EVENT_HIBER_RESUME_END = 0x2,
};

/* 166 */
enum _ETW_NOTIFICATION_TYPE : __int32
{
  EtwNotificationTypeNoReply = 0x1,
  EtwNotificationTypeLegacyEnable = 0x2,
  EtwNotificationTypeEnable = 0x3,
  EtwNotificationTypePrivateLogger = 0x4,
  EtwNotificationTypePerflib = 0x5,
  EtwNotificationTypeAudio = 0x6,
  EtwNotificationTypeSession = 0x7,
  EtwNotificationTypeReserved = 0x8,
  EtwNotificationTypeCredentialUI = 0x9,
  EtwNotificationTypeInProcSession = 0xA,
  EtwNotificationTypeMax = 0xB,
};

/* 167 */
enum _RTL_GENERIC_COMPARE_RESULTS : __int32
{
  GenericLessThan = 0x0,
  GenericGreaterThan = 0x1,
  GenericEqual = 0x2,
};

/* 168 */
enum $E629E57EB416A4DD55ADB1883CE94280 : __int32
{
  KTMOH_CommitTransaction_Result = 0x1,
  KTMOH_RollbackTransaction_Result = 0x2,
};

/* 169 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 170 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 171 */
union __n64
{
  unsigned __int64 n64_u64[1];
  unsigned int n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  int n64_i32[2];
  __int16 n64_i16[4];
  char n64_i8[8];
  float n64_f32[2];
};

/* 172 */
volatile struct _KSYSTEM_TIME
{
  unsigned int LowPart;
  int High1Time;
  int High2Time;
};

/* 173 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 174 */
union _LARGE_INTEGER
{
  $FAF74743FBE1C8632047CFB668F7028A __s0;
  $FAF74743FBE1C8632047CFB668F7028A u;
  __int64 QuadPart;
};

/* 175 */
struct _XSTATE_FEATURE
{
  unsigned int Offset;
  unsigned int Size;
};

/* 176 */
struct __declspec(align(8)) _XSTATE_CONFIGURATION
{
  unsigned __int64 EnabledFeatures;
  unsigned __int64 EnabledVolatileFeatures;
  unsigned int Size;
  unsigned __int32 OptimizedSave : 1;
  unsigned __int32 CompactionEnabled : 1;
  _XSTATE_FEATURE Features[64];
  unsigned __int64 EnabledSupervisorFeatures;
  unsigned __int64 AlignedFeatures;
  unsigned int AllFeatureSize;
  unsigned int AllFeatures[64];
};

/* 177 */
struct $3D940D5D03EF7F98CEE6737EDE752E57
{
  unsigned __int8 NXSupportPolicy : 2;
  unsigned __int8 SEHValidationPolicy : 2;
  unsigned __int8 CurDirDevicesSkippedForDlls : 2;
  unsigned __int8 Reserved : 2;
};

/* 178 */
union $3439A0D9DA1416B979A5766BF640B160
{
  unsigned __int8 MitigationPolicies;
  $3D940D5D03EF7F98CEE6737EDE752E57 __s1;
};

/* 179 */
struct $042777AACEF09CA43CC53981BC5BDACA
{
  unsigned __int32 DbgErrorPortPresent : 1;
  unsigned __int32 DbgElevationEnabled : 1;
  unsigned __int32 DbgVirtEnabled : 1;
  unsigned __int32 DbgInstallerDetectEnabled : 1;
  unsigned __int32 DbgLkgEnabled : 1;
  unsigned __int32 DbgDynProcessorEnabled : 1;
  unsigned __int32 DbgConsoleBrokerEnabled : 1;
  unsigned __int32 DbgSecureBootEnabled : 1;
  unsigned __int32 DbgMultiSessionSku : 1;
  unsigned __int32 SpareBits : 23;
};

/* 180 */
union $8A59C83F633290A337682D025127E316
{
  unsigned int SharedDataFlags;
  $042777AACEF09CA43CC53981BC5BDACA __s1;
};

/* 181 */
union __unaligned __declspec(align(4)) $DCA3D995392F9C1B72F6DF2F9518F119
{
  volatile _KSYSTEM_TIME TickCount;
  volatile unsigned __int64 TickCountQuad;
  unsigned int ReservedTickCountOverlay[3];
};

/* 182 */
struct $F91ACE6F13277DFC9425B9B8BBCB30F7
{
  volatile unsigned __int8 QpcBypassEnabled;
  unsigned __int8 QpcShift;
};

/* 183 */
union $260753E164D1E994300A422E7B1E008F
{
  unsigned __int16 QpcData;
  $F91ACE6F13277DFC9425B9B8BBCB30F7 __s1;
};

/* 184 */
struct _KUSER_SHARED_DATA
{
  unsigned int TickCountLowDeprecated;
  unsigned int TickCountMultiplier;
  volatile _KSYSTEM_TIME InterruptTime;
  volatile _KSYSTEM_TIME SystemTime;
  volatile _KSYSTEM_TIME TimeZoneBias;
  unsigned __int16 ImageNumberLow;
  unsigned __int16 ImageNumberHigh;
  wchar_t NtSystemRoot[260];
  unsigned int MaxStackTraceDepth;
  unsigned int CryptoExponent;
  unsigned int TimeZoneId;
  unsigned int LargePageMinimum;
  unsigned int AitSamplingValue;
  unsigned int AppCompatFlag;
  unsigned __int64 RNGSeedVersion;
  unsigned int GlobalValidationRunlevel;
  volatile int TimeZoneBiasStamp;
  unsigned int NtBuildNumber;
  _NT_PRODUCT_TYPE NtProductType;
  unsigned __int8 ProductTypeIsValid;
  unsigned __int8 Reserved0[1];
  unsigned __int16 NativeProcessorArchitecture;
  unsigned int NtMajorVersion;
  unsigned int NtMinorVersion;
  unsigned __int8 ProcessorFeatures[64];
  unsigned int Reserved1;
  unsigned int Reserved3;
  volatile unsigned int TimeSlip;
  _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  unsigned int BootId;
  _LARGE_INTEGER SystemExpirationDate;
  unsigned int SuiteMask;
  unsigned __int8 KdDebuggerEnabled;
  $3439A0D9DA1416B979A5766BF640B160 ___u33;
  unsigned __int8 Reserved6[2];
  volatile unsigned int ActiveConsoleId;
  volatile unsigned int DismountCount;
  unsigned int ComPlusPackage;
  unsigned int LastSystemRITEventTickCount;
  unsigned int NumberOfPhysicalPages;
  unsigned __int8 SafeBootMode;
  unsigned __int8 Reserved12[3];
  $8A59C83F633290A337682D025127E316 ___u42;
  unsigned int DataFlagsPad[1];
  unsigned __int64 TestRetInstruction;
  __int64 QpcFrequency;
  unsigned __int64 SystemCallPad[3];
  $DCA3D995392F9C1B72F6DF2F9518F119 ___u47;
  unsigned int TickCountPad[1];
  unsigned int Cookie;
  unsigned int CookiePad[1];
  __int64 ConsoleSessionForegroundProcessId;
  unsigned __int64 TimeUpdateLock;
  unsigned __int64 BaselineSystemTimeQpc;
  unsigned __int64 BaselineInterruptTimeQpc;
  unsigned __int64 QpcSystemTimeIncrement;
  unsigned __int64 QpcInterruptTimeIncrement;
  unsigned __int8 QpcSystemTimeIncrementShift;
  unsigned __int8 QpcInterruptTimeIncrementShift;
  unsigned __int16 UnparkedProcessorCount;
  unsigned __int8 Reserved8[20];
  unsigned __int16 UserModeGlobalLogger[16];
  unsigned int ImageFileExecutionOptions;
  unsigned int LangGenerationCount;
  unsigned __int64 Reserved4;
  volatile unsigned __int64 InterruptTimeBias;
  volatile unsigned __int64 QpcBias;
  unsigned int ActiveProcessorCount;
  volatile unsigned __int8 ActiveGroupCount;
  unsigned __int8 Reserved9;
  $260753E164D1E994300A422E7B1E008F ___u70;
  _LARGE_INTEGER TimeZoneBiasEffectiveStart;
  _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
  _XSTATE_CONFIGURATION XState;
};

/* 185 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 186 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 187 */
struct $8C32E5D3ED1763EA38B94549972C5F20
{
  unsigned __int32 LongFunction : 1;
  unsigned __int32 Persistent : 1;
  unsigned __int32 Private : 30;
};

/* 188 */
union $FFBDDA54F343445E3BFE9CC72CE5FC78
{
  unsigned int Flags;
  $8C32E5D3ED1763EA38B94549972C5F20 s;
};

/* 189 */
struct _TP_CALLBACK_ENVIRON_V3
{
  unsigned int Version;
  struct _TP_POOL *Pool;
  struct _TP_CLEANUP_GROUP *CleanupGroup;
  void (__cdecl *CleanupGroupCancelCallback)(void *, void *);
  void *RaceDll;
  struct _ACTIVATION_CONTEXT *ActivationContext;
  void (__cdecl *FinalizationCallback)(struct _TP_CALLBACK_INSTANCE *, void *);
  $FFBDDA54F343445E3BFE9CC72CE5FC78 u;
  _TP_CALLBACK_PRIORITY CallbackPriority;
  unsigned int Size;
};

/* 190 */
struct _LIST_ENTRY
{
  _LIST_ENTRY *Flink;
  _LIST_ENTRY *Blink;
};

/* 191 */
struct _SINGLE_LIST_ENTRY
{
  _SINGLE_LIST_ENTRY *Next;
};

/* 192 */
struct _RTL_SPLAY_LINKS
{
  _RTL_SPLAY_LINKS *Parent;
  _RTL_SPLAY_LINKS *LeftChild;
  _RTL_SPLAY_LINKS *RightChild;
};

/* 193 */
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT
{
  _LIST_ENTRY *ChainHead;
  _LIST_ENTRY *PrevLinkage;
  unsigned int Signature;
};

/* 194 */
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY
{
  _LIST_ENTRY Linkage;
  unsigned int Signature;
};

/* 195 */
union $BCEC7CFD66340FD2EE641E2F5EF91E3B
{
  _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  _LIST_ENTRY *CurEntry;
};

/* 196 */
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
{
  $BCEC7CFD66340FD2EE641E2F5EF91E3B ___u0;
  _LIST_ENTRY *ChainHead;
  unsigned int BucketIndex;
};

/* 197 */
struct _RTL_DYNAMIC_HASH_TABLE
{
  unsigned int Flags;
  unsigned int Shift;
  unsigned int TableSize;
  unsigned int Pivot;
  unsigned int DivisorMask;
  unsigned int NumEntries;
  unsigned int NonEmptyBuckets;
  unsigned int NumEnumerators;
  void *Directory;
};

/* 198 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int16 *Buffer;
};

/* 199 */
struct _STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  char *Buffer;
};

/* 200 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 201 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 202 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 203 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 204 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 205 */
struct _IMAGE_DOS_HEADER
{
  unsigned __int16 e_magic;
  unsigned __int16 e_cblp;
  unsigned __int16 e_cp;
  unsigned __int16 e_crlc;
  unsigned __int16 e_cparhdr;
  unsigned __int16 e_minalloc;
  unsigned __int16 e_maxalloc;
  unsigned __int16 e_ss;
  unsigned __int16 e_sp;
  unsigned __int16 e_csum;
  unsigned __int16 e_ip;
  unsigned __int16 e_cs;
  unsigned __int16 e_lfarlc;
  unsigned __int16 e_ovno;
  unsigned __int16 e_res[4];
  unsigned __int16 e_oemid;
  unsigned __int16 e_oeminfo;
  unsigned __int16 e_res2[10];
  int e_lfanew;
};

/* 207 */
struct $3A3BCA7594B7E856C7C59953B9E38753
{
  _RTL_BALANCED_NODE *Left;
  _RTL_BALANCED_NODE *Right;
};

/* 208 */
union $668FB3BF4AAC804CE9EAFF31FACFC25F
{
  _RTL_BALANCED_NODE *Children[2];
  $3A3BCA7594B7E856C7C59953B9E38753 __s1;
};

/* 209 */
struct $424C8BBEF8F6C852886B4C6E806B5DB0
{
  unsigned __int8 Red : 1;
};

/* 210 */
struct $D962A830273E2DCC2CD9A73DF8740260
{
  unsigned __int8 Balance : 2;
};

/* 211 */
union $D7D32E1BE2D738B924569FEF02AB141F
{
  $424C8BBEF8F6C852886B4C6E806B5DB0 __s0;
  $D962A830273E2DCC2CD9A73DF8740260 __s1;
  unsigned int ParentValue;
};

/* 206 */
struct _RTL_BALANCED_NODE
{
  $668FB3BF4AAC804CE9EAFF31FACFC25F ___u0;
  $D7D32E1BE2D738B924569FEF02AB141F ___u1;
};

/* 212 */
struct _RTL_RB_TREE
{
  _RTL_BALANCED_NODE *Root;
  _RTL_BALANCED_NODE *Min;
};

/* 213 */
struct _RTL_AVL_TREE
{
  _RTL_BALANCED_NODE *Root;
};

/* 214 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 215 */
struct _EXCEPTION_REGISTRATION_RECORD
{
  _EXCEPTION_REGISTRATION_RECORD *Next;
  _EXCEPTION_DISPOSITION (__cdecl *Handler)(_EXCEPTION_RECORD *, void *, _CONTEXT *, void *);
};

/* 216 */
struct _EXCEPTION_RECORD
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 217 */
struct _NEON128
{
  unsigned __int64 Low;
  __int64 High;
};

/* 218 */
union $9E2383DBC4982BB208A1189F8102976A
{
  _NEON128 Q[16];
  unsigned __int64 D[32];
  unsigned int S[32];
};

/* 219 */
struct _CONTEXT
{
  unsigned int ContextFlags;
  unsigned int R0;
  unsigned int R1;
  unsigned int R2;
  unsigned int R3;
  unsigned int R4;
  unsigned int R5;
  unsigned int R6;
  unsigned int R7;
  unsigned int R8;
  unsigned int R9;
  unsigned int R10;
  unsigned int R11;
  unsigned int R12;
  unsigned int Sp;
  unsigned int Lr;
  unsigned int Pc;
  unsigned int Cpsr;
  unsigned int Fpscr;
  unsigned int Padding;
  $9E2383DBC4982BB208A1189F8102976A ___u20;
  unsigned int Bvr[8];
  unsigned int Bcr[8];
  unsigned int Wvr[1];
  unsigned int Wcr[1];
  unsigned int Padding2[2];
};

/* 221 */
union $7A727655067EA29DD1B3C3F7D79CBFD1
{
  void *FiberData;
  unsigned int Version;
};

/* 220 */
struct _NT_TIB
{
  _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
  void *StackBase;
  void *StackLimit;
  void *SubSystemTib;
  $7A727655067EA29DD1B3C3F7D79CBFD1 ___u4;
  void *ArbitraryUserPointer;
  _NT_TIB *Self;
};

/* 396 */
struct $872B3B9AA99CD1A619806520378534A3
{
  unsigned int TibPad0[2];
  void *Spare1;
  _KPCR *Self;
  _KPRCB *CurrentPrcb;
  _KSPIN_LOCK_QUEUE *LockArray;
  void *Used_Self;
};

/* 397 */
union $41D8AE83560D960F2596809C8617C8EE
{
  _NT_TIB NtTib;
  $872B3B9AA99CD1A619806520378534A3 __s1;
};

/* 398 */
struct $B6378F2DB2EC65BB594DD8A22DDF3134
{
  unsigned __int8 ApcInterrupt;
  unsigned __int8 DispatchInterrupt;
};

/* 399 */
union $E748280DB75E6B6F3426B9A6D75AE17A
{
  unsigned __int16 SoftwareInterruptPending;
  $B6378F2DB2EC65BB594DD8A22DDF3134 __s1;
};

/* 391 */
struct $77895C0986AC25977C4D7841AB2A3C85
{
  unsigned __int8 PendingTick : 1;
  unsigned __int8 PendingBackupTick : 1;
};

/* 392 */
union $34AD8D7D4F1FB33A81830CFC6A9D428A
{
  unsigned __int8 PendingTickFlags;
  $77895C0986AC25977C4D7841AB2A3C85 __s1;
};

/* 322 */
struct _KSPECIAL_REGISTERS
{
  unsigned int Reserved[7];
  unsigned int Cp15_Cr13_UsrRW;
  unsigned int Cp15_Cr13_UsrRO;
  unsigned int Cp15_Cr13_SvcRW;
  unsigned int KernelBvr[8];
  unsigned int KernelBcr[8];
  unsigned int KernelWvr[1];
  unsigned int KernelWcr[1];
  unsigned int Fpexc;
  unsigned int Fpinst;
  unsigned int Fpinst2;
  unsigned int UserSp;
  unsigned int UserLr;
  unsigned int AbortSp;
  unsigned int AbortLr;
  unsigned int AbortSpsr;
  unsigned int UdfSp;
  unsigned int UdfLr;
  unsigned int UdfSpsr;
  unsigned int IrqSp;
  unsigned int IrqLr;
  unsigned int IrqSpsr;
};

/* 323 */
struct _KARM_ARCH_STATE
{
  unsigned int Cp15_Cr0_CpuId;
  unsigned int Cp15_Cr1_Control;
  unsigned int Cp15_Cr1_AuxControl;
  unsigned int Cp15_Cr1_Cpacr;
  unsigned int Cp15_Cr2_TtbControl;
  unsigned int Cp15_Cr2_Ttb0;
  unsigned int Cp15_Cr2_Ttb1;
  unsigned int Cp15_Cr3_Dacr;
  unsigned int Cp15_Cr5_Dfsr;
  unsigned int Cp15_Cr5_Ifsr;
  unsigned int Cp15_Cr6_Dfar;
  unsigned int Cp15_Cr6_Ifar;
  unsigned int Cp15_Cr9_PmControl;
  unsigned int Cp15_Cr9_PmCountEnableSet;
  unsigned int Cp15_Cr9_PmCycleCounter;
  unsigned int Cp15_Cr9_PmEventCounter[31];
  unsigned int Cp15_Cr9_PmEventType[31];
  unsigned int Cp15_Cr9_PmInterruptSelect;
  unsigned int Cp15_Cr9_PmOverflowStatus;
  unsigned int Cp15_Cr9_PmSelect;
  unsigned int Cp15_Cr9_PmUserEnable;
  unsigned int Cp15_Cr10_PrimaryMemoryRemap;
  unsigned int Cp15_Cr10_NormalMemoryRemap;
  unsigned int Cp15_Cr12_VBARns;
  unsigned int Cp15_Cr13_ContextId;
};

/* 324 */
struct _KPROCESSOR_STATE
{
  _KSPECIAL_REGISTERS SpecialRegisters;
  _KARM_ARCH_STATE ArchState;
  _CONTEXT ContextFrame;
};

/* 325 */
struct _KSPIN_LOCK_QUEUE
{
  _KSPIN_LOCK_QUEUE *volatile Next;
  unsigned int *volatile Lock;
};

/* 337 */
struct _PP_LOOKASIDE_LIST
{
  _GENERAL_LOOKASIDE *P;
  _GENERAL_LOOKASIDE *L;
};

/* 340 */
struct _KDPC_LIST
{
  _SINGLE_LIST_ENTRY ListHead;
  _SINGLE_LIST_ENTRY *LastEntry;
};

/* 341 */
struct _KDPC_DATA
{
  _KDPC_LIST DpcList;
  unsigned int DpcLock;
  int DpcQueueDepth;
  unsigned int DpcCount;
  _KDPC *volatile ActiveDpc;
};

/* 393 */
struct $A14E8C9598FEC320F05702613B784A64
{
  __int16 NormalDpcState;
  __int16 ThreadDpcState;
};

/* 394 */
struct $62DA18D6A05C474F028C1781FA2A668F
{
  unsigned __int32 DpcNormalProcessingActive : 1;
  unsigned __int32 DpcNormalProcessingRequested : 1;
  unsigned __int32 DpcNormalThreadSignal : 1;
  unsigned __int32 DpcNormalTimerExpiration : 1;
  unsigned __int32 DpcNormalDpcPresent : 1;
  unsigned __int32 DpcNormalLocalInterrupt : 1;
  unsigned __int32 DpcNormalSpare : 10;
  unsigned __int32 DpcThreadActive : 1;
  unsigned __int32 DpcThreadRequested : 1;
  unsigned __int32 DpcThreadSpare : 14;
};

/* 395 */
union $6A5EDE5072C7631D0023D2897BFC8323
{
  volatile int DpcRequestSummary;
  __int16 DpcRequestSlot[2];
  $A14E8C9598FEC320F05702613B784A64 __s2;
  $62DA18D6A05C474F028C1781FA2A668F __s3;
};

/* 223 */
struct $08481D05807C14C022C64127DBCB0DC5
{
  unsigned __int8 Type;
  unsigned __int8 Signalling;
  unsigned __int8 Size;
  unsigned __int8 Reserved1;
};

/* 224 */
struct $BDD1DEEA9085FB2031C94E38C028AF9F
{
  unsigned __int8 TimerType;
  unsigned __int8 TimerControlFlags;
  unsigned __int8 Hand;
  unsigned __int8 TimerMiscFlags;
};

/* 225 */
struct $751C5479E4EBE40AD270C8C6BEC6C99E
{
  unsigned __int8 Timer2Type;
  unsigned __int8 Absolute : 1;
  unsigned __int8 Wake : 1;
  unsigned __int8 EncodedTolerableDelay : 6;
  unsigned __int8 Timer2Reserved1;
  unsigned __int8 Index : 6;
  unsigned __int8 Inserted : 1;
  unsigned __int8 Expired : 1;
};

/* 226 */
struct $DC5C26BDF4D684F12F3A5D4531D3B949
{
  unsigned __int8 QueueType;
  unsigned __int8 Timer2Flags;
  unsigned __int8 QueueSize;
  unsigned __int8 Timer2Reserved2;
};

/* 227 */
struct $82359CCE575330AAB08AF0894BC28AE0
{
  unsigned __int8 ThreadType;
  unsigned __int8 Timer2Inserted : 1;
  unsigned __int8 Timer2Expiring : 1;
  unsigned __int8 Timer2CancelPending : 1;
  unsigned __int8 Timer2SetPending : 1;
  unsigned __int8 Timer2Running : 1;
  unsigned __int8 Timer2Disabled : 1;
  unsigned __int8 Timer2ReservedFlags : 2;
  unsigned __int8 ThreadControlFlags;
  unsigned __int8 QueueReserved;
};

/* 228 */
struct $F0D8147C1E37F4CB7FE6C68483A592C0
{
  unsigned __int8 MutantType;
  unsigned __int8 QueueControlFlags;
  unsigned __int8 CycleProfiling : 1;
  unsigned __int8 CounterProfiling : 1;
  unsigned __int8 GroupScheduling : 1;
  unsigned __int8 AffinitySet : 1;
  unsigned __int8 Tagged : 1;
  unsigned __int8 EnergyProfiling : 1;
  unsigned __int8 ThreadReservedControlFlags : 2;
  unsigned __int8 DebugActive;
};

/* 229 */
struct $314E1D69AA04C59FCC8792E308C8F889
{
  _BYTE gap0;
  unsigned __int8 Abandoned : 1;
  unsigned __int8 DisableIncrement : 1;
  unsigned __int8 QueueReservedControlFlags : 6;
  unsigned __int8 DpcActive;
  unsigned __int8 ActiveDR7 : 1;
  unsigned __int8 Instrumented : 1;
  unsigned __int8 Minimal : 1;
  unsigned __int8 Reserved4 : 3;
  unsigned __int8 UmsScheduled : 1;
  unsigned __int8 UmsPrimary : 1;
};

/* 230 */
struct $4C0D29959C2537B70A4EE9FE3BDDA353
{
  _BYTE gap0;
  unsigned __int8 ThreadReserved;
  _BYTE gap2;
  unsigned __int8 MutantReserved;
};

/* 231 */
struct $4B94A638C9572C40F7312179A2B431F6
{
  _BYTE gap0;
  unsigned __int8 MutantSize;
};

/* 232 */
union $35E9AD7DD740BEF9DD7E79D7227E2A9F
{
  volatile int Lock;
  int LockNV;
  $08481D05807C14C022C64127DBCB0DC5 __s2;
  $BDD1DEEA9085FB2031C94E38C028AF9F __s3;
  $751C5479E4EBE40AD270C8C6BEC6C99E __s4;
  $DC5C26BDF4D684F12F3A5D4531D3B949 __s5;
  $82359CCE575330AAB08AF0894BC28AE0 __s6;
  $F0D8147C1E37F4CB7FE6C68483A592C0 __s7;
  $314E1D69AA04C59FCC8792E308C8F889 __s8;
  $4C0D29959C2537B70A4EE9FE3BDDA353 __s9;
  $4B94A638C9572C40F7312179A2B431F6 __s10;
};

/* 233 */
struct _DISPATCHER_HEADER
{
  $35E9AD7DD740BEF9DD7E79D7227E2A9F ___u0;
  int SignalState;
  _LIST_ENTRY WaitListHead;
};

/* 342 */
struct _KGATE
{
  _DISPATCHER_HEADER Header;
};

/* 240 */
struct $82623AFB470F8517B6D8F9E43441C7E1
{
  unsigned __int8 Type;
  unsigned __int8 Importance;
  volatile unsigned __int16 Number;
};

/* 241 */
union $E343C6E4879FC8E30002709036AC532F
{
  unsigned int TargetInfoAsUlong;
  $82623AFB470F8517B6D8F9E43441C7E1 __s1;
};

/* 239 */
struct _KDPC
{
  $E343C6E4879FC8E30002709036AC532F ___u0;
  _SINGLE_LIST_ENTRY DpcListEntry;
  unsigned int ProcessorHistory;
  void (__cdecl *DeferredRoutine)(_KDPC *, void *, void *, void *);
  void *DeferredContext;
  void *SystemArgument1;
  void *SystemArgument2;
  void *DpcData;
};

/* 348 */
struct _KENTROPY_TIMING_STATE
{
  unsigned int EntropyCount;
  unsigned int Buffer[64];
  _KDPC Dpc;
  unsigned int LastDeliveredBuffer;
};

/* 365 */
struct _PROC_IDLE_POLICY
{
  unsigned __int8 PromotePercent;
  unsigned __int8 DemotePercent;
  unsigned __int8 PromotePercentBase;
  unsigned __int8 DemotePercentBase;
  unsigned __int8 AllowScaling;
};

/* 366 */
struct $4C54FEED1D206CF6DD53948246B9325F
{
  __int32 RefCount : 24;
  unsigned __int32 State : 8;
};

/* 367 */
volatile union _PPM_IDLE_SYNCHRONIZATION_STATE
{
  int AsLong;
  $4C54FEED1D206CF6DD53948246B9325F __s1;
};

/* 370 */
struct __declspec(align(8)) _PROC_FEEDBACK
{
  unsigned int Lock;
  unsigned __int64 CyclesLast;
  unsigned __int64 CyclesActive;
  _PROC_FEEDBACK_COUNTER *Counters[2];
  unsigned __int64 LastUpdateTime;
  unsigned __int64 UnscaledTime;
  volatile __int64 UnaccountedTime;
  unsigned __int64 ScaledTime[2];
  unsigned __int64 UnaccountedKernelTime;
  unsigned __int64 PerformanceScaledKernelTime;
  unsigned int UserTimeLast;
  unsigned int KernelTimeLast;
  unsigned __int8 KernelTimesIndex;
};

/* 371 */
struct _PPM_FFH_THROTTLE_STATE_INFO
{
  unsigned __int8 EnableLogging;
  unsigned int MismatchCount;
  unsigned __int8 Initialized;
  unsigned __int64 LastValue;
  _LARGE_INTEGER LastLogTickCount;
};

/* 380 */
union $1295C7652040702D9335A0311A3EC089
{
  unsigned __int64 SnapTimeLast;
  unsigned __int64 EnergyConsumed;
};

/* 381 */
struct _PROCESSOR_POWER_STATE
{
  _PPM_IDLE_STATES *IdleStates;
  _PROC_IDLE_ACCOUNTING *IdleAccounting;
  unsigned __int64 IdleTimeLast;
  unsigned __int64 IdleTimeTotal;
  volatile unsigned __int64 IdleTimeEntry;
  unsigned __int64 IdleTimeExpiration;
  unsigned __int8 NonInterruptibleTransition;
  unsigned __int8 PepWokenTransition;
  unsigned __int8 Class;
  unsigned int TargetIdleState;
  _PROC_IDLE_POLICY IdlePolicy;
  volatile _PPM_IDLE_SYNCHRONIZATION_STATE Synchronization;
  _PROC_FEEDBACK PerfFeedback;
  _PROC_HYPERVISOR_STATE Hypervisor;
  unsigned int LastSysTime;
  unsigned int WmiDispatchPtr;
  int WmiInterfaceEnabled;
  _PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo;
  _KDPC PerfActionDpc;
  volatile int PerfActionMask;
  _PROC_PERF_CHECK *PerfCheck;
  _PROC_PERF_DOMAIN *Domain;
  _PROC_PERF_CONSTRAINT *PerfConstraint;
  _PPM_CONCURRENCY_ACCOUNTING *Concurrency;
  _PROC_PERF_LOAD *Load;
  _PROC_PERF_HISTORY *PerfHistory;
  unsigned __int8 GuaranteedPerformancePercent;
  unsigned __int8 HvTargetState;
  unsigned __int8 Parked;
  unsigned int LatestPerformancePercent;
  unsigned int AveragePerformancePercent;
  unsigned int LatestAffinitizedPercent;
  unsigned int RelativePerformance;
  unsigned int Utility;
  unsigned int AffinitizedUtility;
  $1295C7652040702D9335A0311A3EC089 ___u35;
  unsigned __int64 ActiveTime;
  unsigned __int64 TotalTime;
};

/* 266 */
struct __declspec(align(8)) _KTIMER
{
  _DISPATCHER_HEADER Header;
  _ULARGE_INTEGER DueTime;
  _LIST_ENTRY TimerListEntry;
  _KDPC *Dpc;
  unsigned int Processor;
  unsigned int Period;
};

/* 326 */
struct $98AD1F6CD9040E824C1ADFB965F3B8C7
{
  _SINGLE_LIST_ENTRY Next;
  unsigned __int16 Depth;
  unsigned __int16 Reserved;
};

/* 327 */
union _SLIST_HEADER
{
  unsigned __int64 Alignment;
  $98AD1F6CD9040E824C1ADFB965F3B8C7 __s1;
};

/* 251 */
struct _KAFFINITY_EX
{
  unsigned __int16 Count;
  unsigned __int16 Size;
  unsigned int Reserved;
  unsigned int Bitmap[1];
};

/* 383 */
struct _CACHE_DESCRIPTOR
{
  unsigned __int8 Level;
  unsigned __int8 Associativity;
  unsigned __int16 LineSize;
  unsigned int Size;
  _PROCESSOR_CACHE_TYPE Type;
};

/* 384 */
struct _SYNCH_COUNTERS
{
  unsigned int SpinLockAcquireCount;
  unsigned int SpinLockContentionCount;
  unsigned int SpinLockSpinCount;
  unsigned int IpiSendRequestBroadcastCount;
  unsigned int IpiSendRequestRoutineCount;
  unsigned int IpiSendSoftwareInterruptCount;
  unsigned int ExInitializeResourceCount;
  unsigned int ExReInitializeResourceCount;
  unsigned int ExDeleteResourceCount;
  unsigned int ExecutiveResourceAcquiresCount;
  unsigned int ExecutiveResourceContentionsCount;
  unsigned int ExecutiveResourceReleaseExclusiveCount;
  unsigned int ExecutiveResourceReleaseSharedCount;
  unsigned int ExecutiveResourceConvertsCount;
  unsigned int ExAcqResExclusiveAttempts;
  unsigned int ExAcqResExclusiveAcquiresExclusive;
  unsigned int ExAcqResExclusiveAcquiresExclusiveRecursive;
  unsigned int ExAcqResExclusiveWaits;
  unsigned int ExAcqResExclusiveNotAcquires;
  unsigned int ExAcqResSharedAttempts;
  unsigned int ExAcqResSharedAcquiresExclusive;
  unsigned int ExAcqResSharedAcquiresShared;
  unsigned int ExAcqResSharedAcquiresSharedRecursive;
  unsigned int ExAcqResSharedWaits;
  unsigned int ExAcqResSharedNotAcquires;
  unsigned int ExAcqResSharedStarveExclusiveAttempts;
  unsigned int ExAcqResSharedStarveExclusiveAcquiresExclusive;
  unsigned int ExAcqResSharedStarveExclusiveAcquiresShared;
  unsigned int ExAcqResSharedStarveExclusiveAcquiresSharedRecursive;
  unsigned int ExAcqResSharedStarveExclusiveWaits;
  unsigned int ExAcqResSharedStarveExclusiveNotAcquires;
  unsigned int ExAcqResSharedWaitForExclusiveAttempts;
  unsigned int ExAcqResSharedWaitForExclusiveAcquiresExclusive;
  unsigned int ExAcqResSharedWaitForExclusiveAcquiresShared;
  unsigned int ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive;
  unsigned int ExAcqResSharedWaitForExclusiveWaits;
  unsigned int ExAcqResSharedWaitForExclusiveNotAcquires;
  unsigned int ExSetResOwnerPointerExclusive;
  unsigned int ExSetResOwnerPointerSharedNew;
  unsigned int ExSetResOwnerPointerSharedOld;
  unsigned int ExTryToAcqExclusiveAttempts;
  unsigned int ExTryToAcqExclusiveAcquires;
  unsigned int ExBoostExclusiveOwner;
  unsigned int ExBoostSharedOwners;
  unsigned int ExEtwSynchTrackingNotificationsCount;
  unsigned int ExEtwSynchTrackingNotificationsAccountedCount;
};

/* 385 */
struct _FILESYSTEM_DISK_COUNTERS
{
  unsigned __int64 FsBytesRead;
  unsigned __int64 FsBytesWritten;
};

/* 386 */
struct _KARM_MINI_STACK
{
  unsigned int Pc;
  unsigned int Cpsr;
  unsigned int R4;
  unsigned int R5;
  unsigned int R6;
  unsigned int R7;
  unsigned int Reserved[2];
};

/* 387 */
struct _KTIMER_TABLE_ENTRY
{
  unsigned int Lock;
  _LIST_ENTRY Entry;
  _ULARGE_INTEGER Time;
};

/* 388 */
struct _KTIMER_TABLE
{
  _KTIMER *TimerExpiry[64];
  _KTIMER_TABLE_ENTRY TimerEntries[256];
};

/* 329 */
union $14B862236A85F5FE9C15C3568D657E84
{
  _SLIST_HEADER ListHead;
  _SINGLE_LIST_ENTRY SingleListHead;
};

/* 330 */
union $9D02AA4AC86E49CEAF084B97B97744B1
{
  unsigned int AllocateMisses;
  unsigned int AllocateHits;
};

/* 331 */
union $4290DA71080BA5C562B380EC38D3C295
{
  unsigned int FreeMisses;
  unsigned int FreeHits;
};

/* 332 */
union $9E7191D3A177C6DE83D4C34E69339763
{
  void *(__cdecl *AllocateEx)(_POOL_TYPE, unsigned int, unsigned int, _LOOKASIDE_LIST_EX *);
  void *(__cdecl *Allocate)(_POOL_TYPE, unsigned int, unsigned int);
};

/* 333 */
union $F60AE0668387FDB559A88C7B4E183B6B
{
  void (__cdecl *FreeEx)(void *, _LOOKASIDE_LIST_EX *);
  void (__cdecl *Free)(void *);
};

/* 334 */
union $BA67176EA55FA2D963EA02A98A2C99D2
{
  unsigned int LastAllocateMisses;
  unsigned int LastAllocateHits;
};

/* 335 */
struct _GENERAL_LOOKASIDE_POOL
{
  $14B862236A85F5FE9C15C3568D657E84 ___u0;
  unsigned __int16 Depth;
  unsigned __int16 MaximumDepth;
  unsigned int TotalAllocates;
  $9D02AA4AC86E49CEAF084B97B97744B1 ___u4;
  unsigned int TotalFrees;
  $4290DA71080BA5C562B380EC38D3C295 ___u6;
  _POOL_TYPE Type;
  unsigned int Tag;
  unsigned int Size;
  $9E7191D3A177C6DE83D4C34E69339763 ___u10;
  $F60AE0668387FDB559A88C7B4E183B6B ___u11;
  _LIST_ENTRY ListEntry;
  unsigned int LastTotalAllocates;
  $BA67176EA55FA2D963EA02A98A2C99D2 ___u14;
  unsigned int Future[2];
};

/* 389 */
struct _IOP_IRP_STACK_PROFILER
{
  unsigned int Profile[20];
  unsigned int TotalIrps;
};

/* 382 */
struct _KSHARED_READY_QUEUE
{
  unsigned int Lock;
  unsigned int ReadySummary;
  _LIST_ENTRY ReadyListHead[32];
  char RunningSummary[32];
  unsigned __int8 Span;
  unsigned __int8 LowProcIndex;
  unsigned __int8 QueueIndex;
  unsigned __int8 ProcCount;
  unsigned __int8 ScanOwner;
  unsigned __int8 Spare[3];
  unsigned int Affinity;
};

/* 390 */
struct _KTIMER_EXPIRATION_TRACE
{
  unsigned __int64 InterruptTime;
  _LARGE_INTEGER PerformanceCounter;
};

/* 339 */
struct _KREQUEST_PACKET
{
  void *CurrentPacket[3];
  void (__cdecl *WorkerRoutine)(void *, void *, void *, void *);
};

/* 338 */
struct _REQUEST_MAILBOX
{
  _REQUEST_MAILBOX *Next;
  unsigned int RequestSummary;
  _KREQUEST_PACKET RequestPacket;
  volatile int *NodeTargetCountAddr;
  volatile int NodeTargetCount;
};

/* 276 */
struct _KPRCB
{
  unsigned __int8 LegacyNumber;
  unsigned __int8 ReservedMustBeZero;
  unsigned __int8 IdleHalt;
  _KTHREAD *CurrentThread;
  _KTHREAD *NextThread;
  _KTHREAD *IdleThread;
  unsigned __int8 NestingLevel;
  unsigned __int8 ClockOwner;
  $34AD8D7D4F1FB33A81830CFC6A9D428A ___u8;
  unsigned __int8 IdleState;
  unsigned int Number;
  unsigned int PrcbLock;
  char *PriorityState;
  _KPROCESSOR_STATE ProcessorState;
  unsigned __int16 ProcessorModel;
  unsigned __int16 ProcessorRevision;
  unsigned int MHz;
  unsigned __int64 CycleCounterFrequency;
  unsigned int HalReserved[15];
  unsigned __int16 MinorVersion;
  unsigned __int16 MajorVersion;
  unsigned __int8 BuildType;
  unsigned __int8 CpuVendor;
  unsigned __int8 CoresPerPhysicalProcessor;
  unsigned __int8 LogicalProcessorsPerCore;
  void *AcpiReserved;
  unsigned int GroupSetMember;
  unsigned __int8 Group;
  unsigned __int8 GroupIndex;
  __declspec(align(128)) _KSPIN_LOCK_QUEUE LockQueue[17];
  unsigned __int8 ProcessorVendorString[2];
  unsigned int FeatureBits;
  unsigned int MaxBreakpoints;
  unsigned int MaxWatchpoints;
  _CONTEXT *Context;
  unsigned int ContextFlagsInit;
  __declspec(align(128)) _PP_LOOKASIDE_LIST PPLookasideList[16];
  volatile int PacketBarrier;
  _SINGLE_LIST_ENTRY DeferredReadyListHead;
  volatile int MmPageFaultCount;
  volatile int MmCopyOnWriteCount;
  volatile int MmTransitionCount;
  volatile int MmDemandZeroCount;
  volatile int MmPageReadCount;
  volatile int MmPageReadIoCount;
  volatile int MmDirtyPagesWriteCount;
  volatile int MmDirtyWriteIoCount;
  volatile int MmMappedPagesWriteCount;
  volatile int MmMappedWriteIoCount;
  unsigned int KeSystemCalls;
  unsigned int KeContextSwitches;
  unsigned int CcFastReadNoWait;
  unsigned int CcFastReadWait;
  unsigned int CcFastReadNotPossible;
  unsigned int CcCopyReadNoWait;
  unsigned int CcCopyReadWait;
  unsigned int CcCopyReadNoWaitMiss;
  int LookasideIrpFloat;
  volatile int IoReadOperationCount;
  volatile int IoWriteOperationCount;
  volatile int IoOtherOperationCount;
  _LARGE_INTEGER IoReadTransferCount;
  _LARGE_INTEGER IoWriteTransferCount;
  _LARGE_INTEGER IoOtherTransferCount;
  __declspec(align(16)) _REQUEST_MAILBOX *Mailbox;
  volatile int TargetCount;
  volatile unsigned int IpiFrozen;
  volatile unsigned int RequestSummary;
  _KDPC_DATA DpcData[2];
  void *DpcStack;
  void *SpBase;
  int MaximumDpcQueueDepth;
  unsigned int DpcRequestRate;
  unsigned int MinimumDpcRate;
  unsigned int DpcLastCount;
  unsigned __int8 ThreadDpcEnable;
  volatile unsigned __int8 QuantumEnd;
  volatile unsigned __int8 DpcRoutineActive;
  volatile unsigned __int8 IdleSchedule;
  $6A5EDE5072C7631D0023D2897BFC8323 ___u79;
  unsigned int LastTimerHand;
  unsigned int LastTick;
  unsigned int ClockInterrupts;
  unsigned int ReadyScanTick;
  unsigned int PrcbPad10[1];
  unsigned int InterruptLastCount;
  unsigned int InterruptRate;
  __declspec(align(8)) _KGATE DpcGate;
  unsigned int MPAffinity;
  _KDPC CallDpc;
  int ClockKeepAlive;
  unsigned __int8 PrcbPad11[2];
  int DpcWatchdogPeriod;
  int DpcWatchdogCount;
  volatile int KeSpinLockOrdering;
  __declspec(align(64)) _LIST_ENTRY WaitListHead;
  unsigned int WaitLock;
  unsigned int ReadySummary;
  int AffinitizedSelectionMask;
  unsigned int QueueIndex;
  _KDPC TimerExpirationDpc;
  _RTL_RB_TREE ScbQueue;
  _LIST_ENTRY ScbList;
  __declspec(align(64)) _LIST_ENTRY DispatcherReadyListHead[32];
  unsigned int InterruptCount;
  unsigned int KernelTime;
  unsigned int UserTime;
  unsigned int DpcTime;
  unsigned int InterruptTime;
  unsigned int AdjustDpcThreshold;
  unsigned __int8 SkipTick;
  unsigned __int8 DebuggerSavedIRQL;
  unsigned __int8 PrcbPad14;
  unsigned __int8 GroupSchedulingOverQuota;
  unsigned int DpcTimeCount;
  unsigned int DpcTimeLimit;
  unsigned int PeriodicCount;
  unsigned int PeriodicBias;
  unsigned int AvailableTime;
  unsigned int ScbOffset;
  unsigned int KeExceptionDispatchCount;
  _KNODE *ParentNode;
  unsigned __int64 AffinitizedCycles;
  unsigned __int64 StartCycles;
  unsigned __int64 TaggedCyclesStart;
  unsigned __int64 TaggedCycles[2];
  unsigned __int64 GenerationTarget;
  volatile unsigned __int64 CycleCounterHigh;
  _KENTROPY_TIMING_STATE EntropyTimingState;
  volatile int MmSpinLockOrdering;
  unsigned int PageColor;
  unsigned int NodeColor;
  unsigned int NodeShiftedColor;
  unsigned int SecondaryColorMask;
  volatile unsigned __int64 CycleTime;
  __declspec(align(128)) unsigned int CcFastMdlReadNoWait;
  unsigned int CcFastMdlReadWait;
  unsigned int CcFastMdlReadNotPossible;
  unsigned int CcMapDataNoWait;
  unsigned int CcMapDataWait;
  unsigned int CcPinMappedDataCount;
  unsigned int CcPinReadNoWait;
  unsigned int CcPinReadWait;
  unsigned int CcMdlReadNoWait;
  unsigned int CcMdlReadWait;
  unsigned int CcLazyWriteHotSpots;
  unsigned int CcLazyWriteIos;
  unsigned int CcLazyWritePages;
  unsigned int CcDataFlushes;
  unsigned int CcDataPages;
  unsigned int CcLostDelayedWrites;
  unsigned int CcFastReadResourceMiss;
  unsigned int CcCopyReadWaitMiss;
  unsigned int CcFastMdlReadResourceMiss;
  unsigned int CcMapDataNoWaitMiss;
  unsigned int CcMapDataWaitMiss;
  unsigned int CcPinReadNoWaitMiss;
  unsigned int CcPinReadWaitMiss;
  unsigned int CcMdlReadNoWaitMiss;
  unsigned int CcMdlReadWaitMiss;
  unsigned int CcReadAheadIos;
  volatile int MmCacheTransitionCount;
  volatile int MmCacheReadCount;
  volatile int MmCacheIoCount;
  __declspec(align(16)) _PROCESSOR_POWER_STATE PowerState;
  unsigned int DeviceInterrupts;
  void *IsrDpcStats;
  unsigned int KeAlignmentFixupCount;
  _KDPC DpcWatchdogDpc;
  _KTIMER DpcWatchdogTimer;
  _SLIST_HEADER InterruptObjectPool;
  _KAFFINITY_EX PackageProcessorSet;
  __declspec(align(128)) unsigned int SharedReadyQueueMask;
  _KSHARED_READY_QUEUE *SharedReadyQueue;
  unsigned int SharedQueueScanOwner;
  unsigned int CoreProcessorSet;
  unsigned int ScanSiblingMask;
  unsigned int LLCMask;
  unsigned int CacheProcessorMask[5];
  unsigned int ScanSiblingIndex;
  _CACHE_DESCRIPTOR Cache[6];
  unsigned __int8 CacheCount;
  unsigned __int8 PrcbPad20[3];
  volatile unsigned int CachedCommit;
  volatile unsigned int CachedResidentAvailable;
  void *HyperPte;
  void *WheaInfo;
  void *EtwSupport;
  __declspec(align(128)) _SYNCH_COUNTERS SynchCounters;
  _FILESYSTEM_DISK_COUNTERS FsCounters;
  __declspec(align(16)) _KARM_MINI_STACK FiqMiniStack;
  _KARM_MINI_STACK IrqMiniStack;
  _KARM_MINI_STACK UdfMiniStack;
  _KARM_MINI_STACK AbtMiniStack;
  _KARM_MINI_STACK PanicMiniStack;
  unsigned int PanicStackBase;
  void *IsrStack;
  unsigned int PteBitCache;
  unsigned int PteBitOffset;
  _KTIMER_TABLE TimerTable;
  _GENERAL_LOOKASIDE_POOL PPNxPagedLookasideList[32];
  _GENERAL_LOOKASIDE_POOL PPNPagedLookasideList[32];
  _GENERAL_LOOKASIDE_POOL PPPagedLookasideList[32];
  _SINGLE_LIST_ENTRY AbSelfIoBoostsList;
  _SINGLE_LIST_ENTRY AbPropagateBoostsList;
  _KDPC AbDpc;
  _IOP_IRP_STACK_PROFILER IoIrpStackProfilerCurrent;
  _IOP_IRP_STACK_PROFILER IoIrpStackProfilerPrevious;
  __declspec(align(64)) _KSHARED_READY_QUEUE LocalSharedReadyQueue;
  _KTIMER_EXPIRATION_TRACE TimerExpirationTrace[16];
  unsigned int TimerExpirationTraceCount;
  void *ExSaPageArray;
  volatile int FreezePowerOff;
  __declspec(align(64)) unsigned __int64 Cycles[4][2];
  __declspec(align(128)) _REQUEST_MAILBOX RequestMailbox[1];
};

/* 222 */
struct _KPCR
{
  $41D8AE83560D960F2596809C8617C8EE ___u0;
  unsigned __int8 CurrentIrql;
  unsigned __int8 SecondLevelCacheAssociativity;
  unsigned int Unused0[3];
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int StallScaleFactor;
  void *Unused1[3];
  unsigned int KernelReserved[15];
  unsigned int SecondLevelCacheSize;
  $E748280DB75E6B6F3426B9A6D75AE17A ___u10;
  unsigned __int16 InterruptPad;
  unsigned int HalReserved[32];
  void *KdVersionBlock;
  void *Unused3;
  unsigned int PcrAlign1[8];
  void *Idt[256];
  void **IdtExt;
  unsigned int PcrAlign2[19];
  _KPRCB Prcb;
};

/* 245 */
struct $6E3F869BADF0AE2AE79CB2D8108FC64A
{
  unsigned __int8 State : 3;
  unsigned __int8 Affinity : 1;
  unsigned __int8 Priority : 1;
  unsigned __int8 Apc : 1;
  unsigned __int8 UserApc : 1;
  unsigned __int8 Alert : 1;
};

/* 246 */
union _KWAIT_STATUS_REGISTER
{
  unsigned __int8 Flags;
  $6E3F869BADF0AE2AE79CB2D8108FC64A __s1;
};

/* 294 */
struct $AEE771F65D70607AE7E0580FF3671D96
{
  unsigned __int32 AutoBoostActive : 1;
  unsigned __int32 ReadyTransition : 1;
  unsigned __int32 WaitNext : 1;
  unsigned __int32 SystemAffinityActive : 1;
  unsigned __int32 Alertable : 1;
  unsigned __int32 UserStackWalkActive : 1;
  unsigned __int32 ApcInterruptRequest : 1;
  unsigned __int32 QuantumEndMigrate : 1;
  unsigned __int32 UmsDirectedSwitchEnable : 1;
  unsigned __int32 TimerActive : 1;
  unsigned __int32 SystemThread : 1;
  unsigned __int32 ProcessDetachActive : 1;
  unsigned __int32 CalloutActive : 1;
  unsigned __int32 ScbReadyQueue : 1;
  unsigned __int32 ApcQueueable : 1;
  unsigned __int32 ReservedStackInUse : 1;
  unsigned __int32 UmsPerformingSyscall : 1;
  unsigned __int32 TimerSuspended : 1;
  unsigned __int32 SuspendedWaitMode : 1;
  unsigned __int32 SuspendSchedulerApcWait : 1;
  unsigned __int32 Reserved : 12;
  unsigned __int32 AutoAlignment : 1;
};

/* 295 */
union $6D95A43DDAA2E460B259BCBDE4DF1D48
{
  $AEE771F65D70607AE7E0580FF3671D96 __s0;
  int MiscFlags;
};

/* 259 */
struct $B5CD178F87BE184A5118D4920C61026E
{
  unsigned __int8 KernelApcInProgress : 1;
  unsigned __int8 SpecialApcInProgress : 1;
};

/* 260 */
union $44CC178C25FF30ED06D8CD44BA45AEB3
{
  unsigned __int8 InProgressFlags;
  $B5CD178F87BE184A5118D4920C61026E __s1;
};

/* 261 */
struct __declspec(align(2)) _KAPC_STATE
{
  _LIST_ENTRY ApcListHead[2];
  _KPROCESS *Process;
  $44CC178C25FF30ED06D8CD44BA45AEB3 ___u2;
  unsigned __int8 KernelApcPending;
  unsigned __int8 UserApcPending;
};

/* 298 */
struct $57ACE5DB66C1AEAB30658960D27211DA
{
  unsigned __int8 ApcStateFill[23];
  char Priority;
};

/* 299 */
union $A9E1916A83A462EE325668D15688D0D3
{
  _KAPC_STATE ApcState;
  $57ACE5DB66C1AEAB30658960D27211DA __s1;
};

/* 300 */
union $8BD1A1376999C9D29F3DF1FD8FFF1415
{
  _LIST_ENTRY WaitListEntry;
  _SINGLE_LIST_ENTRY SwapListEntry;
};

/* 264 */
union $1181CE6483FDC96A13E9D53CA4CEDA8B
{
  _KTHREAD *Thread;
  _KQUEUE *NotificationQueue;
};

/* 265 */
struct _KWAIT_BLOCK
{
  _LIST_ENTRY WaitListEntry;
  unsigned __int8 WaitType;
  volatile unsigned __int8 BlockState;
  unsigned __int16 WaitKey;
  $1181CE6483FDC96A13E9D53CA4CEDA8B ___u4;
  void *Object;
  void *SparePtr;
};

/* 301 */
struct $E7294FC02694D0B6F4FB79946E9CEDD3
{
  unsigned __int8 WaitBlockFill8[20];
  _KTHREAD_COUNTERS *ThreadCounters;
};

/* 302 */
struct $6EA1B5CDD1C3727925400FF721B053A7
{
  unsigned __int8 WaitBlockFill9[44];
  _XSTATE_SAVE *XStateSave;
};

/* 303 */
struct $3EE1F53BCAC1F246EB8C3E536310F76C
{
  unsigned __int8 WaitBlockFill10[68];
  void *volatile Win32Thread;
  _BYTE gap48[20];
  unsigned int CombinedApcDisable;
};

/* 304 */
struct $10CC9D3525FF90AB51A5BD53F0A08F42
{
  unsigned __int8 WaitBlockFill11[88];
  unsigned int WaitTime;
  __int16 KernelApcDisable;
  __int16 SpecialApcDisable;
};

/* 305 */
union $C2C65ECA9D7E2EA396A8F8DA4343D565
{
  _KWAIT_BLOCK WaitBlock[4];
  $E7294FC02694D0B6F4FB79946E9CEDD3 __s1;
  $6EA1B5CDD1C3727925400FF721B053A7 __s2;
  $3EE1F53BCAC1F246EB8C3E536310F76C __s3;
  $10CC9D3525FF90AB51A5BD53F0A08F42 __s4;
};

/* 306 */
struct $A66FD9C9E5CAEF30185BA12A0EDC69A5
{
  unsigned __int32 NextProcessorNumber : 31;
  unsigned __int32 SharedReadyQueue : 1;
};

/* 307 */
union $60D4260DC433A7B78EC290D9922E0CDA
{
  volatile unsigned int NextProcessor;
  $A66FD9C9E5CAEF30185BA12A0EDC69A5 __s1;
};

/* 272 */
struct _GROUP_AFFINITY
{
  unsigned int Mask;
  unsigned __int16 Group;
  unsigned __int16 Reserved[3];
};

/* 308 */
struct $EB77BA67A419D68C302711E75AF6575E
{
  unsigned __int8 UserAffinityFill[6];
  char PreviousMode;
  char BasePriority;
  char PriorityDecrement;
  unsigned __int8 Preempted;
  unsigned __int8 AdjustReason;
  char AdjustIncrement;
};

/* 309 */
struct $CD2EB5D4197C462A1433352D4E50FE5C
{
  _BYTE gap0[8];
  unsigned __int8 ForegroundBoost : 4;
  unsigned __int8 UnusualBoost : 4;
};

/* 310 */
union $122A7C2293B7839BC51985D07DECC1D6
{
  _GROUP_AFFINITY UserAffinity;
  $EB77BA67A419D68C302711E75AF6575E __s1;
  $CD2EB5D4197C462A1433352D4E50FE5C __s2;
};

/* 311 */
struct $7F85B985D7D75F7A656BCE93D9E3C579
{
  unsigned __int8 AffinityFill[6];
  unsigned __int8 ApcStateIndex;
  unsigned __int8 WaitBlockCount;
  unsigned int IdealProcessor;
};

/* 312 */
union $AA7DFC9D623B8637A30306C9BDD10A7F
{
  _GROUP_AFFINITY Affinity;
  $7F85B985D7D75F7A656BCE93D9E3C579 __s1;
};

/* 313 */
struct $6504B4CE415D95D8A437358D60B39787
{
  unsigned __int8 SavedApcStateFill[23];
  unsigned __int8 WaitReason;
};

/* 314 */
union $6C702497A9C2829D65C12D36C5BCCDC3
{
  _KAPC_STATE SavedApcState;
  $6504B4CE415D95D8A437358D60B39787 __s1;
};

/* 274 */
struct $52465B91F81F4D5EBA95572BE4F51259
{
  void (__cdecl *KernelRoutine)(_KAPC *, void (__cdecl **)(void *, void *, void *), void **, void **, void **);
  void (__cdecl *RundownRoutine)(_KAPC *);
  void (__cdecl *NormalRoutine)(void *, void *, void *);
};

/* 275 */
union $16B3726CB6F3AA517172BFD3367ABCBB
{
  $52465B91F81F4D5EBA95572BE4F51259 __s0;
  void *Reserved[3];
};

/* 273 */
struct __declspec(align(2)) _KAPC
{
  unsigned __int8 Type;
  unsigned __int8 SpareByte0;
  unsigned __int8 Size;
  unsigned __int8 SpareByte1;
  unsigned int SpareLong0;
  _KTHREAD *Thread;
  _LIST_ENTRY ApcListEntry;
  $16B3726CB6F3AA517172BFD3367ABCBB ___u7;
  void *NormalContext;
  void *SystemArgument1;
  void *SystemArgument2;
  char ApcStateIndex;
  char ApcMode;
  unsigned __int8 Inserted;
};

/* 315 */
struct $5156F59DA89B43E5E0F57279B28160E6
{
  unsigned __int8 SchedulerApcFill0[1];
  unsigned __int8 ResourceIndex;
};

/* 316 */
struct $B7D851223C17C6BA83CF7063C2464C70
{
  unsigned __int8 SchedulerApcFill1[3];
  unsigned __int8 QuantumReset;
  unsigned int KernelTime;
};

/* 317 */
struct $0F338BA6A0ED0BF20ED261268B36DAFE
{
  unsigned __int8 SchedulerApcFill3[36];
  _KPRCB *volatile WaitPrcb;
  void *LegoData;
};

/* 318 */
struct $190764BCB57CE4A92D0BB7AD29847B2B
{
  unsigned __int8 SchedulerApcFill5[47];
  unsigned __int8 CallbackNestingLevel;
};

/* 319 */
union $C7CBD9BDD3F131728637A5728C512192
{
  _KAPC SchedulerApc;
  $5156F59DA89B43E5E0F57279B28160E6 __s1;
  $B7D851223C17C6BA83CF7063C2464C70 __s2;
  unsigned __int8 SchedulerApcFill2[4];
  $0F338BA6A0ED0BF20ED261268B36DAFE __s4;
  unsigned __int8 SchedulerApcFill4[40];
  $190764BCB57CE4A92D0BB7AD29847B2B __s6;
};

/* 277 */
struct _KEVENT
{
  _DISPATCHER_HEADER Header;
};

/* 282 */
union $569A5FC861CDB817105BEFCB9D6126E2
{
  _RTL_BALANCED_NODE TreeNode;
  _SINGLE_LIST_ENTRY FreeListEntry;
};

/* 283 */
struct $EC07B23C3B7FAD634FE04CB02D3D38F8
{
  unsigned __int8 EntryOffset;
  unsigned __int8 ThreadLocalFlags;
  unsigned __int8 AcquiredByte;
  unsigned __int8 CrossThreadFlags;
};

/* 284 */
struct $EA69BA43A99D2CD89F3ED680F560281D
{
  unsigned __int32 StaticState : 8;
  unsigned __int32 WaitingBit : 1;
  unsigned __int32 Spare0 : 7;
  unsigned __int32 AcquiredBit : 1;
  unsigned __int32 : 7;
  unsigned __int32 HeadNodeBit : 1;
  unsigned __int32 IoPriorityBit : 1;
  unsigned __int32 Spare1 : 6;
};

/* 285 */
struct $7736FC1F35A4C7F440DCABE0BD2221F9
{
  unsigned __int32 : 8;
  unsigned __int32 AllFlags : 24;
};

/* 286 */
union $B4302C47BB4E1F04F17CCA78E6FF5D30
{
  unsigned int EntryFlags;
  $EC07B23C3B7FAD634FE04CB02D3D38F8 __s1;
  $EA69BA43A99D2CD89F3ED680F560281D __s2;
  $7736FC1F35A4C7F440DCABE0BD2221F9 __s3;
};

/* 278 */
struct $A4E4BB4597B19C7E65B4B68307294B65
{
  unsigned __int32 CrossThreadReleasable : 1;
  unsigned __int32 Busy : 1;
  unsigned __int32 Reserved : 29;
  unsigned __int32 InTree : 1;
};

/* 279 */
union $2B7EC84890C36F0AC521B92622C0E173
{
  $A4E4BB4597B19C7E65B4B68307294B65 __s0;
  void *LockState;
};

/* 280 */
union $08550D074B73B4538FD484E327510E4A
{
  void *SessionState;
  unsigned int SessionId;
};

/* 281 */
struct _KLOCK_ENTRY_LOCK_STATE
{
  $2B7EC84890C36F0AC521B92622C0E173 ___u0;
  $08550D074B73B4538FD484E327510E4A ___u1;
};

/* 287 */
struct $B44277A236BA2515446CFE9D2BD19FA1
{
  void *volatile LockUnsafe;
  void *SessionState;
};

/* 288 */
struct $3F6BE2CFCA7B58D45F0CE7587C15918C
{
  volatile unsigned __int8 CrossThreadReleasableAndBusyByte;
  unsigned __int8 Reserved[2];
  volatile unsigned __int8 InTreeByte;
  unsigned int SessionId;
};

/* 289 */
union $05052AC0FDDBC594446C5455A027C5B5
{
  _KLOCK_ENTRY_LOCK_STATE LockState;
  $B44277A236BA2515446CFE9D2BD19FA1 __s1;
  $3F6BE2CFCA7B58D45F0CE7587C15918C __s2;
};

/* 290 */
union $BF02D8BC13B63B8FDE1771B5FDDF7233
{
  _RTL_RB_TREE OwnerTree;
  char CpuPriorityKey;
};

/* 291 */
struct $668427808A9148A4E82AB3652AA816BF
{
  unsigned __int16 IoBoost : 1;
  unsigned __int16 CpuBoostsBitmap : 15;
};

/* 292 */
union $11FDE5162195225841CB9F30EFEC3DD3
{
  unsigned __int16 AllBoosts;
  $668427808A9148A4E82AB3652AA816BF __s1;
};

/* 293 */
struct _KLOCK_ENTRY
{
  $569A5FC861CDB817105BEFCB9D6126E2 ___u0;
  $B4302C47BB4E1F04F17CCA78E6FF5D30 ___u1;
  $05052AC0FDDBC594446C5455A027C5B5 ___u2;
  $BF02D8BC13B63B8FDE1771B5FDDF7233 ___u3;
  _RTL_RB_TREE WaiterTree;
  unsigned int EntryLock;
  $11FDE5162195225841CB9F30EFEC3DD3 ___u6;
  unsigned __int16 IoNormalPriorityWaiterCount;
};

/* 320 */
struct $7C4DB4114A58F67F6F1FD3A0515C8C10
{
  _SINGLE_LIST_ENTRY ForegroundDpcStackListEntry;
  unsigned int InGlobalForegroundList;
};

/* 321 */
union $5937AFFB09DA1CEFDEF640E66968F4DB
{
  _LIST_ENTRY GlobalForegroundListEntry;
  $7C4DB4114A58F67F6F1FD3A0515C8C10 __s1;
};

/* 262 */
struct __declspec(align(8)) _KTHREAD
{
  _DISPATCHER_HEADER Header;
  void *SListFaultAddress;
  unsigned __int64 QuantumTarget;
  void *InitialStack;
  void *volatile StackLimit;
  void *StackBase;
  unsigned int ThreadLock;
  volatile unsigned __int64 CycleTime;
  unsigned int CurrentRunTime;
  unsigned int ExpectedRunTime;
  void *KernelStack;
  _KSCHEDULING_GROUP *volatile SchedulingGroup;
  _KWAIT_STATUS_REGISTER WaitRegister;
  volatile unsigned __int8 Running;
  unsigned __int8 Alerted[2];
  $6D95A43DDAA2E460B259BCBDE4DF1D48 ___u15;
  volatile unsigned __int8 Tag;
  unsigned __int8 SystemHeteroCpuPolicy;
  unsigned __int8 UserHeteroCpuPolicy : 7;
  unsigned __int8 ExplicitSystemHeteroCpuPolicy : 1;
  unsigned __int8 Spare0;
  unsigned int SystemCallNumber;
  void *FirstArgument;
  _KTRAP_FRAME *TrapFrame;
  $A9E1916A83A462EE325668D15688D0D3 ___u25;
  unsigned int UserIdealProcessor;
  unsigned int ContextSwitches;
  volatile unsigned __int8 State;
  char NpxState;
  unsigned __int8 WaitIrql;
  char WaitMode;
  volatile int WaitStatus;
  _KWAIT_BLOCK *WaitBlockList;
  $8BD1A1376999C9D29F3DF1FD8FFF1415 ___u34;
  _DISPATCHER_HEADER *volatile Queue;
  void *Teb;
  unsigned __int64 RelativeTimerBias;
  _KTIMER Timer;
  $C2C65ECA9D7E2EA396A8F8DA4343D565 ___u39;
  _LIST_ENTRY QueueListEntry;
  _KARM_VFP_STATE *VfpState;
  void *VfpReserved;
  $60D4260DC433A7B78EC290D9922E0CDA ___u43;
  int QueuePriority;
  _KPROCESS *Process;
  $122A7C2293B7839BC51985D07DECC1D6 ___u46;
  unsigned int AffinityVersion;
  $AA7DFC9D623B8637A30306C9BDD10A7F ___u48;
  unsigned int Spare15[1];
  $6C702497A9C2829D65C12D36C5BCCDC3 ___u50;
  char SuspendCount;
  char Saturation;
  unsigned __int16 SListFaultCount;
  $C7CBD9BDD3F131728637A5728C512192 ___u54;
  unsigned int UserTime;
  _KEVENT SuspendEvent;
  _LIST_ENTRY ThreadListEntry;
  _LIST_ENTRY MutantListHead;
  unsigned __int8 AbEntrySummary;
  unsigned __int8 AbWaitEntryCount;
  unsigned __int16 Spare20;
  _KLOCK_ENTRY LockEntries[6];
  _SINGLE_LIST_ENTRY PropagateBoostsEntry;
  _SINGLE_LIST_ENTRY IoSelfBoostsEntry;
  unsigned __int8 PriorityFloorCounts[16];
  unsigned int PriorityFloorSummary;
  volatile int AbCompletedIoBoostCount;
  volatile __int16 KeReferenceCount;
  unsigned __int8 AbOrphanedEntrySummary;
  unsigned __int8 AbOwnedEntryCount;
  unsigned int ForegroundLossTime;
  $5937AFFB09DA1CEFDEF640E66968F4DB ___u72;
  _KSCB *QueuedScb;
};

/* 336 */
struct __declspec(align(64)) _GENERAL_LOOKASIDE
{
  $14B862236A85F5FE9C15C3568D657E84 ___u0;
  unsigned __int16 Depth;
  unsigned __int16 MaximumDepth;
  unsigned int TotalAllocates;
  $9D02AA4AC86E49CEAF084B97B97744B1 ___u4;
  unsigned int TotalFrees;
  $4290DA71080BA5C562B380EC38D3C295 ___u6;
  _POOL_TYPE Type;
  unsigned int Tag;
  unsigned int Size;
  $9E7191D3A177C6DE83D4C34E69339763 ___u10;
  $F60AE0668387FDB559A88C7B4E183B6B ___u11;
  _LIST_ENTRY ListEntry;
  unsigned int LastTotalAllocates;
  $BA67176EA55FA2D963EA02A98A2C99D2 ___u14;
  unsigned int Future[2];
};

/* 345 */
struct $C2ED28A730D51292C730A0AD15C5C5D3
{
  unsigned __int8 AffinityFill[6];
  unsigned __int16 NodeNumber;
  unsigned __int16 PrimaryNodeNumber;
  unsigned __int8 Stride;
  unsigned __int8 Spare0;
};

/* 346 */
union $87DD2EEC194B409102E659D9F6D1CDED
{
  _GROUP_AFFINITY Affinity;
  $C2ED28A730D51292C730A0AD15C5C5D3 __s1;
};

/* 343 */
struct _flags
{
  unsigned __int8 Removable : 1;
  unsigned __int8 GroupAssigned : 1;
  unsigned __int8 GroupCommitted : 1;
  unsigned __int8 GroupAssignmentFixed : 1;
  unsigned __int8 Fill : 4;
};

/* 344 */
struct _KHETERO_PROCESSOR_SET
{
  unsigned int PreferredMask;
  unsigned int AvailableMask;
};

/* 347 */
struct _KNODE
{
  unsigned int IdleNonParkedCpuSet;
  unsigned int IdleSmtSet;
  unsigned int IdleCpuSet;
  __declspec(align(128)) unsigned int DeepIdleSet;
  unsigned int IdleConstrainedSet;
  unsigned int NonParkedSet;
  int ParkLock;
  unsigned int Seed;
  __declspec(align(128)) unsigned int SiblingMask;
  $87DD2EEC194B409102E659D9F6D1CDED ___u9;
  unsigned int SharedReadyQueueLeaders;
  unsigned int ProximityId;
  unsigned int Lowest;
  unsigned int Highest;
  unsigned __int8 MaximumProcessors;
  _flags Flags;
  unsigned __int8 Spare10;
  _KHETERO_PROCESSOR_SET HeteroSets[5];
};

/* 349 */
struct __declspec(align(4)) _PROCESSOR_IDLE_CONSTRAINTS
{
  unsigned __int64 TotalTime;
  unsigned __int64 IdleTime;
  unsigned __int64 ExpectedIdleDuration;
  unsigned __int64 MaxIdleDuration;
  unsigned int OverrideState;
  unsigned int TimeCheck;
  unsigned __int8 PromotePercent;
  unsigned __int8 DemotePercent;
  unsigned __int8 Parked;
  unsigned __int8 Interruptible;
  unsigned __int8 PlatformIdle;
  unsigned __int8 ExpectedWakeReason;
};

/* 351 */
struct _PROCESSOR_IDLE_PREPARE_INFO
{
  void *Context;
  __declspec(align(8)) _PROCESSOR_IDLE_CONSTRAINTS Constraints;
  unsigned int DependencyCount;
  unsigned int DependencyUsed;
  _PROCESSOR_IDLE_DEPENDENCY *DependencyArray;
  unsigned int PlatformIdleStateIndex;
  unsigned int ProcessorIdleStateIndex;
  unsigned int IdleSelectFailureMask;
};

/* 353 */
struct _PPM_SELECTION_MENU
{
  unsigned int Count;
  _PPM_SELECTION_MENU_ENTRY *Entries;
};

/* 356 */
struct _PPM_COORDINATED_SELECTION
{
  unsigned int MaximumStates;
  unsigned int SelectedStates;
  unsigned int DefaultSelection;
  unsigned int *Selection;
};

/* 358 */
struct _PPM_VETO_ACCOUNTING
{
  volatile int VetoPresent;
  _LIST_ENTRY VetoListHead;
  unsigned int PreallocatedVetoCount;
  _PPM_VETO_ENTRY *PreallocatedVetoList;
};

/* 359 */
struct _PPM_IDLE_STATE
{
  _KAFFINITY_EX DomainMembers;
  _UNICODE_STRING Name;
  unsigned int Latency;
  unsigned int BreakEvenDuration;
  unsigned int Power;
  unsigned int StateFlags;
  _PPM_VETO_ACCOUNTING VetoAccounting;
  unsigned __int8 StateType;
  unsigned __int8 InterruptsEnabled;
  unsigned __int8 Interruptible;
  unsigned __int8 ContextRetained;
  unsigned __int8 CacheCoherent;
  unsigned __int8 WakesSpuriously;
  unsigned __int8 PlatformOnly;
  unsigned __int8 NoCState;
};

/* 360 */
struct __declspec(align(8)) _PPM_IDLE_STATES
{
  unsigned __int8 InterfaceVersion;
  unsigned __int8 ForceIdle;
  unsigned __int8 EstimateIdleDuration;
  unsigned __int8 ExitLatencyTraceEnabled;
  unsigned __int8 NonInterruptibleTransition;
  unsigned __int8 UnaccountedTransition;
  unsigned __int8 IdleDurationLimited;
  unsigned int ExitLatencyCountdown;
  unsigned int TargetState;
  unsigned int ActualState;
  unsigned int OldState;
  unsigned int OverrideIndex;
  unsigned int ProcessorIdleCount;
  unsigned int Type;
  unsigned __int16 ReasonFlags;
  volatile unsigned __int64 InitiateWakeStamp;
  int PreviousStatus;
  unsigned int PreviousCancelReason;
  _KAFFINITY_EX PrimaryProcessorMask;
  _KAFFINITY_EX SecondaryProcessorMask;
  void (__cdecl *IdlePrepare)(_PROCESSOR_IDLE_PREPARE_INFO *);
  int (__cdecl *IdlePreExecute)(void *, unsigned int, unsigned int, unsigned int, unsigned int *);
  int (__cdecl *IdleExecute)(void *, unsigned int, unsigned int, unsigned int, unsigned int *);
  unsigned int (__cdecl *IdlePreselect)(void *, _PROCESSOR_IDLE_CONSTRAINTS *);
  unsigned int (__cdecl *IdleTest)(void *, unsigned int, unsigned int);
  unsigned int (__cdecl *IdleAvailabilityCheck)(void *, unsigned int);
  void (__cdecl *IdleComplete)(void *, unsigned int, unsigned int, unsigned int, unsigned int *);
  void (__cdecl *IdleCancel)(void *, unsigned int);
  unsigned __int8 (__cdecl *IdleIsHalted)(void *);
  unsigned __int8 (__cdecl *IdleInitiateWake)(void *);
  _PROCESSOR_IDLE_PREPARE_INFO PrepareInfo;
  _KAFFINITY_EX DeepIdleSnapshot;
  _PERFINFO_PPM_STATE_SELECTION *Tracing;
  _PERFINFO_PPM_STATE_SELECTION *CoordinatedTracing;
  _PPM_SELECTION_MENU ProcessorMenu;
  _PPM_SELECTION_MENU CoordinatedMenu;
  _PPM_COORDINATED_SELECTION CoordinatedSelection;
  _PPM_IDLE_STATE State[1];
};

/* 361 */
struct _PPM_SELECTION_STATISTICS
{
  unsigned __int64 SelectedCount;
  unsigned __int64 VetoCount;
  unsigned __int64 PreVetoCount;
  unsigned __int64 WrongProcessorCount;
  unsigned __int64 LatencyCount;
  unsigned __int64 IdleDurationCount;
  unsigned __int64 DeviceDependencyCount;
  unsigned __int64 ProcessorDependencyCount;
  unsigned __int64 PlatformOnlyCount;
  unsigned __int64 InterruptibleCount;
  unsigned __int64 LegacyOverrideCount;
  unsigned __int64 CstateCheckCount;
  unsigned __int64 NoCStateCount;
  unsigned __int64 CoordinatedDependencyCount;
};

/* 362 */
struct __declspec(align(8)) _PROC_IDLE_STATE_BUCKET
{
  unsigned __int64 TotalTime;
  unsigned __int64 MinTime;
  unsigned __int64 MaxTime;
  unsigned int Count;
};

/* 363 */
struct _PROC_IDLE_STATE_ACCOUNTING
{
  unsigned __int64 TotalTime;
  unsigned int CancelCount;
  unsigned int FailureCount;
  unsigned int SuccessCount;
  unsigned int InvalidBucketIndex;
  unsigned __int64 MinTime;
  unsigned __int64 MaxTime;
  _PPM_SELECTION_STATISTICS SelectionStatistics;
  _PROC_IDLE_STATE_BUCKET IdleTimeBuckets[26];
};

/* 364 */
struct _PROC_IDLE_ACCOUNTING
{
  unsigned int StateCount;
  unsigned int TotalTransitions;
  unsigned int ResetCount;
  unsigned int AbortCount;
  unsigned __int64 StartTime;
  unsigned __int64 PriorIdleTime;
  PPM_IDLE_BUCKET_TIME_TYPE TimeUnit;
  _PROC_IDLE_STATE_ACCOUNTING State[1];
};

/* 368 */
union $D60AF7B03C2552C5C3CFBE3EB1CC79DB
{
  void (__cdecl *InstantaneousRead)(unsigned int, unsigned int *);
  void (__cdecl *DifferentialRead)(unsigned int, unsigned __int8, unsigned __int64 *, unsigned __int64 *);
};

/* 369 */
struct _PROC_FEEDBACK_COUNTER
{
  $D60AF7B03C2552C5C3CFBE3EB1CC79DB ___u0;
  unsigned __int64 LastActualCount;
  unsigned __int64 LastReferenceCount;
  unsigned int CachedValue;
  __declspec(align(8)) unsigned __int8 Affinitized;
  unsigned __int8 Differential;
  unsigned __int8 Scaling;
  unsigned int Context;
};

/* 372 */
struct _PROC_PERF_CHECK_SNAP
{
  unsigned __int64 Time;
  unsigned __int64 Active;
  unsigned __int64 Stall;
  unsigned __int64 FrequencyScaledActive;
  unsigned __int64 PerformanceScaledActive;
  unsigned __int64 PerformanceScaledKernelActive;
  unsigned __int64 CyclesActive;
  unsigned __int64 CyclesAffinitized;
  unsigned __int64 TaggedThreadCycles[2];
};

/* 373 */
struct __declspec(align(8)) _PROC_PERF_CHECK
{
  unsigned __int64 LastActive;
  unsigned __int64 LastTime;
  unsigned __int64 LastStall;
  _PROC_PERF_CHECK_SNAP Snap;
  _PROC_PERF_CHECK_SNAP TempSnap;
  unsigned __int8 TaggedThreadPercent[2];
  unsigned __int8 Class0FloorPerfSelection;
  unsigned __int8 Class1MinimumPerfSelection;
};

/* 375 */
struct __declspec(align(4)) _PROC_PERF_DOMAIN
{
  _LIST_ENTRY Link;
  _KPRCB *Master;
  _KAFFINITY_EX Members;
  unsigned int ProcessorCount;
  unsigned __int8 Class;
  unsigned __int8 Spare[3];
  _PROC_PERF_CONSTRAINT *Processors;
  void (__cdecl *GetFFHThrottleState)(unsigned __int64 *);
  void (__cdecl *TimeWindowHandler)(unsigned int, unsigned int);
  void (__cdecl *BoostPolicyHandler)(unsigned int, unsigned int);
  void (__cdecl *BoostModeHandler)(unsigned int, unsigned int);
  void (__cdecl *EnergyPerfPreferenceHandler)(unsigned int, unsigned int);
  void (__cdecl *AutonomousActivityWindowHandler)(unsigned int, unsigned int);
  void (__cdecl *AutonomousModeHandler)(unsigned int, unsigned int);
  void (__cdecl *ReinitializeHandler)(unsigned int);
  unsigned int (__cdecl *PerfSelectionHandler)(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int *, unsigned __int64 *);
  void (__cdecl *PerfControlHandler)(unsigned int, unsigned __int64, unsigned int, unsigned int, unsigned int, unsigned __int8, unsigned __int8, unsigned __int8);
  unsigned int MaxFrequency;
  unsigned int NominalFrequency;
  unsigned int MaxPercent;
  unsigned int MinPerfPercent;
  unsigned int MinThrottlePercent;
  unsigned __int64 MinimumRelativePerformance;
  unsigned __int64 NominalRelativePerformance;
  unsigned __int8 Coordination;
  unsigned __int8 HardPlatformCap;
  unsigned __int8 AffinitizeControl;
  unsigned __int8 EfficientThrottle;
  unsigned __int8 AutonomousMode;
  unsigned int SelectedPercent;
  unsigned int SelectedFrequency;
  unsigned int DesiredPercent;
  unsigned int MaxPolicyPercent;
  unsigned int MinPolicyPercent;
  unsigned int ConstrainedMaxPercent;
  unsigned int ConstrainedMinPercent;
  unsigned int GuaranteedPercent;
  unsigned int TolerancePercent;
  unsigned __int64 SelectedState;
  unsigned __int64 PerfChangeTime;
  unsigned int PerfChangeIntervalCount;
  unsigned __int8 Force;
  unsigned __int8 ProvideGuidance;
};

/* 374 */
struct __declspec(align(8)) _PROC_PERF_CONSTRAINT
{
  _KPRCB *Prcb;
  unsigned int PerfContext;
  unsigned int ProcCap;
  unsigned int ProcFloor;
  unsigned int PlatformCap;
  unsigned int ThermalCap;
  unsigned int LimitReasons;
  unsigned __int64 PlatformCapStartTime;
  unsigned int TargetPercent;
  unsigned int SelectedPercent;
  unsigned int SelectedFrequency;
  unsigned int PreviousFrequency;
  unsigned int PreviousPercent;
  unsigned int LatestFrequencyPercent;
  unsigned __int64 SelectedState;
  unsigned __int8 Force;
};

/* 376 */
struct _PPM_CONCURRENCY_ACCOUNTING
{
  unsigned int Lock;
  unsigned int Processors;
  unsigned int ActiveProcessors;
  unsigned __int64 LastUpdateTime;
  unsigned __int64 TotalTime;
  unsigned __int64 AccumulatedTime[1];
};

/* 377 */
struct _PROC_PERF_LOAD
{
  unsigned __int8 BusyPercentage;
  unsigned __int8 FrequencyPercentage;
};

/* 378 */
struct __declspec(align(2)) _PROC_PERF_HISTORY_ENTRY
{
  unsigned __int16 Utility;
  unsigned __int16 AffinitizedUtility;
  unsigned __int8 Frequency;
  unsigned __int8 TaggedPercent[2];
};

/* 379 */
struct _PROC_PERF_HISTORY
{
  unsigned int Count;
  unsigned int Slot;
  unsigned int UtilityTotal;
  unsigned int AffinitizedUtilityTotal;
  unsigned int FrequencyTotal;
  unsigned int TaggedPercentTotal[2];
  _PROC_PERF_HISTORY_ENTRY HistoryList[1];
};

/* 328 */
struct _LOOKASIDE_LIST_EX
{
  _GENERAL_LOOKASIDE_POOL L;
};

/* 234 */
struct $6FAEF29703B46FE98A6AEC7A76F7EDDE
{
  unsigned __int16 Weight;
  unsigned __int16 MaxRate;
};

/* 235 */
union $E31BDF4B2847D451D9E938D5400D163A
{
  unsigned int Value;
  $6FAEF29703B46FE98A6AEC7A76F7EDDE __s1;
  unsigned __int16 MinRate;
};

/* 236 */
struct $DCF233EEF63147BCEE1A506F50B733EE
{
  unsigned __int32 Type : 1;
  unsigned __int32 Disabled : 1;
  unsigned __int32 Spare1 : 30;
};

/* 237 */
union $6899320F443C6F3DD64223A4FBAB2550
{
  unsigned int AllFlags;
  $DCF233EEF63147BCEE1A506F50B733EE __s1;
};

/* 238 */
struct _KSCHEDULING_GROUP_POLICY
{
  $E31BDF4B2847D451D9E938D5400D163A ___u0;
  $6899320F443C6F3DD64223A4FBAB2550 ___u1;
};

/* 244 */
union $73480C75C3B0798C0C10379745AB4546
{
  _LIST_ENTRY SchedulingGroupList;
  _LIST_ENTRY Sibling;
};

/* 242 */
struct _KSCHEDULING_GROUP
{
  _KSCHEDULING_GROUP_POLICY Policy;
  unsigned int RelativeWeight;
  unsigned int ChildMinRate;
  unsigned int ChildMinWeight;
  unsigned int ChildTotalWeight;
  unsigned __int64 QueryHistoryTimeStamp;
  __int64 NotificationCycles;
  $73480C75C3B0798C0C10379745AB4546 ___u7;
  _KDPC *NotificationDpc;
  _LIST_ENTRY ChildList;
  _KSCHEDULING_GROUP *Parent;
  __declspec(align(128)) _KSCB PerProcessor[1];
};

/* 248 */
union $683D1DEA970B99E59D6B70ED72F43550
{
  unsigned int FaultAddress;
  unsigned int TrapFrame;
};

/* 249 */
union $B0F4803E1AF7F6105224B17D852B00A7
{
  char PreviousMode;
  unsigned __int8 PreviousIrql;
};

/* 250 */
struct _KTRAP_FRAME
{
  unsigned int Arg3;
  unsigned int FaultStatus;
  $683D1DEA970B99E59D6B70ED72F43550 ___u2;
  unsigned int Reserved;
  unsigned __int8 ExceptionActive;
  unsigned __int8 ContextFromKFramesUnwound;
  unsigned __int8 DebugRegistersValid;
  $B0F4803E1AF7F6105224B17D852B00A7 ___u7;
  _KARM_VFP_STATE *VfpState;
  unsigned int Bvr[8];
  unsigned int Bcr[8];
  unsigned int Wvr[1];
  unsigned int Wcr[1];
  unsigned int R0;
  unsigned int R1;
  unsigned int R2;
  unsigned int R3;
  unsigned int R12;
  unsigned int Sp;
  unsigned int Lr;
  unsigned int R11;
  unsigned int Pc;
  unsigned int Cpsr;
};

/* 256 */
struct $2270EEC0AA7D5A95D8241B5905E94C92
{
  __int32 AutoAlignment : 1;
  __int32 DisableBoost : 1;
  __int32 DisableQuantum : 1;
  unsigned __int32 DeepFreeze : 1;
  unsigned __int32 TimerVirtualization : 1;
  unsigned __int32 CheckStackExtents : 1;
  unsigned __int32 SpareFlags0 : 2;
  unsigned __int32 ActiveGroupsMask : 1;
  __int32 ReservedFlags : 23;
};

/* 257 */
union $A974D126842F6D90DBF3C6BAB0D5B789
{
  $2270EEC0AA7D5A95D8241B5905E94C92 __s0;
  volatile int ProcessFlags;
};

/* 252 */
struct $0C2F1B0043396E6CDBDB29D72BF92FF3
{
  unsigned __int8 ExecuteDisable : 1;
  unsigned __int8 ExecuteEnable : 1;
  unsigned __int8 DisableThunkEmulation : 1;
  unsigned __int8 Permanent : 1;
  unsigned __int8 ExecuteDispatchEnable : 1;
  unsigned __int8 ImageDispatchEnable : 1;
  unsigned __int8 DisableExceptionChainValidation : 1;
  unsigned __int8 Spare : 1;
};

/* 253 */
union _KEXECUTE_OPTIONS
{
  $0C2F1B0043396E6CDBDB29D72BF92FF3 __s0;
  volatile unsigned __int8 ExecuteOptions;
  unsigned __int8 ExecuteOptionsNV;
};

/* 254 */
struct $1855273A941156425EBA8D11C2577346
{
  unsigned __int32 State : 3;
  unsigned __int32 StackCount : 29;
};

/* 255 */
volatile union _KSTACK_COUNT
{
  int Value;
  $1855273A941156425EBA8D11C2577346 __s1;
};

/* 258 */
struct __declspec(align(8)) _KPROCESS
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY ProfileListHead;
  unsigned int DirectoryTableBase;
  void *PageDirectory;
  void *PageDirectoryVa;
  unsigned int Asid;
  _LIST_ENTRY ThreadListHead;
  unsigned int ProcessLock;
  unsigned __int64 DeepFreezeStartTime;
  _KAFFINITY_EX Affinity;
  _LIST_ENTRY ReadyListHead;
  _SINGLE_LIST_ENTRY SwapListEntry;
  volatile _KAFFINITY_EX ActiveProcessors;
  $A974D126842F6D90DBF3C6BAB0D5B789 ___u13;
  char BasePriority;
  char QuantumReset;
  unsigned __int8 Visited;
  _KEXECUTE_OPTIONS Flags;
  unsigned int ThreadSeed[1];
  unsigned __int16 IdealNode[1];
  unsigned __int16 IdealGlobalNode;
  volatile _KSTACK_COUNT StackCount;
  _LIST_ENTRY ProcessListEntry;
  unsigned __int64 CycleTime;
  unsigned __int64 ContextSwitches;
  _KSCHEDULING_GROUP *SchedulingGroup;
  unsigned int FreezeCount;
  unsigned int KernelTime;
  unsigned int UserTime;
  void *InstrumentationCallback;
};

/* 263 */
struct _KQUEUE
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY EntryListHead;
  volatile unsigned int CurrentCount;
  unsigned int MaximumCount;
  _LIST_ENTRY ThreadListHead;
};

/* 268 */
struct _COUNTER_READING
{
  _HARDWARE_COUNTER_TYPE Type;
  unsigned int Index;
  unsigned __int64 Start;
  unsigned __int64 Total;
};

/* 270 */
struct _KTHREAD_COUNTERS
{
  unsigned __int64 WaitReasonBitMap;
  _THREAD_PERFORMANCE_DATA *UserData;
  unsigned int Flags;
  unsigned int ContextSwitches;
  unsigned __int64 CycleTimeBias;
  unsigned __int64 HardwareCounters;
  _COUNTER_READING HwCounter[16];
};

/* 271 */
struct _XSTATE_SAVE
{
  unsigned int Dummy;
};

/* 247 */
struct _KARM_VFP_STATE
{
  _KARM_VFP_STATE *Link;
  unsigned int Fpscr;
  unsigned int Reserved;
  unsigned int Reserved2;
  unsigned __int64 VfpD[32];
};

/* 243 */
struct __declspec(align(8)) _KSCB
{
  unsigned __int64 GenerationCycles;
  unsigned __int64 MinQuotaCycleTarget;
  unsigned __int64 MaxQuotaCycleTarget;
  unsigned __int64 RankCycleTarget;
  unsigned __int64 LongTermCycles;
  unsigned __int64 LastReportedCycles;
  volatile unsigned __int64 OverQuotaHistory;
  unsigned __int64 ReadyTime;
  unsigned __int64 InsertTime;
  _LIST_ENTRY PerProcessorList;
  _RTL_BALANCED_NODE QueueNode;
  unsigned __int8 Inserted : 1;
  unsigned __int8 MaxOverQuota : 1;
  unsigned __int8 MinOverQuota : 1;
  unsigned __int8 RankBias : 1;
  unsigned __int8 SoftCap : 1;
  unsigned __int8 Spare1 : 3;
  unsigned __int8 Depth;
  unsigned __int16 ReadySummary;
  unsigned int Rank;
  _LIST_ENTRY ReadyListHead[16];
  _RTL_RB_TREE ChildScbQueue;
  _KSCB *Parent;
  _KSCB *Root;
};

/* 350 */
struct __declspec(align(2)) _PROCESSOR_IDLE_DEPENDENCY
{
  unsigned int ProcessorIndex;
  unsigned __int8 ExpectedState;
  unsigned __int8 AllowDeeperStates;
  unsigned __int8 LooseDependency;
};

/* 352 */
struct _PERFINFO_PPM_STATE_SELECTION
{
  unsigned int SelectedState;
  unsigned int VetoedStates;
  unsigned int VetoReason[1];
};

/* 355 */
struct _PPM_SELECTION_MENU_ENTRY
{
  unsigned __int8 StrictDependency;
  unsigned __int8 InitiatingState;
  unsigned __int8 DependentState;
  unsigned int StateIndex;
  unsigned int Dependencies;
  _PPM_SELECTION_DEPENDENCY *DependencyList;
};

/* 357 */
struct _PPM_VETO_ENTRY
{
  _LIST_ENTRY Link;
  unsigned int VetoReason;
  unsigned int ReferenceCount;
};

/* 267 */
struct _PROCESSOR_NUMBER
{
  unsigned __int16 Group;
  unsigned __int8 Number;
  unsigned __int8 Reserved;
};

/* 269 */
struct _THREAD_PERFORMANCE_DATA
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  _PROCESSOR_NUMBER ProcessorNumber;
  unsigned int ContextSwitches;
  unsigned int HwCountersCount;
  volatile unsigned __int64 UpdateCount;
  unsigned __int64 WaitReasonBitMap;
  unsigned __int64 HardwareCounters;
  _COUNTER_READING CycleTime;
  _COUNTER_READING HwCounters[16];
};

/* 354 */
struct __unaligned __declspec(align(4)) _PPM_SELECTION_DEPENDENCY
{
  unsigned int Processor;
  _PPM_SELECTION_MENU Menu;
};

/* 296 */
struct $090017BAE6DC1001096D68736F813930
{
  unsigned __int32 : 1;
  unsigned __int32 DisableBoost : 1;
  unsigned __int32 ThreadFlagsSpare0 : 1;
  unsigned __int32 AlertedByThreadId : 1;
  unsigned __int32 QuantumDonation : 1;
  unsigned __int32 EnableStackSwap : 1;
  unsigned __int32 GuiThread : 1;
  unsigned __int32 DisableQuantum : 1;
  unsigned __int32 ChargeOnlySchedulingGroup : 1;
  unsigned __int32 DeferPreemption : 1;
  unsigned __int32 QueueDeferPreemption : 1;
  unsigned __int32 ForceDeferSchedule : 1;
  unsigned __int32 SharedReadyQueueAffinity : 1;
  unsigned __int32 FreezeCount : 1;
  unsigned __int32 TerminationApcRequest : 1;
  unsigned __int32 AutoBoostEntriesExhausted : 1;
  unsigned __int32 KernelStackResident : 1;
  unsigned __int32 CommitFailTerminateRequest : 1;
  unsigned __int32 ProcessStackCountDecremented : 1;
  unsigned __int32 ThreadFlagsSpare : 5;
  unsigned __int32 EtwStackTraceApcInserted : 8;
};

/* 297 */
union $8C150EBF9627B23522B6542ECB627F3B
{
  volatile int ThreadFlags;
  $090017BAE6DC1001096D68736F813930 __s1;
};

/* 400 */
struct _KFLOATING_SAVE
{
  unsigned int Dummy;
};

/* 401 */
struct _EXT_SET_PARAMETERS_V0
{
  unsigned int Version;
  unsigned int Reserved;
  __int64 NoWakeTolerance;
};

/* 402 */
struct _KERNEL_STACK_SEGMENT
{
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int KernelStack;
  unsigned int InitialStack;
};

/* 403 */
struct $4A7C60AD30941FD55170866FF78660AF
{
  unsigned __int32 StackExpansion : 1;
};

/* 404 */
union $2BEC70EF2BDDB8B8A2B427BB0FE2501C
{
  unsigned int ActualLimit;
  $4A7C60AD30941FD55170866FF78660AF __s1;
};

/* 405 */
struct _KSTACK_CONTROL
{
  unsigned int StackBase;
  $2BEC70EF2BDDB8B8A2B427BB0FE2501C ___u1;
  _KERNEL_STACK_SEGMENT Previous;
};

/* 406 */
struct _FAST_MUTEX
{
  int Count;
  void *Owner;
  unsigned int Contention;
  _KEVENT Event;
  unsigned int OldIrql;
};

/* 407 */
struct _NPAGED_LOOKASIDE_LIST
{
  _GENERAL_LOOKASIDE L;
};

/* 408 */
struct _PAGED_LOOKASIDE_LIST
{
  _GENERAL_LOOKASIDE L;
};

/* 409 */
union $250F5FE22B4503EFD7D48C86CC7F2167
{
  int Status;
  void *Pointer;
};

/* 410 */
struct _IO_STATUS_BLOCK
{
  $250F5FE22B4503EFD7D48C86CC7F2167 ___u0;
  unsigned int Information;
};

/* 411 */
union $A28C18850CF3D184BADE16FA41548AB0
{
  __int64 UseThisFieldToCopy;
  long double DoNotUseThisField;
};

/* 412 */
struct _QUAD
{
  $A28C18850CF3D184BADE16FA41548AB0 ___u0;
};

/* 413 */
struct _WORK_QUEUE_ITEM
{
  _LIST_ENTRY List;
  void (__cdecl *WorkerRoutine)(void *);
  void *Parameter;
};

/* 414 */
struct _EXT_DELETE_PARAMETERS
{
  unsigned int Version;
  unsigned int Reserved;
  void (__cdecl *DeleteCallback)(void *);
  void *DeleteContext;
};

/* 415 */
struct $64EDA4DD838E80CF9A7DD220E06F3FD2
{
  unsigned __int32 Locked : 1;
  unsigned __int32 Waiting : 1;
  unsigned __int32 Waking : 1;
  unsigned __int32 MultipleShared : 1;
  unsigned __int32 Shared : 28;
};

/* 416 */
union $C5CA3D2C36A743F60A4393EA34168544
{
  $64EDA4DD838E80CF9A7DD220E06F3FD2 __s0;
  unsigned int Value;
  void *Ptr;
};

/* 417 */
struct _EX_PUSH_LOCK
{
  $C5CA3D2C36A743F60A4393EA34168544 ___u0;
};

/* 418 */
struct _KPRIQUEUE
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY EntryListHead[32];
  volatile int CurrentCount[32];
  unsigned int MaximumCount;
  _LIST_ENTRY ThreadListHead;
};

/* 420 */
struct _EX_WORK_QUEUE
{
  _KPRIQUEUE WorkPriQueue;
  _ENODE *Node;
  volatile unsigned int WorkItemsProcessed;
  unsigned int WorkItemsProcessedLastPass;
  volatile int ThreadCount;
  __int32 MinThreads : 31;
  unsigned __int32 TryFailed : 1;
  int MaxThreads;
  _EXQUEUEINDEX QueueIndex;
};

/* 829 */
struct $C80C13C5A197C992E7995DD7BE7194F2
{
  unsigned __int32 ExWorkerFullInit : 1;
  unsigned __int32 ExWorkerStructInit : 1;
};

/* 830 */
union $5F044F204902BF90988694D7D8F6E88D
{
  $C80C13C5A197C992E7995DD7BE7194F2 __s0;
  volatile unsigned int ExWorkerFlags;
};

/* 419 */
struct __declspec(align(8)) _ENODE
{
  _KNODE Ncb;
  _EX_WORK_QUEUE *volatile ExWorkQueues[8];
  _EX_WORK_QUEUE ExWorkQueue;
  _KEVENT ExpThreadSetManagerEvent;
  _KTIMER ExpDeadlockTimer;
  _KEVENT ExpThreadReaperEvent;
  _KWAIT_BLOCK WaitBlocks[3];
  _ETHREAD *ExpWorkerThreadBalanceManagerPtr;
  unsigned int ExpWorkerSeed;
  $5F044F204902BF90988694D7D8F6E88D ___u9;
};

/* 816 */
union $C6B9D31121D8EA82A8D59119CC285E69
{
  _LARGE_INTEGER ExitTime;
  _LIST_ENTRY KeyedWaitChain;
};

/* 817 */
struct $03D8BF64EDBF31DF6271812E8E91AA90
{
  void *ForwardLinkShadow;
  void *StartAddress;
};

/* 818 */
union $FD0042717790F7695AEB8A489677BD71
{
  _LIST_ENTRY PostBlockList;
  $03D8BF64EDBF31DF6271812E8E91AA90 __s1;
};

/* 819 */
union $A2FBADB45A5D33E009A3067EF7CA0E99
{
  _TERMINATION_PORT *TerminationPort;
  _ETHREAD *ReaperLink;
  void *KeyedWaitValue;
};

/* 423 */
struct _CLIENT_ID
{
  void *UniqueProcess;
  void *UniqueThread;
};

/* 424 */
struct _KSEMAPHORE
{
  _DISPATCHER_HEADER Header;
  int Limit;
};

/* 820 */
union $03814BB5B9B22FCFE0D9CAD7FD243E15
{
  _KSEMAPHORE KeyedWaitSemaphore;
  _KSEMAPHORE AlpcWaitSemaphore;
};

/* 425 */
struct $1A30BD48594F07D7F88BEB957A5A6000
{
  unsigned __int32 ImpersonationLevel : 2;
  unsigned __int32 EffectiveOnly : 1;
};

/* 426 */
union _PS_CLIENT_SECURITY_CONTEXT
{
  unsigned int ImpersonationData;
  void *ImpersonationToken;
  $1A30BD48594F07D7F88BEB957A5A6000 __s2;
};

/* 454 */
union $D38EED4BDC297EF4E8AB109731647B99
{
  unsigned int Count;
  void *Ptr;
};

/* 455 */
struct _EX_RUNDOWN_REF
{
  $D38EED4BDC297EF4E8AB109731647B99 ___u0;
};

/* 821 */
struct $1A9E2D20199749507AADF4F1AC90350D
{
  unsigned __int32 Terminated : 1;
  unsigned __int32 ThreadInserted : 1;
  unsigned __int32 HideFromDebugger : 1;
  unsigned __int32 ActiveImpersonationInfo : 1;
  unsigned __int32 HardErrorsAreDisabled : 1;
  unsigned __int32 BreakOnTermination : 1;
  unsigned __int32 SkipCreationMsg : 1;
  unsigned __int32 SkipTerminationMsg : 1;
  unsigned __int32 CopyTokenOnOpen : 1;
  unsigned __int32 ThreadIoPriority : 3;
  unsigned __int32 ThreadPagePriority : 3;
  unsigned __int32 RundownFail : 1;
  unsigned __int32 UmsForceQueueTermination : 1;
  unsigned __int32 IndirectCpuSets : 1;
  unsigned __int32 ReservedCrossThreadFlags : 14;
};

/* 822 */
union $6552014FA94297A2F258B91D05FF3409
{
  unsigned int CrossThreadFlags;
  $1A9E2D20199749507AADF4F1AC90350D __s1;
};

/* 823 */
struct $07F0B6F2DB368427A7E45F344EC56CFC
{
  unsigned __int32 ActiveExWorker : 1;
  unsigned __int32 MemoryMaker : 1;
  unsigned __int32 ClonedThread : 1;
  unsigned __int32 KeyedEventInUse : 1;
  unsigned __int32 SelfTerminate : 1;
  unsigned __int32 RespectIoPriority : 1;
  unsigned __int32 ReservedSameThreadPassiveFlags : 26;
};

/* 824 */
union $3C67BCFD4B21E0D52F5AFAE03F676E6C
{
  unsigned int SameThreadPassiveFlags;
  $07F0B6F2DB368427A7E45F344EC56CFC __s1;
};

/* 825 */
struct $BEAA8316AFBC3276284AB117A4289881
{
  unsigned __int8 OwnsProcessAddressSpaceExclusive : 1;
  unsigned __int8 OwnsProcessAddressSpaceShared : 1;
  unsigned __int8 HardFaultBehavior : 1;
  unsigned __int8 StartAddressInvalid : 1;
  unsigned __int8 EtwCalloutActive : 1;
  unsigned __int8 SuppressSymbolLoad : 1;
  unsigned __int8 Prefetching : 1;
  unsigned __int8 OwnsVadExclusive : 1;
  unsigned __int8 SystemPagePriorityActive : 1;
  unsigned __int8 SystemPagePriority : 3;
};

/* 826 */
union $19B65BF11467CA4F86852B8650C56E29
{
  unsigned int SameThreadApcFlags;
  $BEAA8316AFBC3276284AB117A4289881 __s1;
};

/* 827 */
union $BCDEC18C25A84109137EA1753A3327D2
{
  void *AlpcMessage;
  unsigned int AlpcReceiveAttributeSet;
};

/* 466 */
struct _PS_PROPERTY_SET
{
  _LIST_ENTRY ListHead;
  unsigned int Lock;
};

/* 828 */
union $5163EFD1C9AF4E067A77641DC349F5DD
{
  unsigned int SelectedCpuSets;
  unsigned int *SelectedCpuSetsIndirect;
};

/* 422 */
struct __declspec(align(8)) _ETHREAD
{
  _KTHREAD Tcb;
  _LARGE_INTEGER CreateTime;
  $C6B9D31121D8EA82A8D59119CC285E69 ___u2;
  void *ChargeOnlySession;
  $FD0042717790F7695AEB8A489677BD71 ___u4;
  $A2FBADB45A5D33E009A3067EF7CA0E99 ___u5;
  unsigned int ActiveTimerListLock;
  _LIST_ENTRY ActiveTimerListHead;
  _CLIENT_ID Cid;
  $03814BB5B9B22FCFE0D9CAD7FD243E15 ___u9;
  _PS_CLIENT_SECURITY_CONTEXT ClientSecurity;
  _LIST_ENTRY IrpList;
  unsigned int TopLevelIrp;
  _DEVICE_OBJECT *DeviceToVerify;
  void *Win32StartAddress;
  void *LegacyPowerObject;
  _LIST_ENTRY ThreadListEntry;
  _EX_RUNDOWN_REF RundownProtect;
  _EX_PUSH_LOCK ThreadLock;
  unsigned int ReadClusterSize;
  volatile int MmLockOrdering;
  volatile int CmLockOrdering;
  $6552014FA94297A2F258B91D05FF3409 ___u22;
  $3C67BCFD4B21E0D52F5AFAE03F676E6C ___u23;
  $19B65BF11467CA4F86852B8650C56E29 ___u24;
  unsigned __int8 CacheManagerActive;
  unsigned __int8 DisablePageFaultClustering;
  unsigned __int8 ActiveFaultCount;
  unsigned __int8 LockOrderState;
  unsigned int AlpcMessageId;
  $BCDEC18C25A84109137EA1753A3327D2 ___u30;
  int ExitStatus;
  _LIST_ENTRY AlpcWaitListEntry;
  unsigned int CacheManagerCount;
  unsigned int IoBoostCount;
  _LIST_ENTRY BoostList;
  _LIST_ENTRY DeboostList;
  unsigned int BoostListLock;
  unsigned int IrpListLock;
  void *ReservedForSynchTracking;
  _SINGLE_LIST_ENTRY CmCallbackListHead;
  const _GUID *ActivityId;
  _SINGLE_LIST_ENTRY SeLearningModeListHead;
  void *VerifierContext;
  unsigned int KernelStackReference;
  void *AdjustedClientToken;
  void *WorkingOnBehalfClient;
  _PS_PROPERTY_SET PropertySet;
  void *PicoContext;
  unsigned int UserRoBase;
  unsigned int UserRwBase;
  _THREAD_ENERGY_VALUES *EnergyValues;
  volatile unsigned int CmCellReferences;
  $5163EFD1C9AF4E067A77641DC349F5DD ___u53;
  struct _ESILO *Silo;
};

/* 421 */
struct _TERMINATION_PORT
{
  _TERMINATION_PORT *Next;
  void *Port;
};

/* 616 */
struct __declspec(align(4)) _KDEVICE_QUEUE_ENTRY
{
  _LIST_ENTRY DeviceListEntry;
  unsigned int SortKey;
  unsigned __int8 Inserted;
};

/* 803 */
struct $9E71ED401349BD6FB4E9B99A87F5A466
{
  _LIST_ENTRY DmaWaitEntry;
  unsigned int NumberOfChannels;
  unsigned __int32 SyncCallback : 1;
  unsigned __int32 DmaContext : 1;
  unsigned __int32 Reserved : 30;
};

/* 804 */
union $CFAC391722989CAA960446C3750B6C09
{
  _KDEVICE_QUEUE_ENTRY WaitQueueEntry;
  $9E71ED401349BD6FB4E9B99A87F5A466 __s1;
};

/* 805 */
struct _WAIT_CONTEXT_BLOCK
{
  $CFAC391722989CAA960446C3750B6C09 ___u0;
  _IO_ALLOCATION_ACTION (__cdecl *DeviceRoutine)(_DEVICE_OBJECT *, _IRP *, void *, void *);
  void *DeviceContext;
  unsigned int NumberOfMapRegisters;
  void *DeviceObject;
  void *CurrentIrp;
  _KDPC *BufferChainingDpc;
};

/* 806 */
union $7546F9715C69AD223B4B48E97659AA57
{
  _LIST_ENTRY ListEntry;
  _WAIT_CONTEXT_BLOCK Wcb;
};

/* 807 */
struct __declspec(align(4)) _KDEVICE_QUEUE
{
  __int16 Type;
  __int16 Size;
  _LIST_ENTRY DeviceListHead;
  unsigned int Lock;
  unsigned __int8 Busy;
};

/* 427 */
struct _DEVICE_OBJECT
{
  __int16 Type;
  unsigned __int16 Size;
  int ReferenceCount;
  _DRIVER_OBJECT *DriverObject;
  _DEVICE_OBJECT *NextDevice;
  _DEVICE_OBJECT *AttachedDevice;
  _IRP *CurrentIrp;
  _IO_TIMER *Timer;
  unsigned int Flags;
  unsigned int Characteristics;
  _VPB *Vpb;
  void *DeviceExtension;
  unsigned int DeviceType;
  char StackSize;
  $7546F9715C69AD223B4B48E97659AA57 Queue;
  unsigned int AlignmentRequirement;
  _KDEVICE_QUEUE DeviceQueue;
  _KDPC Dpc;
  unsigned int ActiveThreadCount;
  void *SecurityDescriptor;
  _KEVENT DeviceLock;
  unsigned __int16 SectorSize;
  unsigned __int16 Spare1;
  _DEVOBJ_EXTENSION *DeviceObjectExtension;
  void *Reserved;
};

/* 815 */
struct _THREAD_ENERGY_VALUES
{
  unsigned __int64 Cycles[4][2];
};

/* 428 */
struct _DRIVER_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int Flags;
  void *DriverStart;
  unsigned int DriverSize;
  void *DriverSection;
  _DRIVER_EXTENSION *DriverExtension;
  _UNICODE_STRING DriverName;
  _UNICODE_STRING *HardwareDatabase;
  _FAST_IO_DISPATCH *FastIoDispatch;
  int (__cdecl *DriverInit)(_DRIVER_OBJECT *, _UNICODE_STRING *);
  void (__cdecl *DriverStartIo)(_DEVICE_OBJECT *, _IRP *);
  void (__cdecl *DriverUnload)(_DRIVER_OBJECT *);
  int (__cdecl *MajorFunction[28])(_DEVICE_OBJECT *, _IRP *);
};

/* 612 */
union $9DE26308FDFF65EF4E5EDF2A821D1849
{
  _IRP *MasterIrp;
  int IrpCount;
  void *SystemBuffer;
};

/* 613 */
union $353CEE123C0B408F2721635B3EF0660C
{
  void (__cdecl *UserApcRoutine)(void *, _IO_STATUS_BLOCK *, unsigned int);
  void *IssuingProcess;
};

/* 614 */
struct $D0308516B22FAF9D4BB62C107C4EEF83
{
  $353CEE123C0B408F2721635B3EF0660C ___u0;
  void *UserApcContext;
};

/* 615 */
union $53FD7ADAD53FA40CDD4FF4CB24AC17BA
{
  $D0308516B22FAF9D4BB62C107C4EEF83 AsynchronousParameters;
  _LARGE_INTEGER AllocationSize;
};

/* 708 */
union $A61E82DE28CCA80BD7FC7CDC06835239
{
  _KDEVICE_QUEUE_ENTRY DeviceQueueEntry;
  void *DriverContext[4];
};

/* 709 */
union $5C5FE9CC3646631DC2ED82D0CD117AAB
{
  _IO_STACK_LOCATION *CurrentStackLocation;
  unsigned int PacketType;
};

/* 710 */
struct $9802B2DD545F17A090CE71F7CBFD825F
{
  $A61E82DE28CCA80BD7FC7CDC06835239 ___u0;
  _ETHREAD *Thread;
  char *AuxiliaryBuffer;
  _LIST_ENTRY ListEntry;
  $5C5FE9CC3646631DC2ED82D0CD117AAB ___u4;
  _FILE_OBJECT *OriginalFileObject;
  void *IrpExtension;
};

/* 711 */
union $E23BA5597E6974AECCC44813942593A3
{
  $9802B2DD545F17A090CE71F7CBFD825F Overlay;
  _KAPC Apc;
  void *CompletionKey;
};

/* 611 */
struct _IRP
{
  __int16 Type;
  unsigned __int16 Size;
  _MDL *MdlAddress;
  unsigned int Flags;
  $9DE26308FDFF65EF4E5EDF2A821D1849 AssociatedIrp;
  _LIST_ENTRY ThreadListEntry;
  _IO_STATUS_BLOCK IoStatus;
  char RequestorMode;
  unsigned __int8 PendingReturned;
  char StackCount;
  char CurrentLocation;
  unsigned __int8 Cancel;
  unsigned __int8 CancelIrql;
  char ApcEnvironment;
  unsigned __int8 AllocationFlags;
  _IO_STATUS_BLOCK *UserIosb;
  _KEVENT *UserEvent;
  $53FD7ADAD53FA40CDD4FF4CB24AC17BA Overlay;
  void (__cdecl *CancelRoutine)(_DEVICE_OBJECT *, _IRP *);
  void *UserBuffer;
  $E23BA5597E6974AECCC44813942593A3 Tail;
};

/* 802 */
struct _IO_TIMER
{
  __int16 Type;
  __int16 TimerFlag;
  _LIST_ENTRY TimerList;
  void (__cdecl *TimerRoutine)(_DEVICE_OBJECT *, void *);
  void *Context;
  _DEVICE_OBJECT *DeviceObject;
};

/* 430 */
struct _VPB
{
  __int16 Type;
  __int16 Size;
  unsigned __int16 Flags;
  unsigned __int16 VolumeLabelLength;
  _DEVICE_OBJECT *DeviceObject;
  _DEVICE_OBJECT *RealDevice;
  unsigned int SerialNumber;
  unsigned int ReferenceCount;
  wchar_t VolumeLabel[32];
};

/* 814 */
struct _DEVOBJ_EXTENSION
{
  __int16 Type;
  unsigned __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  unsigned int PowerFlags;
  _DEVICE_OBJECT_POWER_EXTENSION *Dope;
  unsigned int ExtensionFlags;
  void *DeviceNode;
  _DEVICE_OBJECT *AttachedTo;
  int StartIoCount;
  int StartIoKey;
  unsigned int StartIoFlags;
  _VPB *Vpb;
  void *DependencyNode;
  void *InterruptContext;
  void *VerifierContext;
};

/* 451 */
struct _DRIVER_EXTENSION
{
  _DRIVER_OBJECT *DriverObject;
  int (__cdecl *AddDevice)(_DRIVER_OBJECT *, _DEVICE_OBJECT *);
  unsigned int Count;
  _UNICODE_STRING ServiceKeyName;
  _IO_CLIENT_EXTENSION *ClientDriverExtension;
  _FS_FILTER_CALLBACKS *FsFilterCallbacks;
  void *KseCallbacks;
  void *DvCallbacks;
  void *VerifierContext;
};

/* 801 */
struct _FAST_IO_DISPATCH
{
  unsigned int SizeOfFastIoDispatch;
  unsigned __int8 (__cdecl *FastIoCheckIfPossible)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned __int8, unsigned int, void *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoQueryBasicInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_BASIC_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoQueryStandardInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_STANDARD_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoLock)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, _EPROCESS *, unsigned int, unsigned __int8, unsigned __int8, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoUnlockSingle)(_FILE_OBJECT *, _LARGE_INTEGER *, _LARGE_INTEGER *, _EPROCESS *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoUnlockAll)(_FILE_OBJECT *, _EPROCESS *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoUnlockAllByKey)(_FILE_OBJECT *, void *, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoDeviceControl)(_FILE_OBJECT *, unsigned __int8, void *, unsigned int, void *, unsigned int, unsigned int, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  void (__cdecl *AcquireFileForNtCreateSection)(_FILE_OBJECT *);
  void (__cdecl *ReleaseFileForNtCreateSection)(_FILE_OBJECT *);
  void (__cdecl *FastIoDetachDevice)(_DEVICE_OBJECT *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoQueryNetworkOpenInfo)(_FILE_OBJECT *, unsigned __int8, _FILE_NETWORK_OPEN_INFORMATION *, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  int (__cdecl *AcquireForModWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, _ERESOURCE **, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *MdlRead)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *MdlReadComplete)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *PrepareMdlWrite)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, _MDL **, _IO_STATUS_BLOCK *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *MdlWriteComplete)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoReadCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoWriteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, unsigned int, unsigned int, void *, _MDL **, _IO_STATUS_BLOCK *, _COMPRESSED_DATA_INFO *, unsigned int, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *MdlReadCompleteCompressed)(_FILE_OBJECT *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *MdlWriteCompleteCompressed)(_FILE_OBJECT *, _LARGE_INTEGER *, _MDL *, _DEVICE_OBJECT *);
  unsigned __int8 (__cdecl *FastIoQueryOpen)(_IRP *, _FILE_NETWORK_OPEN_INFORMATION *, _DEVICE_OBJECT *);
  int (__cdecl *ReleaseForModWrite)(_FILE_OBJECT *, _ERESOURCE *, _DEVICE_OBJECT *);
  int (__cdecl *AcquireForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
  int (__cdecl *ReleaseForCcFlush)(_FILE_OBJECT *, _DEVICE_OBJECT *);
};

/* 608 */
struct _MDL
{
  _MDL *Next;
  __int16 Size;
  __int16 MdlFlags;
  _EPROCESS *Process;
  void *MappedSystemVa;
  void *StartVa;
  unsigned int ByteCount;
  unsigned int ByteOffset;
};

/* 625 */
struct $2F42C5E85CAF9DC44F8213123DA0CBC3
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  unsigned int EaLength;
};

/* 627 */
struct $765D50C56E9656714DC87146C0044508
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _NAMED_PIPE_CREATE_PARAMETERS *Parameters;
};

/* 629 */
struct $2C2B8F29801866A818BE31279E7D0A31
{
  _IO_SECURITY_CONTEXT *SecurityContext;
  unsigned int Options;
  unsigned __int16 Reserved;
  unsigned __int16 ShareAccess;
  _MAILSLOT_CREATE_PARAMETERS *Parameters;
};

/* 630 */
struct $E2D07271286968AE30054276B80D8444
{
  unsigned int Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 631 */
struct $A004D8A4B22812CCD6F970F063732473
{
  unsigned int Length;
  _UNICODE_STRING *FileName;
  _FILE_INFORMATION_CLASS FileInformationClass;
  unsigned int FileIndex;
};

/* 632 */
struct $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61
{
  unsigned int Length;
  unsigned int CompletionFilter;
};

/* 633 */
struct $8D6960FD873EEA4C5572330FF8084E6B
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
};

/* 634 */
struct $BBD6C80A82148A7CAD5B218A5A41C1D9
{
  unsigned __int8 ReplaceIfExists;
  unsigned __int8 AdvanceOnly;
};

/* 635 */
union $F1E68E37A6F08059F1225AB0397D2005
{
  $BBD6C80A82148A7CAD5B218A5A41C1D9 __s0;
  unsigned int ClusterCount;
  void *DeleteHandle;
};

/* 636 */
struct $75DE402AB6162907567FF09A6D2E3BC5
{
  unsigned int Length;
  _FILE_INFORMATION_CLASS FileInformationClass;
  _FILE_OBJECT *FileObject;
  $F1E68E37A6F08059F1225AB0397D2005 ___u3;
};

/* 637 */
struct $43049A1C9CD1076EE2F76BA56B9556D6
{
  unsigned int Length;
  void *EaList;
  unsigned int EaListLength;
  unsigned int EaIndex;
};

/* 638 */
struct $44CAF4394294FD1AA9144BF9A47D2B76
{
  unsigned int Length;
};

/* 639 */
struct $C2F4085A4AA871CB36334780FCF9A841
{
  unsigned int Length;
  _FSINFOCLASS FsInformationClass;
};

/* 640 */
struct $1452ECD7C6E5AB3C058EED8909EEC64B
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int FsControlCode;
  void *Type3InputBuffer;
};

/* 641 */
struct $1CE1E05F2DF989B033086AFF38730480
{
  _LARGE_INTEGER *Length;
  unsigned int Key;
  _LARGE_INTEGER ByteOffset;
};

/* 642 */
struct $343716E60DEC8CEA3C236115305CA9A5
{
  unsigned int OutputBufferLength;
  unsigned int InputBufferLength;
  unsigned int IoControlCode;
  void *Type3InputBuffer;
};

/* 643 */
struct $79FAFD50642EF9FCAC6F48CCDD5826D7
{
  unsigned int SecurityInformation;
  unsigned int Length;
};

/* 644 */
struct $29E784017BF8D630C3CED492840B3F1E
{
  unsigned int SecurityInformation;
  void *SecurityDescriptor;
};

/* 645 */
struct $C50D2E4B55AED3A7BA6113010AA7BA16
{
  _VPB *Vpb;
  _DEVICE_OBJECT *DeviceObject;
};

/* 646 */
struct $B2B4984C7002DD41520623255E2F9497
{
  struct _SCSI_REQUEST_BLOCK *Srb;
};

/* 650 */
struct $80680BF386282656C33036233C1B0598
{
  unsigned int Length;
  void *StartSid;
  _FILE_GET_QUOTA_INFORMATION *SidList;
  unsigned int SidListLength;
};

/* 651 */
struct $713C794AFB27B42EB67C5AFA5A09B408
{
  _DEVICE_RELATION_TYPE Type;
};

/* 653 */
struct $7862E39CDF7A9C3490E55E63DE42BDF9
{
  const _GUID *InterfaceType;
  unsigned __int16 Size;
  unsigned __int16 Version;
  _INTERFACE *Interface;
  void *InterfaceSpecificData;
};

/* 655 */
struct $DBE7C60DF6D7BA1CABF835B7D1949091
{
  _DEVICE_CAPABILITIES *Capabilities;
};

/* 671 */
struct $1FF231A0A489980684278DD9CA90923E
{
  _IO_RESOURCE_REQUIREMENTS_LIST *IoResourceRequirementList;
};

/* 672 */
struct $5E4425892CB91929A7D567B5DA0A3F92
{
  unsigned int WhichSpace;
  void *Buffer;
  unsigned int Offset;
  unsigned int Length;
};

/* 673 */
struct $B367FCCFB95D7087158A479FE9C2D0D7
{
  unsigned __int8 Lock;
};

/* 674 */
struct $A312683312136E39F73317D0B4735A54
{
  BUS_QUERY_ID_TYPE IdType;
};

/* 675 */
struct $F43F5BEE615127CCFC8BF7EB48A433E3
{
  DEVICE_TEXT_TYPE DeviceTextType;
  unsigned int LocaleId;
};

/* 676 */
struct $B26472013C4CA8BEEE611D4344FFF8B7
{
  unsigned __int8 InPath;
  unsigned __int8 Reserved[3];
  _DEVICE_USAGE_NOTIFICATION_TYPE Type;
};

/* 677 */
struct $BD447FB88A3B9F295959D37FB2D4CDCD
{
  _SYSTEM_POWER_STATE PowerState;
};

/* 679 */
struct $31A5521DDBBF1D4D6D9EFE2F175367C7
{
  _POWER_SEQUENCE *PowerSequence;
};

/* 680 */
struct $76514DB155979F88E47E6F460A9859AB
{
  unsigned __int32 Reserved1 : 8;
  unsigned __int32 TargetSystemState : 4;
  unsigned __int32 EffectiveSystemState : 4;
  unsigned __int32 CurrentSystemState : 4;
  unsigned __int32 IgnoreHibernationPath : 1;
  unsigned __int32 PseudoTransition : 1;
  unsigned __int32 Reserved2 : 10;
};

/* 681 */
union $5EE1B445DBD1C6DF924ED10BD812B235
{
  $76514DB155979F88E47E6F460A9859AB __s0;
  unsigned int ContextAsUlong;
};

/* 682 */
struct _SYSTEM_POWER_STATE_CONTEXT
{
  $5EE1B445DBD1C6DF924ED10BD812B235 ___u0;
};

/* 684 */
union $937DDA658B7C78D7F8728CEE888A9841
{
  unsigned int SystemContext;
  _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext;
};

/* 683 */
union _POWER_STATE
{
  _SYSTEM_POWER_STATE SystemState;
  _DEVICE_POWER_STATE DeviceState;
};

/* 685 */
struct $2A6AE8F544760E4C10A5D5D12C644368
{
  $937DDA658B7C78D7F8728CEE888A9841 ___u0;
  _POWER_STATE_TYPE Type;
  _POWER_STATE State;
  POWER_ACTION ShutdownType;
};

/* 703 */
struct $D1B36B59D065C84983C1EF1C57A81CAC
{
  _CM_RESOURCE_LIST *AllocatedResources;
  _CM_RESOURCE_LIST *AllocatedResourcesTranslated;
};

/* 704 */
struct $27D1A893733DBE62F2FCC36974CB79FA
{
  unsigned int ProviderId;
  void *DataPath;
  unsigned int BufferSize;
  void *Buffer;
};

/* 705 */
struct $228F32E73A128818A25FF1959272C294
{
  void *Argument1;
  void *Argument2;
  void *Argument3;
  void *Argument4;
};

/* 706 */
union $F344C448747DE864EE6FA4DB71941836
{
  $2F42C5E85CAF9DC44F8213123DA0CBC3 Create;
  $765D50C56E9656714DC87146C0044508 CreatePipe;
  $2C2B8F29801866A818BE31279E7D0A31 CreateMailslot;
  $E2D07271286968AE30054276B80D8444 Read;
  $E2D07271286968AE30054276B80D8444 Write;
  $A004D8A4B22812CCD6F970F063732473 QueryDirectory;
  $50A7D1BFBD4B9BBEBCBBE3D92FEB6A61 NotifyDirectory;
  $8D6960FD873EEA4C5572330FF8084E6B QueryFile;
  $75DE402AB6162907567FF09A6D2E3BC5 SetFile;
  $43049A1C9CD1076EE2F76BA56B9556D6 QueryEa;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetEa;
  $C2F4085A4AA871CB36334780FCF9A841 QueryVolume;
  $C2F4085A4AA871CB36334780FCF9A841 SetVolume;
  $1452ECD7C6E5AB3C058EED8909EEC64B FileSystemControl;
  $1CE1E05F2DF989B033086AFF38730480 LockControl;
  $343716E60DEC8CEA3C236115305CA9A5 DeviceIoControl;
  $79FAFD50642EF9FCAC6F48CCDD5826D7 QuerySecurity;
  $29E784017BF8D630C3CED492840B3F1E SetSecurity;
  $C50D2E4B55AED3A7BA6113010AA7BA16 MountVolume;
  $C50D2E4B55AED3A7BA6113010AA7BA16 VerifyVolume;
  $B2B4984C7002DD41520623255E2F9497 Scsi;
  $80680BF386282656C33036233C1B0598 QueryQuota;
  $44CAF4394294FD1AA9144BF9A47D2B76 SetQuota;
  $713C794AFB27B42EB67C5AFA5A09B408 QueryDeviceRelations;
  $7862E39CDF7A9C3490E55E63DE42BDF9 QueryInterface;
  $DBE7C60DF6D7BA1CABF835B7D1949091 DeviceCapabilities;
  $1FF231A0A489980684278DD9CA90923E FilterResourceRequirements;
  $5E4425892CB91929A7D567B5DA0A3F92 ReadWriteConfig;
  $B367FCCFB95D7087158A479FE9C2D0D7 SetLock;
  $A312683312136E39F73317D0B4735A54 QueryId;
  $F43F5BEE615127CCFC8BF7EB48A433E3 QueryDeviceText;
  $B26472013C4CA8BEEE611D4344FFF8B7 UsageNotification;
  $BD447FB88A3B9F295959D37FB2D4CDCD WaitWake;
  $31A5521DDBBF1D4D6D9EFE2F175367C7 PowerSequence;
  $2A6AE8F544760E4C10A5D5D12C644368 Power;
  $D1B36B59D065C84983C1EF1C57A81CAC StartDevice;
  $27D1A893733DBE62F2FCC36974CB79FA WMI;
  $228F32E73A128818A25FF1959272C294 Others;
};

/* 707 */
struct _IO_STACK_LOCATION
{
  unsigned __int8 MajorFunction;
  unsigned __int8 MinorFunction;
  unsigned __int8 Flags;
  unsigned __int8 Control;
  $F344C448747DE864EE6FA4DB71941836 Parameters;
  _DEVICE_OBJECT *DeviceObject;
  _FILE_OBJECT *FileObject;
  int (__cdecl *CompletionRoutine)(_DEVICE_OBJECT *, _IRP *, void *);
  void *Context;
};

/* 432 */
struct _FILE_OBJECT
{
  __int16 Type;
  __int16 Size;
  _DEVICE_OBJECT *DeviceObject;
  _VPB *Vpb;
  void *FsContext;
  void *FsContext2;
  _SECTION_OBJECT_POINTERS *SectionObjectPointer;
  void *PrivateCacheMap;
  int FinalStatus;
  _FILE_OBJECT *RelatedFileObject;
  unsigned __int8 LockOperation;
  unsigned __int8 DeletePending;
  unsigned __int8 ReadAccess;
  unsigned __int8 WriteAccess;
  unsigned __int8 DeleteAccess;
  unsigned __int8 SharedRead;
  unsigned __int8 SharedWrite;
  unsigned __int8 SharedDelete;
  unsigned int Flags;
  _UNICODE_STRING FileName;
  _LARGE_INTEGER CurrentByteOffset;
  unsigned int Waiters;
  unsigned int Busy;
  void *LastLock;
  _KEVENT Lock;
  _KEVENT Event;
  _IO_COMPLETION_CONTEXT *CompletionContext;
  unsigned int IrpListLock;
  _LIST_ENTRY IrpList;
  void *FileObjectExtension;
};

/* 811 */
struct $828867E6CCA67817354039A6A7E4F3E1
{
  unsigned int IdleTime;
  unsigned int NonIdleTime;
};

/* 812 */
union $92E673001716746BCE041BD372611B8D
{
  $828867E6CCA67817354039A6A7E4F3E1 Disk;
};

/* 813 */
struct _DEVICE_OBJECT_POWER_EXTENSION
{
  volatile unsigned int IdleCount;
  volatile unsigned int BusyCount;
  volatile unsigned int BusyReference;
  unsigned int TotalBusyCount;
  unsigned int ConservationIdleTime;
  unsigned int PerformanceIdleTime;
  _DEVICE_OBJECT *DeviceObject;
  _LIST_ENTRY IdleList;
  _POP_DEVICE_IDLE_TYPE IdleType;
  _DEVICE_POWER_STATE IdleState;
  _DEVICE_POWER_STATE CurrentState;
  _POP_COOLING_EXTENSION *CoolingExtension;
  _LIST_ENTRY Volume;
  $92E673001716746BCE041BD372611B8D Specific;
};

/* 429 */
struct _IO_CLIENT_EXTENSION
{
  _IO_CLIENT_EXTENSION *NextExtension;
  void *ClientIdentificationAddress;
};

/* 450 */
struct _FS_FILTER_CALLBACKS
{
  unsigned int SizeOfFsFilterCallbacks;
  unsigned int Reserved;
  int (__cdecl *PreAcquireForSectionSynchronization)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostAcquireForSectionSynchronization)(_FS_FILTER_CALLBACK_DATA *, int, void *);
  int (__cdecl *PreReleaseForSectionSynchronization)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostReleaseForSectionSynchronization)(_FS_FILTER_CALLBACK_DATA *, int, void *);
  int (__cdecl *PreAcquireForCcFlush)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostAcquireForCcFlush)(_FS_FILTER_CALLBACK_DATA *, int, void *);
  int (__cdecl *PreReleaseForCcFlush)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostReleaseForCcFlush)(_FS_FILTER_CALLBACK_DATA *, int, void *);
  int (__cdecl *PreAcquireForModifiedPageWriter)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostAcquireForModifiedPageWriter)(_FS_FILTER_CALLBACK_DATA *, int, void *);
  int (__cdecl *PreReleaseForModifiedPageWriter)(_FS_FILTER_CALLBACK_DATA *, void **);
  void (__cdecl *PostReleaseForModifiedPageWriter)(_FS_FILTER_CALLBACK_DATA *, int, void *);
};

/* 452 */
struct __declspec(align(8)) _FILE_BASIC_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  unsigned int FileAttributes;
};

/* 453 */
struct __declspec(align(4)) _FILE_STANDARD_INFORMATION
{
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int NumberOfLinks;
  unsigned __int8 DeletePending;
  unsigned __int8 Directory;
};

/* 789 */
struct $B086715FCDD6AD291B34987B050CE732
{
  unsigned __int32 JobNotReallyActive : 1;
  unsigned __int32 AccountingFolded : 1;
  unsigned __int32 NewProcessReported : 1;
  unsigned __int32 ExitProcessReported : 1;
  unsigned __int32 ReportCommitChanges : 1;
  unsigned __int32 LastReportMemory : 1;
  unsigned __int32 ForceWakeCharge : 1;
  unsigned __int32 CrossSessionCreate : 1;
  unsigned __int32 NeedsHandleRundown : 1;
  unsigned __int32 RefTraceEnabled : 1;
  unsigned __int32 DisableDynamicCode : 1;
  unsigned __int32 EmptyJobEvaluated : 1;
  unsigned __int32 DefaultPagePriority : 3;
  unsigned __int32 PrimaryTokenFrozen : 1;
  unsigned __int32 ProcessVerifierTarget : 1;
  unsigned __int32 StackRandomizationDisabled : 1;
  unsigned __int32 AffinityPermanent : 1;
  unsigned __int32 AffinityUpdateEnable : 1;
  unsigned __int32 PropagateNode : 1;
  unsigned __int32 ExplicitAffinity : 1;
  unsigned __int32 ProcessExecutionState : 2;
  unsigned __int32 DisallowStrippedImages : 1;
  unsigned __int32 HighEntropyASLREnabled : 1;
  unsigned __int32 ExtensionPointDisable : 1;
  unsigned __int32 ForceRelocateImages : 1;
  unsigned __int32 ProcessStateChangeRequest : 2;
  unsigned __int32 ProcessStateChangeInProgress : 1;
  unsigned __int32 DisallowWin32kSystemCalls : 1;
};

/* 790 */
union $6DE273E4155B261054574BE76B4017C1
{
  unsigned int Flags2;
  $B086715FCDD6AD291B34987B050CE732 __s1;
};

/* 791 */
struct $3F23548A817FAD3B1B9066DD80952630
{
  unsigned __int32 CreateReported : 1;
  unsigned __int32 NoDebugInherit : 1;
  unsigned __int32 ProcessExiting : 1;
  unsigned __int32 ProcessDelete : 1;
  unsigned __int32 ControlFlowGuardEnabled : 1;
  unsigned __int32 VmDeleted : 1;
  unsigned __int32 OutswapEnabled : 1;
  unsigned __int32 Outswapped : 1;
  unsigned __int32 FailFastOnCommitFail : 1;
  unsigned __int32 Wow64VaSpace4Gb : 1;
  unsigned __int32 AddressSpaceInitialized : 2;
  unsigned __int32 SetTimerResolution : 1;
  unsigned __int32 BreakOnTermination : 1;
  unsigned __int32 DeprioritizeViews : 1;
  unsigned __int32 WriteWatch : 1;
  unsigned __int32 ProcessInSession : 1;
  unsigned __int32 OverrideAddressSpace : 1;
  unsigned __int32 HasAddressSpace : 1;
  unsigned __int32 LaunchPrefetched : 1;
  unsigned __int32 Background : 1;
  unsigned __int32 VmTopDown : 1;
  unsigned __int32 ImageNotifyDone : 1;
  unsigned __int32 PdeUpdateNeeded : 1;
  unsigned __int32 VdmAllowed : 1;
  unsigned __int32 ProcessRundown : 1;
  unsigned __int32 ProcessInserted : 1;
  unsigned __int32 DefaultIoPriority : 3;
  unsigned __int32 ProcessSelfDelete : 1;
  unsigned __int32 SetTimerResolutionLink : 1;
};

/* 792 */
union $6C537325B004DE46DA724FDF01264BCD
{
  unsigned int Flags;
  $3F23548A817FAD3B1B9066DD80952630 __s1;
};

/* 793 */
struct $8AAC48245B72A09C121BEECCD4C99440
{
  unsigned __int32 ExceptionPortState : 3;
};

/* 794 */
union $663DBB4E0CF093A6541D050DFE1BECBF
{
  void *ExceptionPortData;
  unsigned int ExceptionPortValue;
  $8AAC48245B72A09C121BEECCD4C99440 __s2;
};

/* 456 */
struct $D0D3411360A5341D305BC0E590B875C1
{
  unsigned __int32 RefCnt : 3;
};

/* 457 */
union $0B0E16846F4A8C505B22EDF32AA403AD
{
  void *Object;
  $D0D3411360A5341D305BC0E590B875C1 __s1;
  unsigned int Value;
};

/* 458 */
struct _EX_FAST_REF
{
  $0B0E16846F4A8C505B22EDF32AA403AD ___u0;
};

/* 508 */
struct _SE_AUDIT_PROCESS_CREATION_INFO
{
  _OBJECT_NAME_INFORMATION *ImageFileName;
};

/* 775 */
struct _MMSUPPORT_FLAGS
{
  unsigned __int8 WorkingSetType : 3;
  unsigned __int8 ForceCredits : 3;
  unsigned __int8 MaximumWorkingSetHard : 1;
  unsigned __int8 MinimumWorkingSetHard : 1;
  unsigned __int8 SessionMaster : 1;
  unsigned __int8 TrimmerState : 2;
  unsigned __int8 Reserved : 1;
  unsigned __int8 PageStealers : 4;
  unsigned __int8 MemoryPriority;
  unsigned __int8 WsleDeleted : 1;
  unsigned __int8 VmExiting : 1;
  unsigned __int8 ExpansionFailed : 1;
  unsigned __int8 SvmEnabled : 1;
  unsigned __int8 ForceAge : 1;
  unsigned __int8 NewMaximum : 1;
  unsigned __int8 CommitReleaseState : 2;
};

/* 776 */
struct _MMSUPPORT
{
  volatile int WorkingSetLock;
  _KGATE *ExitOutswapGate;
  void *AccessLog;
  _LIST_ENTRY WorkingSetExpansionLinks;
  unsigned int AgeDistribution[7];
  unsigned int MinimumWorkingSetSize;
  unsigned int WorkingSetLeafSize;
  unsigned int WorkingSetLeafPrivateSize;
  unsigned int WorkingSetSize;
  unsigned int WorkingSetPrivateSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int ChargedWslePages;
  unsigned int ActualWslePages;
  unsigned int WorkingSetSizeOverhead;
  unsigned int PeakWorkingSetSize;
  unsigned int HardFaultCount;
  _MMWSL *VmWorkingSetList;
  unsigned __int16 NextPageColor;
  unsigned __int16 LastTrimStamp;
  unsigned int PageFaultCount;
  unsigned int TrimmedPageCount;
  unsigned int ForceTrimPages;
  _MMSUPPORT_FLAGS Flags;
  unsigned int ReleasedCommitDebt;
  void *WsSwapSupport;
  void *CommitReAcquireFailSupport;
};

/* 777 */
struct _ALPC_PROCESS_CONTEXT
{
  _EX_PUSH_LOCK Lock;
  _LIST_ENTRY ViewListHead;
  volatile unsigned int PagedPoolQuotaCache;
};

/* 786 */
struct $86F7F41651E05A1B839282BAFC23F161
{
  unsigned __int8 Type : 3;
  unsigned __int8 Audit : 1;
  unsigned __int8 Signer : 4;
};

/* 787 */
union $34A2DD8B5F7E641F1958909ED689E1DC
{
  unsigned __int8 Level;
  $86F7F41651E05A1B839282BAFC23F161 __s1;
};

/* 788 */
struct _PS_PROTECTION
{
  $34A2DD8B5F7E641F1958909ED689E1DC ___u0;
};

/* 795 */
struct $73D3C15E456D61C410CCA0643363E3EF
{
  unsigned __int32 Minimal : 1;
  unsigned __int32 ReplacingPageRoot : 1;
  unsigned __int32 DisableNonSystemFonts : 1;
  unsigned __int32 AuditNonSystemFontLoading : 1;
  unsigned __int32 Crashed : 1;
  unsigned __int32 JobVadsAreTracked : 1;
  unsigned __int32 VadTrackingDisabled : 1;
  unsigned __int32 AuxiliaryProcess : 1;
  unsigned __int32 SubsystemProcess : 1;
  unsigned __int32 IndirectCpuSets : 1;
  unsigned __int32 InPrivate : 1;
};

/* 796 */
union $9B255C54A18D638B1B84CD143F785368
{
  unsigned int Flags3;
  $73D3C15E456D61C410CCA0643363E3EF __s1;
};

/* 797 */
union $D002D5D4A3BD6FAB7D554DA56C47C2EA
{
  unsigned int AllowedCpuSets;
  unsigned int *AllowedCpuSetsIndirect;
};

/* 798 */
union $79BEF68E27B511BE9431C1707559DC6C
{
  unsigned int DefaultCpuSets;
  unsigned int *DefaultCpuSetsIndirect;
};

/* 488 */
struct _EPROCESS
{
  _KPROCESS Pcb;
  _EX_PUSH_LOCK ProcessLock;
  _EX_RUNDOWN_REF RundownProtect;
  void *UniqueProcessId;
  _LIST_ENTRY ActiveProcessLinks;
  $6DE273E4155B261054574BE76B4017C1 ___u5;
  $6C537325B004DE46DA724FDF01264BCD ___u6;
  _LARGE_INTEGER CreateTime;
  unsigned int ProcessQuotaUsage[2];
  unsigned int ProcessQuotaPeak[2];
  unsigned int PeakVirtualSize;
  unsigned int VirtualSize;
  _LIST_ENTRY SessionProcessLinks;
  $663DBB4E0CF093A6541D050DFE1BECBF ___u13;
  _EX_FAST_REF Token;
  unsigned int WorkingSetPage;
  _EX_PUSH_LOCK AddressCreationLock;
  _EX_PUSH_LOCK PageTableCommitmentLock;
  _ETHREAD *RotateInProgress;
  _ETHREAD *ForkInProgress;
  _EJOB *volatile CommitChargeJob;
  _RTL_AVL_TREE CloneRoot;
  volatile unsigned int NumberOfPrivatePages;
  volatile unsigned int NumberOfLockedPages;
  void *Win32Process;
  _EJOB *volatile Job;
  void *SectionObject;
  void *SectionBaseAddress;
  unsigned int Cookie;
  struct _PAGEFAULT_HISTORY *WorkingSetWatch;
  void *Win32WindowStation;
  void *InheritedFromUniqueProcessId;
  volatile unsigned int OwnerProcessId;
  _PEB *Peb;
  void *Session;
  void *AweInfo;
  struct _EPROCESS_QUOTA_BLOCK *QuotaBlock;
  _HANDLE_TABLE *ObjectTable;
  void *DebugPort;
  void *DeviceMap;
  void *EtwDataSource;
  unsigned __int64 PageDirectoryPte;
  unsigned __int8 ImageFileName[15];
  unsigned __int8 PriorityClass;
  void *SecurityPort;
  _SE_AUDIT_PROCESS_CREATION_INFO SeAuditProcessCreationInfo;
  _LIST_ENTRY JobLinks;
  void *HighestUserAddress;
  _LIST_ENTRY ThreadListHead;
  volatile unsigned int ActiveThreads;
  unsigned int ImagePathHash;
  unsigned int DefaultHardErrorProcessing;
  int LastThreadExitStatus;
  _EX_FAST_REF PrefetchTrace;
  void *LockedPagesList;
  _LARGE_INTEGER ReadOperationCount;
  _LARGE_INTEGER WriteOperationCount;
  _LARGE_INTEGER OtherOperationCount;
  _LARGE_INTEGER ReadTransferCount;
  _LARGE_INTEGER WriteTransferCount;
  _LARGE_INTEGER OtherTransferCount;
  unsigned int CommitChargeLimit;
  volatile unsigned int CommitCharge;
  volatile unsigned int CommitChargePeak;
  _MMSUPPORT Vm;
  _LIST_ENTRY MmProcessLinks;
  unsigned int ModifiedPageCount;
  int ExitStatus;
  _RTL_AVL_TREE VadRoot;
  void *VadHint;
  unsigned int VadCount;
  volatile unsigned int VadPhysicalPages;
  unsigned int VadPhysicalPagesLimit;
  _ALPC_PROCESS_CONTEXT AlpcContext;
  _LIST_ENTRY TimerResolutionLink;
  _PO_DIAG_STACK_RECORD *TimerResolutionStackRecord;
  unsigned int RequestedTimerResolution;
  unsigned int SmallestTimerResolution;
  _LARGE_INTEGER ExitTime;
  _INVERTED_FUNCTION_TABLE *InvertedFunctionTable;
  _EX_PUSH_LOCK InvertedFunctionTableLock;
  unsigned int ActiveThreadsHighWatermark;
  unsigned int LargePrivateVadCount;
  _EX_PUSH_LOCK ThreadListLock;
  void *WnfContext;
  unsigned int Spare0;
  unsigned __int8 SignatureLevel;
  unsigned __int8 SectionSignatureLevel;
  _PS_PROTECTION Protection;
  unsigned __int8 HangCount;
  $9B255C54A18D638B1B84CD143F785368 ___u90;
  int DeviceAsid;
  void *SvmData;
  _EX_PUSH_LOCK SvmProcessLock;
  unsigned int SvmLock;
  _LIST_ENTRY SvmProcessDeviceListHead;
  unsigned __int64 LastFreezeInterruptTime;
  _PROCESS_DISK_COUNTERS *DiskCounters;
  void *PicoContext;
  unsigned int KeepAliveCounter;
  unsigned int NoWakeKeepAliveCounter;
  unsigned int HighPriorityFaultsAllowed;
  _PROCESS_ENERGY_VALUES *EnergyValues;
  void *VmContext;
  struct _ESILO *Silo;
  _LIST_ENTRY SiloEntry;
  unsigned __int64 SequenceNumber;
  unsigned __int64 CreateInterruptTime;
  unsigned __int64 CreateUnbiasedInterruptTime;
  unsigned __int64 TotalUnbiasedFrozenTime;
  unsigned __int64 LastAppStateUpdateTime;
  unsigned __int64 LastAppStateUptime : 61;
  unsigned __int64 LastAppState : 3;
  volatile unsigned int SharedCommitCharge;
  _EX_PUSH_LOCK SharedCommitLock;
  _LIST_ENTRY SharedCommitLinks;
  $D002D5D4A3BD6FAB7D554DA56C47C2EA ___u116;
  $79BEF68E27B511BE9431C1707559DC6C ___u117;
};

/* 799 */
struct __declspec(align(8)) _FILE_NETWORK_OPEN_INFORMATION
{
  _LARGE_INTEGER CreationTime;
  _LARGE_INTEGER LastAccessTime;
  _LARGE_INTEGER LastWriteTime;
  _LARGE_INTEGER ChangeTime;
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER EndOfFile;
  unsigned int FileAttributes;
};

/* 438 */
struct $9959C6898638794B7A02F04E7F980F81
{
  unsigned __int8 ReservedLowFlags;
  unsigned __int8 WaiterPriority;
};

/* 439 */
union $3CE2A7EF52EB54BD1EDDAEDEBBF3583A
{
  unsigned __int16 Flag;
  $9959C6898638794B7A02F04E7F980F81 __s1;
};

/* 437 */
struct _KWAIT_CHAIN
{
  _SINGLE_LIST_ENTRY Head;
};

/* 434 */
struct $658AD709826129357C3064DC5428D5B8
{
  unsigned __int32 IoPriorityBoosted : 1;
  unsigned __int32 OwnerReferenced : 1;
  unsigned __int32 OwnerCount : 30;
};

/* 435 */
union $5F8A8442D33AAD33EA0B5CB806E88079
{
  $658AD709826129357C3064DC5428D5B8 __s0;
  unsigned int TableSize;
};

/* 436 */
struct _OWNER_ENTRY
{
  unsigned int OwnerThread;
  $5F8A8442D33AAD33EA0B5CB806E88079 ___u1;
};

/* 440 */
union $B8D4EB9E6E3D1A926634FE9A5064A2BB
{
  void *Address;
  unsigned int CreatorBackTraceIndex;
};

/* 441 */
struct _ERESOURCE
{
  _LIST_ENTRY SystemResourcesList;
  _OWNER_ENTRY *OwnerTable;
  __int16 ActiveCount;
  $3CE2A7EF52EB54BD1EDDAEDEBBF3583A ___u3;
  _KWAIT_CHAIN SharedWaiters;
  _KEVENT *ExclusiveWaiters;
  _OWNER_ENTRY OwnerEntry;
  unsigned int ActiveEntries;
  unsigned int ContentionCount;
  unsigned int NumberOfSharedWaiters;
  unsigned int NumberOfExclusiveWaiters;
  $B8D4EB9E6E3D1A926634FE9A5064A2BB ___u11;
  unsigned int SpinLock;
};

/* 800 */
struct _COMPRESSED_DATA_INFO
{
  unsigned __int16 CompressionFormatAndEngine;
  unsigned __int8 CompressionUnitShift;
  unsigned __int8 ChunkShift;
  unsigned __int8 ClusterShift;
  unsigned __int8 Reserved;
  unsigned __int16 NumberOfChunks;
  unsigned int CompressedChunkSizes[1];
};

/* 624 */
struct _IO_SECURITY_CONTEXT
{
  _SECURITY_QUALITY_OF_SERVICE *SecurityQos;
  _ACCESS_STATE *AccessState;
  unsigned int DesiredAccess;
  unsigned int FullCreateOptions;
};

/* 626 */
struct __declspec(align(8)) _NAMED_PIPE_CREATE_PARAMETERS
{
  unsigned int NamedPipeType;
  unsigned int ReadMode;
  unsigned int CompletionMode;
  unsigned int MaximumInstances;
  unsigned int InboundQuota;
  unsigned int OutboundQuota;
  _LARGE_INTEGER DefaultTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 628 */
struct __declspec(align(8)) _MAILSLOT_CREATE_PARAMETERS
{
  unsigned int MailslotQuota;
  unsigned int MaximumMessageSize;
  _LARGE_INTEGER ReadTimeout;
  unsigned __int8 TimeoutSpecified;
};

/* 647 */
struct _SID_IDENTIFIER_AUTHORITY
{
  unsigned __int8 Value[6];
};

/* 648 */
struct _SID
{
  unsigned __int8 Revision;
  unsigned __int8 SubAuthorityCount;
  _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  unsigned int SubAuthority[1];
};

/* 649 */
struct _FILE_GET_QUOTA_INFORMATION
{
  unsigned int NextEntryOffset;
  unsigned int SidLength;
  _SID Sid;
};

/* 652 */
struct _INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__cdecl *InterfaceReference)(void *);
  void (__cdecl *InterfaceDereference)(void *);
};

/* 654 */
struct _DEVICE_CAPABILITIES
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  unsigned __int32 DeviceD1 : 1;
  unsigned __int32 DeviceD2 : 1;
  unsigned __int32 LockSupported : 1;
  unsigned __int32 EjectSupported : 1;
  unsigned __int32 Removable : 1;
  unsigned __int32 DockDevice : 1;
  unsigned __int32 UniqueID : 1;
  unsigned __int32 SilentInstall : 1;
  unsigned __int32 RawDeviceOK : 1;
  unsigned __int32 SurpriseRemovalOK : 1;
  unsigned __int32 WakeFromD0 : 1;
  unsigned __int32 WakeFromD1 : 1;
  unsigned __int32 WakeFromD2 : 1;
  unsigned __int32 WakeFromD3 : 1;
  unsigned __int32 HardwareDisabled : 1;
  unsigned __int32 NonDynamic : 1;
  unsigned __int32 WarmEjectSupported : 1;
  unsigned __int32 NoDisplayInUI : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 WakeFromInterrupt : 1;
  unsigned __int32 Reserved : 12;
  unsigned int Address;
  unsigned int UINumber;
  _DEVICE_POWER_STATE DeviceState[7];
  _SYSTEM_POWER_STATE SystemWake;
  _DEVICE_POWER_STATE DeviceWake;
  unsigned int D1Latency;
  unsigned int D2Latency;
  unsigned int D3Latency;
};

/* 656 */
struct $B58EAE2EBE5AE514C32CC65A516508C9
{
  unsigned int Length;
  unsigned int Alignment;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 657 */
struct $8609A57773395F384B432EBE687779C2
{
  unsigned int MinimumVector;
  unsigned int MaximumVector;
  unsigned __int16 AffinityPolicy;
  unsigned __int16 Group;
  _IRQ_PRIORITY PriorityPolicy;
  unsigned int TargetedProcessors;
};

/* 658 */
struct $290D34FD7868E94AFEC0383C08CB9B28
{
  unsigned int MinimumChannel;
  unsigned int MaximumChannel;
};

/* 659 */
struct $66D8BAE383F9288207BB026A64AFF51A
{
  unsigned int RequestLine;
  unsigned int Reserved;
  unsigned int Channel;
  unsigned int TransferWidth;
};

/* 660 */
struct $B14DB811EDFC1214B110A98B000FF49B
{
  unsigned int Data[3];
};

/* 661 */
struct $CF7D779FCF8501AF42168A39ACA3AE76
{
  unsigned int Length;
  unsigned int MinBusNumber;
  unsigned int MaxBusNumber;
  unsigned int Reserved;
};

/* 662 */
struct $5D61DD2957AFDEE7ED67BD2EDF2BEA99
{
  unsigned int Priority;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 663 */
struct $93287162FE96F4A8609AA0112A8EE0E6
{
  unsigned int Length40;
  unsigned int Alignment40;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 664 */
struct $C2241B51D8ABAEC816FBC02F8266D834
{
  unsigned int Length48;
  unsigned int Alignment48;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 665 */
struct $68213B378A73BE26FBD3889B5C7E3884
{
  unsigned int Length64;
  unsigned int Alignment64;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
};

/* 666 */
struct $EDAC022CDA01C704ED739E663C6F28A2
{
  unsigned __int8 Class;
  unsigned __int8 Type;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned int IdLowPart;
  unsigned int IdHighPart;
};

/* 667 */
union $F0C8FB168D2ACFEAEF0E1C24B90C277B
{
  $B58EAE2EBE5AE514C32CC65A516508C9 Port;
  $B58EAE2EBE5AE514C32CC65A516508C9 Memory;
  $8609A57773395F384B432EBE687779C2 Interrupt;
  $290D34FD7868E94AFEC0383C08CB9B28 Dma;
  $66D8BAE383F9288207BB026A64AFF51A DmaV3;
  $B58EAE2EBE5AE514C32CC65A516508C9 Generic;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $CF7D779FCF8501AF42168A39ACA3AE76 BusNumber;
  $5D61DD2957AFDEE7ED67BD2EDF2BEA99 ConfigData;
  $93287162FE96F4A8609AA0112A8EE0E6 Memory40;
  $C2241B51D8ABAEC816FBC02F8266D834 Memory48;
  $68213B378A73BE26FBD3889B5C7E3884 Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 668 */
struct _IO_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Option;
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int8 Spare1;
  unsigned __int16 Flags;
  unsigned __int16 Spare2;
  $F0C8FB168D2ACFEAEF0E1C24B90C277B u;
};

/* 669 */
struct _IO_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _IO_RESOURCE_DESCRIPTOR Descriptors[1];
};

/* 670 */
struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  unsigned int ListSize;
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Reserved[3];
  unsigned int AlternativeLists;
  _IO_RESOURCE_LIST List[1];
};

/* 678 */
struct _POWER_SEQUENCE
{
  unsigned int SequenceD1;
  unsigned int SequenceD2;
  unsigned int SequenceD3;
};

/* 686 */
struct __unaligned __declspec(align(4)) $C02D3E9182C383766380613D7519E5A0
{
  _LARGE_INTEGER Start;
  unsigned int Length;
};

/* 687 */
struct $5B88004AFC740FE3BC780EB9EFA8C140
{
  unsigned __int16 Level;
  unsigned __int16 Group;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 688 */
struct $C597A9AD397FE1359873D0EC58A3C296
{
  unsigned __int16 Group;
  unsigned __int16 MessageCount;
  unsigned int Vector;
  unsigned int Affinity;
};

/* 689 */
union $3E86EF320EB7AAC7AAB095BEBDD6AE98
{
  $C597A9AD397FE1359873D0EC58A3C296 Raw;
  $5B88004AFC740FE3BC780EB9EFA8C140 Translated;
};

/* 690 */
struct $6E177BF56D3C5CB67206076A79CA6201
{
  $3E86EF320EB7AAC7AAB095BEBDD6AE98 ___u0;
};

/* 691 */
struct $72748C417E05990EBECC6BB8D043D8B0
{
  unsigned int Channel;
  unsigned int Port;
  unsigned int Reserved1;
};

/* 692 */
struct $CC0360DD0852F9AAB36A2B2BBC2DF141
{
  unsigned int Channel;
  unsigned int RequestLine;
  unsigned __int8 TransferWidth;
  unsigned __int8 Reserved1;
  unsigned __int8 Reserved2;
  unsigned __int8 Reserved3;
};

/* 693 */
struct $6C467299E1DD150E8FDAFB428553E9E9
{
  unsigned int Start;
  unsigned int Length;
  unsigned int Reserved;
};

/* 694 */
struct $D735038633D506DCA1748B01FF7747C2
{
  unsigned int DataSize;
  unsigned int Reserved1;
  unsigned int Reserved2;
};

/* 695 */
struct __unaligned __declspec(align(4)) $4254438E59FB695F0F24A20E84BD62C1
{
  _LARGE_INTEGER Start;
  unsigned int Length40;
};

/* 696 */
struct __unaligned __declspec(align(4)) $71AE921B872F4ED501E3BE72FD58E17E
{
  _LARGE_INTEGER Start;
  unsigned int Length48;
};

/* 697 */
struct __unaligned __declspec(align(4)) $6763AA6C0FEA761340A235A288F33FEC
{
  _LARGE_INTEGER Start;
  unsigned int Length64;
};

/* 698 */
union $4D06BE5690F4D8791264964041FA8F02
{
  $C02D3E9182C383766380613D7519E5A0 Generic;
  $C02D3E9182C383766380613D7519E5A0 Port;
  $5B88004AFC740FE3BC780EB9EFA8C140 Interrupt;
  $6E177BF56D3C5CB67206076A79CA6201 MessageInterrupt;
  $C02D3E9182C383766380613D7519E5A0 Memory;
  $72748C417E05990EBECC6BB8D043D8B0 Dma;
  $CC0360DD0852F9AAB36A2B2BBC2DF141 DmaV3;
  $B14DB811EDFC1214B110A98B000FF49B DevicePrivate;
  $6C467299E1DD150E8FDAFB428553E9E9 BusNumber;
  $D735038633D506DCA1748B01FF7747C2 DeviceSpecificData;
  $4254438E59FB695F0F24A20E84BD62C1 Memory40;
  $71AE921B872F4ED501E3BE72FD58E17E Memory48;
  $6763AA6C0FEA761340A235A288F33FEC Memory64;
  $EDAC022CDA01C704ED739E663C6F28A2 Connection;
};

/* 699 */
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  unsigned __int8 Type;
  unsigned __int8 ShareDisposition;
  unsigned __int16 Flags;
  $4D06BE5690F4D8791264964041FA8F02 u;
};

/* 700 */
struct _CM_PARTIAL_RESOURCE_LIST
{
  unsigned __int16 Version;
  unsigned __int16 Revision;
  unsigned int Count;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
};

/* 701 */
struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
};

/* 702 */
struct _CM_RESOURCE_LIST
{
  unsigned int Count;
  _CM_FULL_RESOURCE_DESCRIPTOR List[1];
};

/* 431 */
struct _SECTION_OBJECT_POINTERS
{
  void *DataSectionObject;
  void *SharedCacheMap;
  void *ImageSectionObject;
};

/* 433 */
struct _IO_COMPLETION_CONTEXT
{
  void *Port;
  void *Key;
};

/* 808 */
struct _POP_RW_LOCK
{
  _EX_PUSH_LOCK Lock;
  _KTHREAD *Thread;
};

/* 809 */
struct _THERMAL_COOLING_INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__cdecl *InterfaceReference)(void *);
  void (__cdecl *InterfaceDereference)(void *);
  unsigned int Flags;
  void (__cdecl *ActiveCooling)(void *, unsigned __int8);
  void (__cdecl *PassiveCooling)(void *, unsigned int);
};

/* 810 */
struct _POP_COOLING_EXTENSION
{
  _LIST_ENTRY Link;
  _LIST_ENTRY RequestListHead;
  _POP_RW_LOCK Lock;
  _DEVICE_OBJECT *DeviceObject;
  void *NotificationEntry;
  unsigned __int8 Enabled;
  unsigned __int8 ActiveEngaged;
  unsigned __int8 ThrottleLimit;
  unsigned __int8 UpdatingToCurrent;
  _KEVENT *RemovalFlushEvent;
  _KEVENT *PnpFlushEvent;
  _THERMAL_COOLING_INTERFACE Interface;
};

/* 442 */
struct $199FD9E1B0C08A1FF6E0151AC3FA03C6
{
  _LARGE_INTEGER *EndingOffset;
  _ERESOURCE **ResourceToRelease;
};

/* 443 */
struct $03AB7E9784A62724B977272B580923A2
{
  _ERESOURCE *ResourceToRelease;
};

/* 445 */
struct $1A63FE557B3BD577383628F0BC8D89DE
{
  _FS_FILTER_SECTION_SYNC_TYPE SyncType;
  unsigned int PageProtection;
  _FS_FILTER_SECTION_SYNC_OUTPUT *OutputInformation;
};

/* 446 */
struct __declspec(align(4)) $F327FBEE06260FF18E35F8A0CD9608B5
{
  _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE NotificationType;
  unsigned __int8 SafeToRecurse;
};

/* 447 */
struct $6C06832CE408E29966CF29075B64912A
{
  void *Argument1;
  void *Argument2;
  void *Argument3;
  void *Argument4;
  void *Argument5;
};

/* 448 */
union _FS_FILTER_PARAMETERS
{
  $199FD9E1B0C08A1FF6E0151AC3FA03C6 AcquireForModifiedPageWriter;
  $03AB7E9784A62724B977272B580923A2 ReleaseForModifiedPageWriter;
  $1A63FE557B3BD577383628F0BC8D89DE AcquireForSectionSynchronization;
  $F327FBEE06260FF18E35F8A0CD9608B5 NotifyStreamFileObject;
  $6C06832CE408E29966CF29075B64912A Others;
};

/* 449 */
struct _FS_FILTER_CALLBACK_DATA
{
  unsigned int SizeOfFsFilterCallbackData;
  unsigned __int8 Operation;
  unsigned __int8 Reserved;
  _DEVICE_OBJECT *DeviceObject;
  _FILE_OBJECT *FileObject;
  _FS_FILTER_PARAMETERS Parameters;
};

/* 459 */
struct _PROCESS_DISK_COUNTERS
{
  unsigned __int64 BytesRead;
  unsigned __int64 BytesWritten;
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 FlushOperationCount;
};

/* 461 */
struct _WNF_STATE_NAME
{
  unsigned int Data[2];
};

/* 462 */
struct _PS_WAKE_INFORMATION
{
  unsigned __int64 NotificationChannel;
  unsigned __int64 WakeCounters[5];
  unsigned __int64 NoWakeCounter;
};

/* 470 */
union $38D8C1CB1BC5B230570DB835EB0B16DE
{
  _WNF_STATE_NAME WakeChannel;
  _PS_WAKE_INFORMATION WakeInfo;
};

/* 463 */
struct _JOBOBJECT_WAKE_FILTER
{
  unsigned int HighEdgeFilter;
  unsigned int LowEdgeFilter;
};

/* 471 */
union $13CCA75596B491425E9B7ACA103E568A
{
  _EJOB **Ancestors;
  void *SessionObject;
};

/* 465 */
struct _EPROCESS_VALUES
{
  unsigned __int64 KernelTime;
  unsigned __int64 UserTime;
  unsigned __int64 CycleTime;
  unsigned __int64 ContextSwitches;
  __int64 ReadOperationCount;
  __int64 WriteOperationCount;
  __int64 OtherOperationCount;
  __int64 ReadTransferCount;
  __int64 WriteTransferCount;
  __int64 OtherTransferCount;
};

/* 472 */
struct $20628D845D84C00484714BC84B6D2CE2
{
  unsigned __int32 CloseDone : 1;
  unsigned __int32 MultiGroup : 1;
  unsigned __int32 OutstandingNotification : 1;
  unsigned __int32 NotificationInProgress : 1;
  unsigned __int32 UILimits : 1;
  unsigned __int32 CpuRateControlActive : 1;
  unsigned __int32 OwnCpuRateControl : 1;
  unsigned __int32 Terminating : 1;
  unsigned __int32 WorkingSetLock : 1;
  unsigned __int32 JobFrozen : 1;
  unsigned __int32 Background : 1;
  unsigned __int32 WakeNotificationAllocated : 1;
  unsigned __int32 WakeNotificationEnabled : 1;
  unsigned __int32 WakeNotificationPending : 1;
  unsigned __int32 LimitNotificationRequired : 1;
  unsigned __int32 ZeroCountNotificationRequired : 1;
  unsigned __int32 CycleTimeNotificationRequired : 1;
  unsigned __int32 CycleTimeNotificationPending : 1;
  unsigned __int32 TimersVirtualized : 1;
  unsigned __int32 JobSwapped : 1;
  unsigned __int32 ViolationDetected : 1;
  unsigned __int32 EmptyJobNotified : 1;
  unsigned __int32 NoSystemCharge : 1;
  unsigned __int32 DropNoWakeCharges : 1;
  unsigned __int32 NoWakeChargePolicyDecided : 1;
  unsigned __int32 NetRateControlActive : 1;
  unsigned __int32 OwnNetRateControl : 1;
  unsigned __int32 IoRateControlActive : 1;
  unsigned __int32 OwnIoRateControl : 1;
  unsigned __int32 IsContainerRoot : 1;
  unsigned __int32 SpareJobFlags : 2;
};

/* 473 */
union $625329642EBA633CDE5A13EE55362B87
{
  unsigned int JobFlags;
  $20628D845D84C00484714BC84B6D2CE2 __s1;
};

/* 460 */
struct _EJOB
{
  _KEVENT Event;
  _LIST_ENTRY JobLinks;
  _LIST_ENTRY ProcessListHead;
  _ERESOURCE JobLock;
  _LARGE_INTEGER TotalUserTime;
  _LARGE_INTEGER TotalKernelTime;
  _LARGE_INTEGER TotalCycleTime;
  _LARGE_INTEGER ThisPeriodTotalUserTime;
  _LARGE_INTEGER ThisPeriodTotalKernelTime;
  unsigned __int64 TotalContextSwitches;
  unsigned int TotalPageFaultCount;
  unsigned int TotalProcesses;
  unsigned int ActiveProcesses;
  unsigned int TotalTerminatedProcesses;
  _LARGE_INTEGER PerProcessUserTimeLimit;
  _LARGE_INTEGER PerJobUserTimeLimit;
  unsigned int MinimumWorkingSetSize;
  unsigned int MaximumWorkingSetSize;
  unsigned int LimitFlags;
  unsigned int ActiveProcessLimit;
  _KAFFINITY_EX Affinity;
  struct _JOB_ACCESS_STATE *AccessState;
  void *AccessStateQuotaReference;
  unsigned int UIRestrictionsClass;
  unsigned int EndOfJobTimeAction;
  void *CompletionPort;
  void *CompletionKey;
  unsigned __int64 CompletionCount;
  unsigned int SessionId;
  unsigned int SchedulingClass;
  unsigned __int64 ReadOperationCount;
  unsigned __int64 WriteOperationCount;
  unsigned __int64 OtherOperationCount;
  unsigned __int64 ReadTransferCount;
  unsigned __int64 WriteTransferCount;
  unsigned __int64 OtherTransferCount;
  _PROCESS_DISK_COUNTERS DiskIoInfo;
  unsigned int ProcessMemoryLimit;
  unsigned int JobMemoryLimit;
  unsigned int JobTotalMemoryLimit;
  unsigned int PeakProcessMemoryUsed;
  unsigned int PeakJobMemoryUsed;
  _KAFFINITY_EX EffectiveAffinity;
  _LARGE_INTEGER EffectivePerProcessUserTimeLimit;
  unsigned int EffectiveMinimumWorkingSetSize;
  unsigned int EffectiveMaximumWorkingSetSize;
  unsigned int EffectiveProcessMemoryLimit;
  _EJOB *EffectiveProcessMemoryLimitJob;
  _EJOB *EffectivePerProcessUserTimeLimitJob;
  _EJOB *EffectiveDiskIoRateLimitJob;
  _EJOB *EffectiveNetIoRateLimitJob;
  _EJOB *EffectiveHeapAttributionJob;
  unsigned int EffectiveLimitFlags;
  unsigned int EffectiveSchedulingClass;
  unsigned int EffectiveFreezeCount;
  unsigned int EffectiveBackgroundCount;
  unsigned int EffectiveSwapCount;
  unsigned int EffectiveNotificationLimitCount;
  unsigned __int8 EffectivePriorityClass;
  unsigned __int8 PriorityClass;
  unsigned __int8 NestingDepth;
  unsigned __int8 Reserved1[1];
  unsigned int CompletionFilter;
  $38D8C1CB1BC5B230570DB835EB0B16DE ___u63;
  _JOBOBJECT_WAKE_FILTER WakeFilter;
  unsigned int LowEdgeLatchFilter;
  unsigned int OwnedHighEdgeFilters;
  _EJOB *NotificationLink;
  unsigned __int64 CurrentJobMemoryUsed;
  struct _JOB_NOTIFICATION_INFORMATION *NotificationInfo;
  void *NotificationInfoQuotaReference;
  _IO_MINI_COMPLETION_PACKET_USER *NotificationPacket;
  struct _JOB_CPU_RATE_CONTROL *CpuRateControl;
  void *EffectiveSchedulingGroup;
  unsigned __int64 ReadyTime;
  _EX_PUSH_LOCK MemoryLimitsLock;
  _LIST_ENTRY SiblingJobLinks;
  _LIST_ENTRY ChildJobListHead;
  _EJOB *ParentJob;
  _EJOB *volatile RootJob;
  _LIST_ENTRY IteratorListHead;
  unsigned int AncestorCount;
  $13CCA75596B491425E9B7ACA103E568A ___u82;
  _EPROCESS_VALUES Accounting;
  unsigned int ShadowActiveProcessCount;
  unsigned int ActiveAuxiliaryProcessCount;
  unsigned int SequenceNumber;
  unsigned int TimerListLock;
  _LIST_ENTRY TimerListHead;
  _GUID ContainerId;
  struct _ESILO *Container;
  _PS_PROPERTY_SET PropertySet;
  struct _JOB_NET_RATE_CONTROL *NetRateControl;
  struct _JOB_IO_RATE_CONTROL *IoRateControl;
  $625329642EBA633CDE5A13EE55362B87 ___u94;
  unsigned int EffectiveHighEdgeFilters;
  _PROCESS_ENERGY_VALUES *EnergyValues;
  volatile unsigned int SharedCommitCharge;
};

/* 480 */
struct $F7D50667465384BC101D530DC54808A0
{
  unsigned __int8 ImageUsesLargePages : 1;
  unsigned __int8 IsProtectedProcess : 1;
  unsigned __int8 IsImageDynamicallyRelocated : 1;
  unsigned __int8 SkipPatchingUser32Forwarders : 1;
  unsigned __int8 IsPackagedProcess : 1;
  unsigned __int8 IsAppContainer : 1;
  unsigned __int8 IsProtectedProcessLight : 1;
  unsigned __int8 SpareBits : 1;
};

/* 481 */
union $D8D05BCDB8A1CEEDA7EA82F07A406FF2
{
  unsigned __int8 BitField;
  $F7D50667465384BC101D530DC54808A0 __s1;
};

/* 482 */
struct $B5C0D3AF06C7C0E0C35F2AF79ED7DD00
{
  unsigned __int32 ProcessInJob : 1;
  unsigned __int32 ProcessInitializing : 1;
  unsigned __int32 ProcessUsingVEH : 1;
  unsigned __int32 ProcessUsingVCH : 1;
  unsigned __int32 ProcessUsingFTH : 1;
  unsigned __int32 ReservedBits0 : 27;
};

/* 483 */
union $42919138271C7D1A85D95EB84329952A
{
  unsigned int CrossProcessFlags;
  $B5C0D3AF06C7C0E0C35F2AF79ED7DD00 __s1;
};

/* 484 */
union $6F1CA9A36B21C857AE5467E073440320
{
  void *KernelCallbackTable;
  void *UserSharedInfoPtr;
};

/* 485 */
struct $B9EB1F4F9D70F693049DD1A0DA8FBDA7
{
  unsigned __int32 HeapTracingEnabled : 1;
  unsigned __int32 CritSecTracingEnabled : 1;
  unsigned __int32 LibLoaderTracingEnabled : 1;
  unsigned __int32 SpareTracingBits : 29;
};

/* 486 */
union $8425CC8A139BB24D416BCE1FAE9D36D2
{
  unsigned int TracingFlags;
  $B9EB1F4F9D70F693049DD1A0DA8FBDA7 __s1;
};

/* 487 */
struct _PEB
{
  unsigned __int8 InheritedAddressSpace;
  unsigned __int8 ReadImageFileExecOptions;
  unsigned __int8 BeingDebugged;
  $D8D05BCDB8A1CEEDA7EA82F07A406FF2 ___u3;
  void *Mutant;
  void *ImageBaseAddress;
  _PEB_LDR_DATA *Ldr;
  _RTL_USER_PROCESS_PARAMETERS *ProcessParameters;
  void *SubSystemData;
  void *ProcessHeap;
  _RTL_CRITICAL_SECTION *FastPebLock;
  void *AtlThunkSListPtr;
  void *IFEOKey;
  $42919138271C7D1A85D95EB84329952A ___u13;
  $6F1CA9A36B21C857AE5467E073440320 ___u14;
  unsigned int SystemReserved[1];
  unsigned int AtlThunkSListPtr32;
  void *ApiSetMap;
  unsigned int TlsExpansionCounter;
  void *TlsBitmap;
  unsigned int TlsBitmapBits[2];
  void *ReadOnlySharedMemoryBase;
  void *SparePvoid0;
  void **ReadOnlyStaticServerData;
  void *AnsiCodePageData;
  void *OemCodePageData;
  void *UnicodeCaseTableData;
  unsigned int NumberOfProcessors;
  unsigned int NtGlobalFlag;
  _LARGE_INTEGER CriticalSectionTimeout;
  unsigned int HeapSegmentReserve;
  unsigned int HeapSegmentCommit;
  unsigned int HeapDeCommitTotalFreeThreshold;
  unsigned int HeapDeCommitFreeBlockThreshold;
  unsigned int NumberOfHeaps;
  unsigned int MaximumNumberOfHeaps;
  void **ProcessHeaps;
  void *GdiSharedHandleTable;
  void *ProcessStarterHelper;
  unsigned int GdiDCAttributeList;
  _RTL_CRITICAL_SECTION *LoaderLock;
  unsigned int OSMajorVersion;
  unsigned int OSMinorVersion;
  unsigned __int16 OSBuildNumber;
  unsigned __int16 OSCSDVersion;
  unsigned int OSPlatformId;
  unsigned int ImageSubsystem;
  unsigned int ImageSubsystemMajorVersion;
  unsigned int ImageSubsystemMinorVersion;
  unsigned int ActiveProcessAffinityMask;
  unsigned int GdiHandleBuffer[34];
  void (__cdecl *PostProcessInitRoutine)();
  void *TlsExpansionBitmap;
  unsigned int TlsExpansionBitmapBits[32];
  unsigned int SessionId;
  _ULARGE_INTEGER AppCompatFlags;
  _ULARGE_INTEGER AppCompatFlagsUser;
  void *pShimData;
  void *AppCompatInfo;
  _UNICODE_STRING CSDVersion;
  const struct _ACTIVATION_CONTEXT_DATA *ActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *ProcessAssemblyStorageMap;
  const struct _ACTIVATION_CONTEXT_DATA *SystemDefaultActivationContextData;
  struct _ASSEMBLY_STORAGE_MAP *SystemAssemblyStorageMap;
  unsigned int MinimumStackCommit;
  struct _FLS_CALLBACK_INFO *FlsCallback;
  _LIST_ENTRY FlsListHead;
  void *FlsBitmap;
  unsigned int FlsBitmapBits[4];
  unsigned int FlsHighIndex;
  void *WerRegistrationData;
  void *WerShipAssertPtr;
  void *pUnused;
  void *pImageHeaderHash;
  $8425CC8A139BB24D416BCE1FAE9D36D2 ___u74;
  unsigned __int64 CsrServerReadOnlySharedMemoryBase;
};

/* 502 */
struct $674F156C788F89EBCBFDC1492D6BA90B
{
  unsigned __int8 StrictFIFO : 1;
  unsigned __int8 EnableHandleExceptions : 1;
  unsigned __int8 Rundown : 1;
  unsigned __int8 Duplicated : 1;
  unsigned __int8 RaiseUMExceptionOnInvalidHandleClose : 1;
};

/* 503 */
union $C070245B10F93DA43BFA7FFEFD5BB55A
{
  unsigned int Flags;
  $674F156C788F89EBCBFDC1492D6BA90B __s1;
};

/* 499 */
struct _HANDLE_TABLE_FREE_LIST
{
  _EX_PUSH_LOCK FreeListLock;
  _HANDLE_TABLE_ENTRY *FirstFreeHandleEntry;
  _HANDLE_TABLE_ENTRY *LastFreeHandleEntry;
  int HandleCount;
  unsigned int HighWaterMark;
  unsigned int Reserved[8];
};

/* 504 */
struct $A142D5D373B1B4240660D8735D9FEA27
{
  unsigned __int8 ActualEntry[20];
  _HANDLE_TRACE_DEBUG_INFO *DebugInfo;
};

/* 505 */
union $E8E119386EC598D8963B2D9167CFF085
{
  _HANDLE_TABLE_FREE_LIST FreeLists[1];
  $A142D5D373B1B4240660D8735D9FEA27 __s1;
};

/* 506 */
struct _HANDLE_TABLE
{
  unsigned int NextHandleNeedingPool;
  int ExtraInfoPages;
  volatile unsigned int TableCode;
  _EPROCESS *QuotaProcess;
  _LIST_ENTRY HandleTableList;
  unsigned int UniqueProcessId;
  $C070245B10F93DA43BFA7FFEFD5BB55A ___u6;
  _EX_PUSH_LOCK HandleContentionEvent;
  _EX_PUSH_LOCK HandleTableLock;
  $E8E119386EC598D8963B2D9167CFF085 ___u9;
};

/* 507 */
struct _OBJECT_NAME_INFORMATION
{
  _UNICODE_STRING Name;
};

/* 511 */
struct _MI_ACTIVE_WSLE_LISTHEAD
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 772 */
struct _MI_CFG_BITMAP_INFO
{
  void *BaseAddress;
  unsigned int RegionSize;
  _MMVAD *BitmapVad;
};

/* 525 */
struct _RTL_BITMAP
{
  unsigned int SizeOfBitMap;
  unsigned int *Buffer;
};

/* 773 */
struct _MI_USER_VA_INFO
{
  unsigned int NumberOfCommittedPageTables;
  unsigned int VadBitMapHint;
  unsigned int LastAllocationSizeHint;
  unsigned int LastAllocationSize;
  unsigned int LowestBottomUpVadBit;
  unsigned int VadBitMapSize;
  unsigned int VadBitMapCommitment;
  unsigned int MaximumLastVadBit;
  int VadsBeingDeleted;
  unsigned int PhysicalMappingCount;
  _KEVENT *LastVadDeletionEvent;
  unsigned int *VadBitBuffer;
  void *LowestBottomUpAllocationAddress;
  void *HighestTopDownAllocationAddress;
  void *FreeTebHint;
  unsigned __int8 NumaAware;
  unsigned __int64 CloneNestingLevel;
  unsigned int PrivateFixupVadCount;
  _MI_CFG_BITMAP_INFO CfgBitMap[1];
  unsigned int CommittedPageTableBufferForTopLevel[24];
  _RTL_BITMAP CommittedPageTableBitmaps[1];
  unsigned __int16 UsedPageTableEntries[768];
};

/* 774 */
struct _MMWSL
{
  unsigned int FirstFree;
  unsigned int FirstDynamic;
  unsigned int LastEntry;
  unsigned int NextSlot;
  unsigned int LastInitializedWsle;
  unsigned int NextAgingSlot;
  unsigned int NextAccessClearingSlot;
  unsigned int LastAccessClearingRemainder;
  unsigned int LastAgingRemainder;
  unsigned int WsleSize;
  unsigned int NonDirectCount;
  void *LowestPagableAddress;
  _MMWSLE_NONDIRECT_HASH *NonDirectHash;
  _MMWSLE_HASH *HashTableStart;
  _MMWSLE_HASH *HighestPermittedHashAddress;
  unsigned int ActiveWsleCounts[16];
  _MI_ACTIVE_WSLE_LISTHEAD ActiveWsles[16];
  _MMWSLE *Wsle;
  _MI_USER_VA_INFO UserVaInfo;
};

/* 778 */
struct _PO_DIAG_STACK_RECORD
{
  unsigned int StackDepth;
  void *Stack[1];
};

/* 783 */
union $B5F6CB5C40AE644C9B4DB0AE4EF65A40
{
  _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY *FunctionTable;
  _DYNAMIC_FUNCTION_TABLE *DynamicTable;
};

/* 784 */
struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  $B5F6CB5C40AE644C9B4DB0AE4EF65A40 ___u0;
  void *ImageBase;
  unsigned int SizeOfImage;
  unsigned int SizeOfTable;
};

/* 785 */
struct _INVERTED_FUNCTION_TABLE
{
  unsigned int CurrentSize;
  unsigned int MaximumSize;
  volatile unsigned int Epoch;
  unsigned __int8 Overflow;
  _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[256];
};

/* 467 */
struct $93E607E000D7830F1B5DB7FDA6455701
{
  unsigned __int32 Foreground : 1;
};

/* 468 */
union $649C939803871105585E63B540DCF7EE
{
  $93E607E000D7830F1B5DB7FDA6455701 __s0;
  unsigned int WindowInformation;
};

/* 469 */
struct _PROCESS_ENERGY_VALUES
{
  unsigned __int64 Cycles[4][2];
  unsigned __int64 DiskEnergy;
  unsigned __int64 NetworkTailEnergy;
  unsigned __int64 MBBTailEnergy;
  unsigned __int64 NetworkTxRxBytes;
  unsigned __int64 MBBTxRxBytes;
  $649C939803871105585E63B540DCF7EE ___u6;
  unsigned int PixelArea;
  __int64 PixelReportTimestamp;
  unsigned __int64 PixelTime;
  __int64 ForegroundReportTimestamp;
  unsigned __int64 ForegroundTime;
};

/* 617 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
};

/* 618 */
struct _SECURITY_SUBJECT_CONTEXT
{
  void *ClientToken;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  void *PrimaryToken;
  void *ProcessAuditId;
};

/* 619 */
struct _LUID_AND_ATTRIBUTES
{
  _LUID Luid;
  unsigned int Attributes;
};

/* 620 */
struct _INITIAL_PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[3];
};

/* 621 */
struct _PRIVILEGE_SET
{
  unsigned int PrivilegeCount;
  unsigned int Control;
  _LUID_AND_ATTRIBUTES Privilege[1];
};

/* 622 */
union $EA5D6A2EE95930122CE647170ECAFD2E
{
  _INITIAL_PRIVILEGE_SET InitialPrivilegeSet;
  _PRIVILEGE_SET PrivilegeSet;
};

/* 623 */
struct _ACCESS_STATE
{
  _LUID OperationID;
  unsigned __int8 SecurityEvaluated;
  unsigned __int8 GenerateAudit;
  unsigned __int8 GenerateOnClose;
  unsigned __int8 PrivilegesAllocated;
  unsigned int Flags;
  unsigned int RemainingDesiredAccess;
  unsigned int PreviouslyGrantedAccess;
  unsigned int OriginalDesiredAccess;
  _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext;
  void *SecurityDescriptor;
  void *AuxData;
  $EA5D6A2EE95930122CE647170ECAFD2E Privileges;
  unsigned __int8 AuditPrivileges;
  _UNICODE_STRING ObjectName;
  _UNICODE_STRING ObjectTypeName;
};

/* 444 */
struct _FS_FILTER_SECTION_SYNC_OUTPUT
{
  unsigned int StructureSize;
  unsigned int SizeReturned;
  unsigned int Flags;
  unsigned int DesiredReadAlignment;
};

/* 464 */
struct __declspec(align(4)) _IO_MINI_COMPLETION_PACKET_USER
{
  _LIST_ENTRY ListEntry;
  unsigned int PacketType;
  void *KeyContext;
  void *ApcContext;
  int IoStatus;
  unsigned int IoStatusInformation;
  void (__cdecl *MiniPacketCallback)(_IO_MINI_COMPLETION_PACKET_USER *, void *);
  void *Context;
  unsigned __int8 Allocated;
};

/* 474 */
struct _PEB_LDR_DATA
{
  unsigned int Length;
  unsigned __int8 Initialized;
  void *SsHandle;
  _LIST_ENTRY InLoadOrderModuleList;
  _LIST_ENTRY InMemoryOrderModuleList;
  _LIST_ENTRY InInitializationOrderModuleList;
  void *EntryInProgress;
  unsigned __int8 ShutdownInProgress;
  void *ShutdownThreadId;
};

/* 475 */
struct _CURDIR
{
  _UNICODE_STRING DosPath;
  void *Handle;
};

/* 476 */
struct _RTL_DRIVE_LETTER_CURDIR
{
  unsigned __int16 Flags;
  unsigned __int16 Length;
  unsigned int TimeStamp;
  _STRING DosPath;
};

/* 477 */
struct _RTL_USER_PROCESS_PARAMETERS
{
  unsigned int MaximumLength;
  unsigned int Length;
  unsigned int Flags;
  unsigned int DebugFlags;
  void *ConsoleHandle;
  unsigned int ConsoleFlags;
  void *StandardInput;
  void *StandardOutput;
  void *StandardError;
  _CURDIR CurrentDirectory;
  _UNICODE_STRING DllPath;
  _UNICODE_STRING ImagePathName;
  _UNICODE_STRING CommandLine;
  void *Environment;
  unsigned int StartingX;
  unsigned int StartingY;
  unsigned int CountX;
  unsigned int CountY;
  unsigned int CountCharsX;
  unsigned int CountCharsY;
  unsigned int FillAttribute;
  unsigned int WindowFlags;
  unsigned int ShowWindowFlags;
  _UNICODE_STRING WindowTitle;
  _UNICODE_STRING DesktopInfo;
  _UNICODE_STRING ShellInfo;
  _UNICODE_STRING RuntimeData;
  _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  unsigned int EnvironmentSize;
  unsigned int EnvironmentVersion;
  void *PackageDependencyData;
  unsigned int ProcessGroupId;
  unsigned int LoaderThreads;
};

/* 478 */
struct _RTL_CRITICAL_SECTION
{
  _RTL_CRITICAL_SECTION_DEBUG *DebugInfo;
  int LockCount;
  int RecursionCount;
  void *OwningThread;
  void *LockSemaphore;
  unsigned int SpinCount;
};

/* 494 */
struct $60AEFC16E61220B3C4545A5E6D8A5FF8
{
  volatile int VolatileLowValue;
  int HighValue;
};

/* 495 */
struct $37F200EAC1828AAC543409B7A94E2FBE
{
  int LowValue;
  _HANDLE_TABLE_ENTRY *NextFreeHandleEntry;
};

/* 491 */
struct $97D278A0CD42BCAC54E6F6C01CA8A55F
{
  unsigned __int32 TagBits : 2;
  unsigned __int32 Index : 30;
};

/* 492 */
union $4C4966AEAC9878F53C2E33F046EE4BEB
{
  $97D278A0CD42BCAC54E6F6C01CA8A55F __s0;
  void *GenericHandleOverlay;
  unsigned int Value;
};

/* 493 */
struct _EXHANDLE
{
  $4C4966AEAC9878F53C2E33F046EE4BEB ___u0;
};

/* 496 */
struct $857DD09D17F43F8FB7D45874982085E4
{
  _HANDLE_TABLE_ENTRY_INFO *volatile InfoTable;
  _EXHANDLE LeafHandleValue;
};

/* 497 */
struct $34F07F340279D227E2A2EECB692EE579
{
  unsigned __int32 Unlocked : 1;
  unsigned __int32 Attributes : 2;
  unsigned __int32 ObjectPointerBits : 29;
  int RefCountField;
};

/* 498 */
struct $355AB33A9E742A7E8D442A6A9CAC5ED5
{
  _BYTE gap0[4];
  unsigned __int32 GrantedAccessBits : 25;
  unsigned __int32 ProtectFromClose : 1;
  unsigned __int32 NoRightsUpgrade : 1;
  unsigned __int32 RefCnt : 5;
};

/* 490 */
union _HANDLE_TABLE_ENTRY
{
  $60AEFC16E61220B3C4545A5E6D8A5FF8 __s0;
  $37F200EAC1828AAC543409B7A94E2FBE __s1;
  $857DD09D17F43F8FB7D45874982085E4 __s2;
  $34F07F340279D227E2A2EECB692EE579 __s3;
  $355AB33A9E742A7E8D442A6A9CAC5ED5 __s4;
};

/* 500 */
struct _HANDLE_TRACE_DB_ENTRY
{
  _CLIENT_ID ClientId;
  void *Handle;
  unsigned int Type;
  void *StackTrace[16];
};

/* 501 */
struct _HANDLE_TRACE_DEBUG_INFO
{
  int RefCount;
  unsigned int TableSize;
  unsigned int BitMaskFlags;
  _FAST_MUTEX CloseCompactionLock;
  unsigned int CurrentStackIndex;
  _HANDLE_TRACE_DB_ENTRY TraceDb[1];
};

/* 509 */
struct _MMWSLE_NONDIRECT_HASH
{
  void *Key;
  unsigned int Index;
};

/* 510 */
struct _MMWSLE_HASH
{
  unsigned int Index;
};

/* 512 */
struct _MMWSLENTRY
{
  unsigned __int32 Valid : 1;
  unsigned __int32 Spare : 1;
  unsigned __int32 Hashed : 1;
  unsigned __int32 Direct : 1;
  unsigned __int32 Protection : 5;
  unsigned __int32 Age : 3;
  unsigned __int32 VirtualPageNumber : 20;
};

/* 513 */
struct _MMWSLE_FREE_ENTRY
{
  unsigned __int32 MustBeZero : 1;
  unsigned __int32 PreviousFree : 11;
  unsigned __int32 NextFree : 20;
};

/* 514 */
union $E1A7EDF1196155D971B23B8F87578FFC
{
  void *VirtualAddress;
  unsigned int Long;
  _MMWSLENTRY e1;
  _MMWSLE_FREE_ENTRY e2;
};

/* 515 */
struct _MMWSLE
{
  $E1A7EDF1196155D971B23B8F87578FFC u1;
};

/* 766 */
union $66DF39E2995C1067F2CD58BDC99EC127
{
  _RTL_BALANCED_NODE VadNode;
  _MMVAD_SHORT *NextVad;
};

/* 517 */
struct _MMVAD_FLAGS
{
  unsigned __int32 VadType : 3;
  unsigned __int32 Protection : 5;
  unsigned __int32 PreferredNode : 6;
  unsigned __int32 NoChange : 1;
  unsigned __int32 PrivateMemory : 1;
  unsigned __int32 Teb : 1;
  unsigned __int32 PrivateFixup : 1;
  unsigned __int32 ManySubsections : 1;
  unsigned __int32 Spare : 12;
  unsigned __int32 DeleteInProgress : 1;
};

/* 518 */
union $7EFFCC0E997B9CD1FF1AFF128BFCC37D
{
  unsigned int LongFlags;
  _MMVAD_FLAGS VadFlags;
};

/* 519 */
struct _MMVAD_FLAGS1
{
  unsigned __int32 CommitCharge : 31;
  unsigned __int32 MemCommit : 1;
};

/* 520 */
union $37701EC0CA5342E8E411FDDB9E7467B4
{
  unsigned int LongFlags1;
  _MMVAD_FLAGS1 VadFlags1;
};

/* 516 */
struct _MMVAD_SHORT
{
  $66DF39E2995C1067F2CD58BDC99EC127 ___u0;
  unsigned int StartingVpn;
  unsigned int EndingVpn;
  int ReferenceCount;
  _EX_PUSH_LOCK PushLock;
  $7EFFCC0E997B9CD1FF1AFF128BFCC37D u;
  $37701EC0CA5342E8E411FDDB9E7467B4 u1;
  _MI_VAD_EVENT_BLOCK *EventList;
};

/* 767 */
struct _MMVAD_FLAGS2
{
  unsigned __int32 FileOffset : 24;
  unsigned __int32 Large : 1;
  unsigned __int32 TrimBehind : 1;
  unsigned __int32 Inherit : 1;
  unsigned __int32 CopyOnWrite : 1;
  unsigned __int32 NoValidationNeeded : 1;
  unsigned __int32 PrivateDemandZero : 1;
  unsigned __int32 Spare : 2;
};

/* 768 */
union $E237FAD51885EC1DD41156D4F6040BC9
{
  unsigned int LongFlags2;
  _MMVAD_FLAGS2 VadFlags2;
};

/* 769 */
struct _MI_VAD_SEQUENTIAL_INFO
{
  unsigned __int32 Length : 11;
  unsigned __int32 Vpn : 21;
};

/* 770 */
union $D5E0C1AEA57F179F5D6AAA5C376736A8
{
  _MI_VAD_SEQUENTIAL_INFO SequentialVa;
  _MMEXTEND_INFO *ExtendedInfo;
};

/* 771 */
struct _MMVAD
{
  _MMVAD_SHORT Core;
  $E237FAD51885EC1DD41156D4F6040BC9 u2;
  _SUBSECTION *Subsection;
  _MMPTE *FirstPrototypePte;
  _MMPTE *LastContiguousPte;
  _LIST_ENTRY ViewLinks;
  _EPROCESS *VadsProcess;
  $D5E0C1AEA57F179F5D6AAA5C376736A8 u4;
  _FILE_OBJECT *FileObject;
};

/* 779 */
struct $63C64F7D5703FAD7B76B7BD1AFA1ED4F
{
  unsigned __int32 Flag : 2;
  unsigned __int32 FunctionLength : 11;
  unsigned __int32 Ret : 2;
  unsigned __int32 H : 1;
  unsigned __int32 Reg : 3;
  unsigned __int32 R : 1;
  unsigned __int32 L : 1;
  unsigned __int32 C : 1;
  unsigned __int32 StackAdjust : 10;
};

/* 780 */
union $4B8246C6DCFB39122A26197D96411708
{
  unsigned int UnwindData;
  $63C64F7D5703FAD7B76B7BD1AFA1ED4F __s1;
};

/* 781 */
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
{
  unsigned int BeginAddress;
  $4B8246C6DCFB39122A26197D96411708 ___u1;
};

/* 782 */
struct _DYNAMIC_FUNCTION_TABLE
{
  _LIST_ENTRY ListEntry;
  _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY *FunctionTable;
  _LARGE_INTEGER TimeStamp;
  unsigned int MinimumAddress;
  unsigned int MaximumAddress;
  unsigned int BaseAddress;
  _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY *(__cdecl *Callback)(unsigned int, void *);
  void *Context;
  unsigned __int16 *OutOfProcessCallbackDll;
  _FUNCTION_TABLE_TYPE Type;
  unsigned int EntryCount;
};

/* 479 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  unsigned __int16 Type;
  unsigned __int16 CreatorBackTraceIndex;
  _RTL_CRITICAL_SECTION *CriticalSection;
  _LIST_ENTRY ProcessLocksList;
  unsigned int EntryCount;
  unsigned int ContentionCount;
  unsigned int Flags;
  unsigned __int16 CreatorBackTraceIndexHigh;
  unsigned __int16 SpareUSHORT;
};

/* 489 */
struct _HANDLE_TABLE_ENTRY_INFO
{
  unsigned int AuditMask;
};

/* 522 */
struct _MMSECURE_FLAGS
{
  unsigned __int32 ReadOnly : 1;
  unsigned __int32 ReadWrite : 1;
  unsigned __int32 SecNoChange : 1;
  unsigned __int32 NoDelete : 1;
  unsigned __int32 RequiresPteReversal : 1;
  unsigned __int32 ExclusiveSecure : 1;
  unsigned __int32 Spare : 6;
};

/* 523 */
union $B8387FA8B7662C0F0ED3039DC00E9259
{
  _MMSECURE_FLAGS Flags;
  unsigned int FlagsLong;
  void *StartVa;
};

/* 524 */
struct _MMADDRESS_LIST
{
  $B8387FA8B7662C0F0ED3039DC00E9259 u1;
  void *EndVa;
};

/* 765 */
union $1492415D61D0F2DD30E5B0A2EDF9C166
{
  _KGATE Gate;
  _MMADDRESS_LIST SecureInfo;
  _RTL_BITMAP BitMap;
  _MMINPAGE_SUPPORT *InPageSupport;
  _MI_LARGEPAGE_MEMORY_INFO *LargePage;
  _ETHREAD *CreatingThread;
};

/* 521 */
struct _MI_VAD_EVENT_BLOCK
{
  _MI_VAD_EVENT_BLOCK *Next;
  unsigned int WaitReason;
  $1492415D61D0F2DD30E5B0A2EDF9C166 ___u2;
};

/* 603 */
struct _MMSUBSECTION_FLAGS
{
  unsigned __int16 SubsectionAccessed : 1;
  unsigned __int16 Protection : 5;
  unsigned __int16 StartingSector4132 : 10;
  unsigned __int16 SubsectionStatic : 1;
  unsigned __int16 GlobalMemory : 1;
  unsigned __int16 DirtyPages : 1;
  unsigned __int16 OnDereferenceList : 1;
  unsigned __int16 SectorEndOffset : 12;
};

/* 604 */
union $1C91FF6F106032D5BA9911654234DB2E
{
  unsigned int LongFlags;
  _MMSUBSECTION_FLAGS SubsectionFlags;
};

/* 605 */
union $6854FCCEB281298FEFC6CFC979C78BFD
{
  unsigned int NumberOfChildViews;
};

/* 607 */
union $FA3FE569DEAA32073CA487CADA0F2BFA
{
  unsigned int UnusedPtes;
  unsigned int AlignmentNoAccessPtes;
};

/* 596 */
struct _SUBSECTION
{
  _CONTROL_AREA *ControlArea;
  _MMPTE *SubsectionBase;
  _SUBSECTION *NextSubsection;
  $5C05C9D415929844BF733FF5D0CABA36 ___u3;
  $1C91FF6F106032D5BA9911654234DB2E u;
  unsigned int StartingSector;
  unsigned int NumberOfFullSectors;
  unsigned int PtesInSubsection;
  $6854FCCEB281298FEFC6CFC979C78BFD u1;
  $FA3FE569DEAA32073CA487CADA0F2BFA ___u9;
};

/* 527 */
struct _HARDWARE_PTE
{
  unsigned __int32 Valid : 2;
  unsigned __int32 CacheType : 2;
  unsigned __int32 Accessed : 1;
  unsigned __int32 Owner : 1;
  unsigned __int32 TypeExtension : 1;
  unsigned __int32 Writable : 1;
  unsigned __int32 CopyOnWrite : 1;
  unsigned __int32 ReadOnly : 1;
  unsigned __int32 LargePage : 1;
  unsigned __int32 NonGlobal : 1;
  unsigned __int32 PageFrameNumber : 20;
};

/* 528 */
struct _MMPTE_HARDWARE
{
  unsigned __int32 Valid : 2;
  unsigned __int32 CacheType : 2;
  unsigned __int32 Accessed : 1;
  unsigned __int32 Owner : 1;
  unsigned __int32 TypeExtension : 1;
  unsigned __int32 Writable : 1;
  unsigned __int32 CopyOnWrite : 1;
  unsigned __int32 NotDirty : 1;
  unsigned __int32 LargePage : 1;
  unsigned __int32 NonGlobal : 1;
  unsigned __int32 PageFrameNumber : 20;
};

/* 529 */
struct _MMPDE_HARDWARE
{
  unsigned __int32 Valid : 1;
  unsigned __int32 AlwaysZero1 : 1;
  unsigned __int32 PrivilegedExecuteNever : 1;
  unsigned __int32 AlwaysZero2 : 7;
  unsigned __int32 PageFrameNumber : 22;
};

/* 530 */
struct _MMPDE_HARDWARE_LARGE
{
  unsigned __int32 PrivilegedExecuteNever : 1;
  unsigned __int32 Valid : 1;
  unsigned __int32 CacheType : 2;
  unsigned __int32 ExecuteNever : 1;
  unsigned __int32 Domain : 4;
  unsigned __int32 AlwaysZero1 : 1;
  unsigned __int32 Accessed : 1;
  unsigned __int32 Owner : 1;
  unsigned __int32 TypeExtension : 1;
  unsigned __int32 Writable : 1;
  unsigned __int32 CopyOnWrite : 1;
  unsigned __int32 NotDirty : 1;
  unsigned __int32 LargePage : 1;
  unsigned __int32 NonGlobal : 1;
  unsigned __int32 AlwaysZero : 2;
  unsigned __int32 PageFrameNumber : 12;
};

/* 531 */
struct _MMPTE_PROTOTYPE
{
  unsigned __int32 Valid : 2;
  unsigned __int32 ProtoAddressLow : 7;
  unsigned __int32 ReadOnly : 1;
  unsigned __int32 Prototype : 1;
  unsigned __int32 ProtoAddressHigh : 21;
};

/* 532 */
struct _MMPTE_SOFTWARE
{
  unsigned __int32 Valid : 2;
  unsigned __int32 PageFileLow : 1;
  unsigned __int32 PageFileReserved : 1;
  unsigned __int32 PageFileAllocated : 1;
  unsigned __int32 Protection : 5;
  unsigned __int32 Prototype : 1;
  unsigned __int32 Transition : 1;
  unsigned __int32 Spare : 1;
  unsigned __int32 PageFileHigh : 19;
};

/* 533 */
struct _MMPTE_TIMESTAMP
{
  unsigned __int32 MustBeZero : 2;
  unsigned __int32 Spare : 3;
  unsigned __int32 Protection : 5;
  unsigned __int32 Prototype : 1;
  unsigned __int32 Transition : 1;
  unsigned __int32 GlobalTimeStamp : 20;
};

/* 534 */
struct _MMPTE_TRANSITION
{
  unsigned __int32 Valid : 2;
  unsigned __int32 CacheType : 2;
  unsigned __int32 Spare : 1;
  unsigned __int32 Protection : 5;
  unsigned __int32 Prototype : 1;
  unsigned __int32 Transition : 1;
  unsigned __int32 PageFrameNumber : 20;
};

/* 535 */
struct _MMPTE_SUBSECTION
{
  unsigned __int32 Valid : 2;
  unsigned __int32 SubsectionAddressLow : 8;
  unsigned __int32 Prototype : 1;
  unsigned __int32 SubsectionAddressHigh : 21;
};

/* 536 */
struct _MMPTE_LIST
{
  unsigned __int32 Valid : 2;
  unsigned __int32 OneEntry : 1;
  unsigned __int32 filler0 : 7;
  unsigned __int32 Prototype : 1;
  unsigned __int32 filler1 : 1;
  unsigned __int32 NextEntry : 20;
};

/* 537 */
union $1469F26C0C80E8D70BC42E8EA21A4D00
{
  unsigned int Long;
  volatile unsigned int VolatileLong;
  _HARDWARE_PTE Flush;
  _MMPTE_HARDWARE Hard;
  _MMPDE_HARDWARE HardPde;
  _MMPDE_HARDWARE_LARGE HardPdeLarge;
  _MMPTE_PROTOTYPE Proto;
  _MMPTE_SOFTWARE Soft;
  _MMPTE_TIMESTAMP TimeStamp;
  _MMPTE_TRANSITION Trans;
  _MMPTE_SUBSECTION Subsect;
  _MMPTE_LIST List;
};

/* 538 */
struct _MMPTE
{
  $1469F26C0C80E8D70BC42E8EA21A4D00 u;
};

/* 569 */
struct __declspec(align(8)) _MMEXTEND_INFO
{
  unsigned __int64 CommittedSize;
  unsigned int ReferenceCount;
};

/* 557 */
union $57C47FFC5A1DE06CD89715BCCDAEA31C
{
  unsigned int ImagePteOffset;
  unsigned int TossPage;
};

/* 558 */
struct _MMINPAGE_FLAGS
{
  unsigned __int8 InjectRetry : 1;
  unsigned __int8 CrossThreadPadding : 7;
  unsigned __int8 PrefetchSystemVmType : 2;
  unsigned __int8 VaPrefetchReadBlock : 1;
  unsigned __int8 CollidedFlowThrough : 1;
  unsigned __int8 ForceCollisions : 1;
  unsigned __int8 InPageExpanded : 1;
  unsigned __int8 IssuedAtLowPriority : 1;
  unsigned __int8 FaultFromStore : 1;
  unsigned __int8 PagePriority : 3;
  unsigned __int8 PerformRelocations : 1;
  unsigned __int8 ClusteredPagePriority : 3;
  unsigned __int8 MakeClusterValid : 1;
  unsigned __int8 ZeroLastPage : 1;
  unsigned __int8 UserFault : 1;
  unsigned __int8 StandbyProtectionNeeded : 1;
  unsigned __int8 PteChanged : 1;
  unsigned __int8 PageFileFault : 1;
  unsigned __int8 PageFilePageHashActive : 1;
  unsigned __int8 CoalescedIo : 1;
  unsigned __int8 VmLockNotNeeded : 1;
};

/* 559 */
union $6AD69D09ECCBD59FFDD12764B7E59C07
{
  _MMINPAGE_FLAGS e1;
  unsigned int LongFlags;
};

/* 761 */
union $545199F304BFE460F67D44A648A08692
{
  _CONTROL_AREA *ControlArea;
  _SUBSECTION *Subsection;
};

/* 760 */
struct _MMINPAGE_SUPPORT_FLOW_THROUGH
{
  unsigned int Page[1];
  _MMINPAGE_SUPPORT *InitialInPageSupport;
  _MMPAGING_FILE *PagingFile;
  unsigned int PageFileOffset;
  _RTL_BALANCED_NODE Node;
};

/* 762 */
union $D27D945C2966D1ED01B2F5BB44A7B272
{
  unsigned int Page[16];
  _MMINPAGE_SUPPORT_FLOW_THROUGH FlowThrough;
};

/* 609 */
struct _MMINPAGE_SUPPORT
{
  _LIST_ENTRY ListEntry;
  _LIST_ENTRY ListHead;
  _KEVENT Event;
  _KEVENT CollidedEvent;
  _IO_STATUS_BLOCK IoStatus;
  _LARGE_INTEGER ReadOffset;
  _KAPC_STATE ApcState;
  _ETHREAD *Thread;
  _MMPFN *LockedProtoPfn;
  _MMPTE PteContents;
  volatile int WaitCount;
  unsigned int ByteCount;
  $57C47FFC5A1DE06CD89715BCCDAEA31C u3;
  $6AD69D09ECCBD59FFDD12764B7E59C07 u1;
  _FILE_OBJECT *FilePointer;
  $545199F304BFE460F67D44A648A08692 ___u15;
  void *Autoboost;
  void *FaultingAddress;
  _MMPTE *PointerPte;
  _MMPTE *BasePte;
  _MMPFN *Pfn;
  _MDL *PrefetchMdl;
  __declspec(align(8)) _MDL Mdl;
  $D27D945C2966D1ED01B2F5BB44A7B272 ___u23;
};

/* 764 */
struct _MI_LARGEPAGE_MEMORY_INFO
{
  _LIST_ENTRY ListHead;
  _COLORED_PAGE_INFO *ColoredPageInfoBase;
  unsigned int PagesNeedZeroing;
};

/* 583 */
struct _MMSECTION_FLAGS
{
  unsigned __int32 BeingDeleted : 1;
  unsigned __int32 BeingCreated : 1;
  unsigned __int32 BeingPurged : 1;
  unsigned __int32 NoModifiedWriting : 1;
  unsigned __int32 FailAllIo : 1;
  unsigned __int32 Image : 1;
  unsigned __int32 Based : 1;
  unsigned __int32 File : 1;
  unsigned __int32 AttemptingDelete : 1;
  unsigned __int32 PrefetchCreated : 1;
  unsigned __int32 PhysicalMemory : 1;
  unsigned __int32 CopyOnWrite : 1;
  unsigned __int32 Reserve : 1;
  unsigned __int32 Commit : 1;
  unsigned __int32 NoChange : 1;
  unsigned __int32 WasPurged : 1;
  unsigned __int32 UserReference : 1;
  unsigned __int32 GlobalMemory : 1;
  unsigned __int32 DeleteOnClose : 1;
  unsigned __int32 FilePointerNull : 1;
  unsigned __int32 PreferredNode : 6;
  unsigned __int32 GlobalOnlyPerSession : 1;
  unsigned __int32 UserWritable : 1;
  unsigned __int32 SystemVaAllocated : 1;
  unsigned __int32 PreferredFsCompressionBoundary : 1;
  unsigned __int32 UsingFileExtents : 1;
  unsigned __int32 Spare : 1;
};

/* 584 */
union $60CDD7FF021EE3E269D5308DF7E51BF2
{
  unsigned int LongFlags;
  _MMSECTION_FLAGS Flags;
};

/* 590 */
union $6497B3B332FBE6AA944876FB43D8DF8C
{
  unsigned int NumberOfSystemCacheViews;
  unsigned int ImageRelocationStartBit;
};

/* 591 */
struct $55675D15247841D9E05ECA4E3B52AAF0
{
  unsigned __int32 ImageRelocationSizeIn64k : 16;
  unsigned __int32 Unused : 9;
  unsigned __int32 SystemImage : 1;
  unsigned __int32 StrongCode : 2;
  unsigned __int32 CantMove : 1;
  unsigned __int32 BitMap : 2;
  unsigned __int32 ImageActive : 1;
};

/* 592 */
union $8D40EF9AE09FE1587B1534E39F59EEC1
{
  volatile int WritableUserReferences;
  $55675D15247841D9E05ECA4E3B52AAF0 __s1;
};

/* 593 */
union $A7A038E442AF76314E0B8D2FE8758F94
{
  unsigned int FlushInProgressCount;
  unsigned int NumberOfSubsections;
  _MI_IMAGE_SECURITY_REFERENCE *SeImageStub;
};

/* 594 */
struct $6E5C8A3164051A3AC1F5FDF886D9A3E5
{
  $6497B3B332FBE6AA944876FB43D8DF8C ___u0;
  $8D40EF9AE09FE1587B1534E39F59EEC1 ___u1;
  $A7A038E442AF76314E0B8D2FE8758F94 ___u2;
};

/* 595 */
union $E61389577F60F22646BEE482322AE000
{
  $6E5C8A3164051A3AC1F5FDF886D9A3E5 e2;
};

/* 560 */
struct __declspec(align(8)) _CONTROL_AREA
{
  _SEGMENT *Segment;
  _LIST_ENTRY ListHead;
  unsigned int NumberOfSectionReferences;
  unsigned int NumberOfPfnReferences;
  unsigned int NumberOfMappedViews;
  unsigned int NumberOfUserReferences;
  $60CDD7FF021EE3E269D5308DF7E51BF2 u;
  _EX_FAST_REF FilePointer;
  volatile int ControlAreaLock;
  unsigned int ModifiedWriteCount;
  _MI_CONTROL_AREA_WAIT_BLOCK *WaitList;
  $E61389577F60F22646BEE482322AE000 u2;
  volatile unsigned __int64 LockedPages;
  _EX_PUSH_LOCK FileObjectLock;
};

/* 606 */
union $5C05C9D415929844BF733FF5D0CABA36
{
  _MI_FILE_EXTENTS *FileExtents;
  _RTL_AVL_TREE GlobalPerSessionHead;
  _MI_PER_SESSION_PROTOS *SessionDriverProtos;
};

/* 551 */
struct $80ECB0567EA936887CD0BAE6E3BBCD3C
{
  _LIST_ENTRY ListEntry;
  _MMPTE OriginalPte;
};

/* 526 */
union $800133C673395C512FFCB984E626459B
{
  unsigned int Flink;
  unsigned int WsIndex;
  _KEVENT *Event;
  void *Next;
  void *volatile VolatileNext;
  _KTHREAD *KernelStackOwner;
  _SINGLE_LIST_ENTRY NextStackPfn;
};

/* 552 */
struct $38AD3D3C4B767EF42D8671065EA7C9BE
{
  $800133C673395C512FFCB984E626459B u1;
  _MMPTE *PteAddress;
};

/* 553 */
struct $A35FFF11575765F914D048F99DFD9BBD
{
  _BYTE gap0[4];
  void *volatile VolatilePteAddress;
};

/* 554 */
struct $D4A2F97CAAEE2A8CE59D25C525AD31FD
{
  _BYTE gap0[4];
  unsigned int PteLong;
};

/* 555 */
union $D123B463805D1FA75816EFA9FEB4A7A0
{
  $80ECB0567EA936887CD0BAE6E3BBCD3C __s0;
  _RTL_BALANCED_NODE TreeNode;
  $38AD3D3C4B767EF42D8671065EA7C9BE __s2;
  $A35FFF11575765F914D048F99DFD9BBD __s3;
  $D4A2F97CAAEE2A8CE59D25C525AD31FD __s4;
};

/* 539 */
struct $A91531D1A45809114391C34024F6AFB8
{
  unsigned __int32 Blink : 20;
  unsigned __int32 TbFlushStamp : 4;
  unsigned __int32 Unused : 2;
  unsigned __int32 PageBlinkDeleteBit : 1;
  unsigned __int32 PageBlinkLockBit : 1;
};

/* 540 */
struct $F833388654C2C57A66386A7819E0ADC5
{
  unsigned __int32 ShareCount : 30;
  unsigned __int32 PageShareCountDeleteBit : 1;
  unsigned __int32 PageShareCountLockBit : 1;
};

/* 541 */
struct $14705FFC492505AF18601FF69F1E54A5
{
  unsigned __int32 LockNotUsed : 30;
  unsigned __int32 DeleteBit : 1;
  unsigned __int32 LockBit : 1;
};

/* 542 */
union $00BA73A28EF82548D6FFB16BD774BFDF
{
  $A91531D1A45809114391C34024F6AFB8 __s0;
  $F833388654C2C57A66386A7819E0ADC5 __s1;
  unsigned int EntireField;
  volatile int Lock;
  $14705FFC492505AF18601FF69F1E54A5 __s4;
};

/* 543 */
struct _MIPFNBLINK
{
  $00BA73A28EF82548D6FFB16BD774BFDF ___u0;
};

/* 544 */
struct _MMPFNENTRY
{
  unsigned __int8 PageLocation : 3;
  unsigned __int8 WriteInProgress : 1;
  unsigned __int8 Modified : 1;
  unsigned __int8 ReadInProgress : 1;
  unsigned __int8 CacheAttribute : 2;
  unsigned __int8 Priority : 3;
  unsigned __int8 OnProtectedStandby : 1;
  unsigned __int8 InPageError : 1;
  unsigned __int8 SystemChargedPage : 1;
  unsigned __int8 RemovalRequested : 1;
  unsigned __int8 ParityError : 1;
};

/* 547 */
struct $DAC5EEB22DA20EDEC7A1795F407E66AC
{
  unsigned __int16 ReferenceCount;
  _MMPFNENTRY e1;
};

/* 545 */
union $FF14303089919585C773B5883CCA934F
{
  unsigned __int16 ShortFlags;
  volatile unsigned __int16 VolatileShortFlags;
};

/* 546 */
struct $EDA8470257D00766A6B9727BE06780B3
{
  unsigned __int16 ReferenceCount;
  $FF14303089919585C773B5883CCA934F ___u1;
};

/* 548 */
union $35C24805778DFA8A5B8A5B0C69E2F3A6
{
  $DAC5EEB22DA20EDEC7A1795F407E66AC __s0;
  $EDA8470257D00766A6B9727BE06780B3 e2;
};

/* 549 */
struct $C87AA71CBDAFB6FB554A759C45B1A2B3
{
  unsigned __int32 PteFrame : 20;
  unsigned __int32 Unused : 4;
  unsigned __int32 PageIdentity : 3;
  unsigned __int32 PrototypePte : 1;
  unsigned __int32 PageColor : 4;
};

/* 550 */
union $6D4029E5449FF008F4D0800DDE55FA3A
{
  $C87AA71CBDAFB6FB554A759C45B1A2B3 __s0;
  unsigned int EntireField;
};

/* 556 */
struct _MMPFN
{
  $D123B463805D1FA75816EFA9FEB4A7A0 ___u0;
  _MIPFNBLINK u2;
  $35C24805778DFA8A5B8A5B0C69E2F3A6 u3;
  $6D4029E5449FF008F4D0800DDE55FA3A u4;
};

/* 759 */
union $80FE60C0912A4E060D4BD23722769CB1
{
  unsigned int ToBeEvictedCount;
  unsigned int HybridPriority;
};

/* 713 */
struct _MMPAGING_FILE
{
  unsigned int Size;
  unsigned int MaximumSize;
  unsigned int MinimumSize;
  unsigned int FreeSpace;
  unsigned int PeakUsage;
  unsigned int HighestPage;
  unsigned int FreeReservationSpace;
  unsigned int LargestReserveCluster;
  _FILE_OBJECT *File;
  _MMMOD_WRITER_MDL_ENTRY *Entry[2];
  _SLIST_HEADER PfnsToFree;
  _UNICODE_STRING PageFileName;
  _MI_PAGING_FILE_SPACE_BITMAPS *Bitmaps;
  unsigned int AllocationBitmapHint;
  unsigned int ReservationBitmapHint;
  unsigned int LargestNonReservedClusterSize;
  unsigned int RefreshClusterSize;
  unsigned int LastRefreshClusterSize;
  unsigned int ReservedClusterSizeAggregate;
  $80FE60C0912A4E060D4BD23722769CB1 ___u19;
  unsigned __int16 PageFileNumber : 4;
  unsigned __int16 WsSwapPagefile : 1;
  unsigned __int16 NoReservations : 1;
  unsigned __int16 VirtualStorePagefile : 1;
  unsigned __int16 SwapSupported : 1;
  unsigned __int16 NodeInserted : 1;
  unsigned __int16 StackNotified : 1;
  unsigned __int16 Spare0 : 5;
  unsigned __int8 AdriftMdls : 1;
  unsigned __int8 Spare1 : 7;
  unsigned __int8 Spare2 : 8;
  unsigned int PageHashPages;
  unsigned int PageHashPagesPeak;
  unsigned int *PageHash;
  void *FileHandle;
  unsigned int Lock;
  _ETHREAD *LockOwner;
  _RTL_AVL_TREE FlowThroughReadRoot;
  _MI_PARTITION *Partition;
  _RTL_BALANCED_NODE FileObjectNode;
};

/* 763 */
struct _COLORED_PAGE_INFO
{
  volatile int BeingZeroed;
  unsigned int Processor;
  unsigned int PagesQueued;
  _MMPFN *PfnAllocation;
};

/* 561 */
struct $C9F0F101DE0216996646B5775899F5FE
{
  unsigned __int16 TotalNumberOfPtes4132 : 10;
  unsigned __int16 Spare0 : 2;
  unsigned __int16 LargePages : 1;
  unsigned __int16 DebugSymbolsLoaded : 1;
  unsigned __int16 WriteCombined : 1;
  unsigned __int16 NoCache : 1;
};

/* 562 */
union $AB4B2CCCE6F1C47BAEF97CB535DD1878
{
  $C9F0F101DE0216996646B5775899F5FE __s0;
  unsigned __int16 Short0;
};

/* 563 */
struct $1A289A67D0BC29A9A0C82060295677F8
{
  unsigned __int8 FloppyMedia : 1;
  unsigned __int8 DefaultProtectionMask : 5;
  unsigned __int8 Binary32 : 1;
  unsigned __int8 ContainsDebug : 1;
  unsigned __int8 ForceCollision : 1;
};

/* 564 */
union $CB7268D1940205C7241E94BEE5B96F95
{
  $1A289A67D0BC29A9A0C82060295677F8 __s0;
  unsigned __int8 UChar1;
};

/* 565 */
struct $CB0533A8E10952E8BDE2B10B40389D58
{
  _BYTE gap0;
  unsigned __int8 UChar2;
};

/* 566 */
struct $3DD2C26DC01458CFE50856A5093455B3
{
  _BYTE gap0;
  unsigned __int8 : 1;
  unsigned __int8 ImageSigningType : 3;
  unsigned __int8 ImageSigningLevel : 4;
};

/* 567 */
union $1B027276EA3C737F8CBC8F16A0424A06
{
  $CB7268D1940205C7241E94BEE5B96F95 ___u1;
  $CB0533A8E10952E8BDE2B10B40389D58 __s1;
  $3DD2C26DC01458CFE50856A5093455B3 __s2;
};

/* 568 */
struct _SEGMENT_FLAGS
{
  $AB4B2CCCE6F1C47BAEF97CB535DD1878 ___u0;
  $1B027276EA3C737F8CBC8F16A0424A06 ___u1;
};

/* 581 */
union $055C3BA92E25F8980B48285F42FEFA6C
{
  _MMEXTEND_INFO *ExtendInfo;
  void *BasedAddress;
};

/* 570 */
union $B562436BCA5E98B47507E7AF50BF8DC9
{
  unsigned int ImageCommitment;
  _EPROCESS *CreatingProcess;
};

/* 580 */
union $6F6F48EF8258665514FD5D80AFC45CB2
{
  _MI_SECTION_IMAGE_INFORMATION *ImageInformation;
  void *FirstMappedVa;
};

/* 582 */
struct __declspec(align(8)) _SEGMENT
{
  _CONTROL_AREA *ControlArea;
  unsigned int TotalNumberOfPtes;
  _SEGMENT_FLAGS SegmentFlags;
  unsigned int NumberOfCommittedPages;
  unsigned __int64 SizeOfSegment;
  $055C3BA92E25F8980B48285F42FEFA6C ___u5;
  _EX_PUSH_LOCK SegmentLock;
  $B562436BCA5E98B47507E7AF50BF8DC9 u1;
  $6F6F48EF8258665514FD5D80AFC45CB2 u2;
  _MMPTE *PrototypePte;
};

/* 585 */
struct _MI_CONTROL_AREA_WAIT_BLOCK
{
  _MI_CONTROL_AREA_WAIT_BLOCK *Next;
  unsigned int WaitReason;
  unsigned int WaitResponse;
  _KGATE Gate;
};

/* 586 */
struct $8B208C68F3F623858CC7A3A2DCBE92CC
{
  unsigned __int32 SecurityBeingCreated : 2;
  unsigned __int32 SecurityMandatory : 1;
  unsigned __int32 PageHashPointer : 29;
};

/* 587 */
union $DE09B6F8150D357AC27962DF6D868925
{
  void *PageHashes;
  unsigned int Value;
  $8B208C68F3F623858CC7A3A2DCBE92CC __s2;
};

/* 588 */
struct _IMAGE_SECURITY_CONTEXT
{
  $DE09B6F8150D357AC27962DF6D868925 ___u0;
};

/* 589 */
struct _MI_IMAGE_SECURITY_REFERENCE
{
  void *DynamicRelocations;
  _IMAGE_SECURITY_CONTEXT SecurityContext;
  unsigned int StrongImageReference;
};

/* 598 */
struct _MI_FILE_EXTENTS
{
  _MI_FILE_EXTENTS_WAIT_BLOCK *WaitList;
};

/* 600 */
union $D2BA869676BD5632D2709CD3860E3DAA
{
  _RTL_BALANCED_NODE SessionProtoNode;
  _SINGLE_LIST_ENTRY FreeList;
  void *DriverAddress;
};

/* 601 */
union $19CEE469C8F2D94E2984B68CADFE1F59
{
  unsigned int SessionId;
  _SUBSECTION *Subsection;
};

/* 599 */
union $A2452D200B36FBA683C099CE2B8A99EF
{
  unsigned int ReferenceCount;
  unsigned int NumberOfPtesToFree;
};

/* 602 */
struct _MI_PER_SESSION_PROTOS
{
  $D2BA869676BD5632D2709CD3860E3DAA ___u0;
  $19CEE469C8F2D94E2984B68CADFE1F59 ___u1;
  _MMPTE *SubsectionBase;
  $A2452D200B36FBA683C099CE2B8A99EF u2;
};

/* 610 */
union $21ACC02E66EBDE410612063E685368C6
{
  _IO_STATUS_BLOCK IoStatus;
};

/* 712 */
struct _MODWRITER_FLAGS
{
  unsigned __int32 KeepForever : 1;
  unsigned __int32 Networked : 1;
  unsigned __int32 IoPriority : 3;
  unsigned __int32 ModifiedStoreWrite : 1;
};

/* 755 */
struct _MMMOD_WRITER_MDL_ENTRY
{
  _LIST_ENTRY Links;
  $21ACC02E66EBDE410612063E685368C6 u;
  _IRP *Irp;
  _MODWRITER_FLAGS u1;
  unsigned int StoreWriteRefCount;
  _KAPC StoreWriteCompletionApc;
  unsigned int ByteCount;
  unsigned int ChargedPages;
  _MMPAGING_FILE *PagingFile;
  _FILE_OBJECT *File;
  _CONTROL_AREA *ControlArea;
  _ERESOURCE *FileResource;
  _LARGE_INTEGER WriteOffset;
  _LARGE_INTEGER IssueTime;
  _MI_PARTITION *Partition;
  _MDL *PointerMdl;
  _MDL Mdl;
  unsigned int Page[1];
};

/* 757 */
union $DF3EF301EADE6D95B207B8AFE190637D
{
  unsigned int RefCount;
  _MI_PAGING_FILE_SPACE_BITMAPS *Anchor;
};

/* 758 */
union $322B2F6EC982BD2DC3B796116F67CC9A
{
  _RTL_BITMAP ReservationBitmap;
  _RTL_BITMAP EvictedBitmap;
};

/* 756 */
struct _MI_PAGING_FILE_SPACE_BITMAPS
{
  $DF3EF301EADE6D95B207B8AFE190637D ___u0;
  _RTL_BITMAP AllocationBitmap;
  $322B2F6EC982BD2DC3B796116F67CC9A ___u2;
};

/* 714 */
struct _MI_PARTITION_FLAGS
{
  unsigned __int32 BeingDeleted : 1;
  unsigned __int32 ObjectInitialized : 1;
};

/* 715 */
union $B7B28FB06A085722388ED51CFE425914
{
  unsigned int LongFlags;
  _MI_PARTITION_FLAGS Flags;
};

/* 721 */
struct _MI_PARTITION_STATISTICS
{
  unsigned int DeleteYield;
  unsigned int DeleteBad;
  unsigned int DeleteTrulyBad;
  unsigned int DeleteLargePage;
  unsigned int DeleteLargePageRetry;
  unsigned int DeleteZeroFree;
  unsigned int DeleteTransition;
  unsigned int DeleteStandbyReferenced;
  unsigned int DeleteStandbyRelinkFailed;
  unsigned int DeleteStandbySharedPagefile;
  unsigned int DeleteStandbySharedFile;
  unsigned int DeleteModifiedReferenced;
  unsigned int DeleteModified;
  unsigned int DeleteModifiedNoWrite;
  unsigned int DeleteModifiedSharedPagefile;
  unsigned int DeleteModifiedSharedFile;
  unsigned int DeleteActiveSharedPagefile1;
  unsigned int DeleteActiveSharedPagefile2;
  unsigned int DeleteActiveSharedFile;
  unsigned int DeleteWriteDelay;
};

/* 722 */
struct _MI_PARTITION_CORE
{
  unsigned __int16 PartitionId;
  $B7B28FB06A085722388ED51CFE425914 u;
  unsigned int ReferenceCount;
  _MI_PARTITION *ParentPartition;
  _LIST_ENTRY ListEntry;
  _MI_NODE_INFORMATION *NodeInformation;
  _MDL *MdlPhysicalMemoryBlock;
  _PHYSICAL_MEMORY_DESCRIPTOR *MemoryNodeRuns;
  _MI_PARTITION_STATISTICS Stats;
  _PHYSICAL_MEMORY_DESCRIPTOR *MemoryRuns;
  _KEVENT ExitEvent;
  void *SystemThreadHandles[5];
  void *PartitionObject;
  void *PartitionObjectHandle;
  _EX_PUSH_LOCK DynamicMemoryPushLock;
  volatile int DynamicMemoryLock;
  _KEVENT TemporaryMemoryEvent;
  _KEVENT *MemoryEvents[11];
};

/* 723 */
struct _MMPAGE_FILE_EXPANSION_FLAGS
{
  unsigned __int8 PageFileNumber : 8;
  unsigned __int8 Spare1 : 8;
  unsigned __int8 Spare2 : 8;
  unsigned __int8 IgnoreCurrentCommit : 1;
  unsigned __int8 IncreaseMinimumSize : 1;
  unsigned __int8 Spare3 : 6;
};

/* 724 */
struct __declspec(align(4)) _MMPAGE_FILE_EXPANSION
{
  _SEGMENT *Segment;
  _LIST_ENTRY DereferenceList;
  _MI_PARTITION *Partition;
  unsigned int RequestedExpansionSize;
  unsigned int ActualExpansion;
  _KEVENT Event;
  volatile int InProgress;
  _MMPAGE_FILE_EXPANSION_FLAGS u;
  void **volatile ActiveEntry;
  unsigned __int8 AttemptForCantExtend;
  unsigned __int8 PageFileContract;
};

/* 725 */
union $81C771B209E9CC1EB4499CB83D633E67
{
  _KGATE Gate;
  _KEVENT Event;
};

/* 726 */
struct _MMMOD_WRITER_LISTHEAD
{
  _LIST_ENTRY ListHead;
  $81C771B209E9CC1EB4499CB83D633E67 ___u1;
};

/* 727 */
struct $52078F93A8B8ECA5E66241883B81A96B
{
  unsigned __int32 ClusterSize : 11;
  unsigned __int32 SequenceNumber : 21;
};

/* 728 */
volatile union _MI_RESERVATION_CLUSTER_INFO
{
  $52078F93A8B8ECA5E66241883B81A96B __s0;
  int EntireInfo;
};

/* 729 */
struct _MI_MODWRITE_DATA
{
  int PagesLoad;
  unsigned int PagesAverage;
  unsigned int AverageAvailablePages;
  unsigned int PagesWritten;
  unsigned int WritesIssued;
  unsigned int IgnoredReservationsCount;
  unsigned int FreedReservationsCount;
  unsigned int WriteBurstCount;
  unsigned __int64 IgnoreReservationsStartTime;
  volatile _MI_RESERVATION_CLUSTER_INFO ReservationClusterInfo;
  unsigned __int16 IgnoreReservations : 1;
  unsigned __int16 Spare : 15;
  unsigned __int16 Spare1;
};

/* 730 */
struct __declspec(align(8)) _MI_PARTITION_MODWRITES
{
  _MMPAGE_FILE_EXPANSION AttemptForCantExtend;
  _MMPAGE_FILE_EXPANSION PageFileContract;
  unsigned int NumberOfMappedMdls;
  volatile int NumberOfMappedMdlsInUse;
  unsigned int NumberOfMappedMdlsInUsePeak;
  _MMMOD_WRITER_LISTHEAD MappedFileHeader;
  unsigned __int8 NeedMappedMdl;
  unsigned __int8 NeedPageFileMdl;
  unsigned __int8 TransitionInserted;
  int LastModifiedWriteError;
  int LastMappedWriteError;
  volatile unsigned int MappedFileWriteSucceeded;
  unsigned int MappedWriteBurstCount;
  unsigned int LowPriorityModWritesOutstanding;
  _KEVENT BoostModWriteIoPriorityEvent;
  int ModifiedWriterThreadPriority;
  unsigned int ModifiedPagesLowPriorityGoal;
  _KEVENT ModifiedPageWriterEvent;
  volatile int WriteAllPagefilePages;
  volatile int WriteAllMappedPages;
  _KEVENT MappedPageWriterEvent;
  _MI_MODWRITE_DATA ModWriteData;
  _KEVENT RescanPageFilesEvent;
  _MMMOD_WRITER_LISTHEAD PagingFileHeader;
  _ETHREAD *ModifiedPageWriterThread;
  _EX_RUNDOWN_REF ModifiedPageWriterRundown;
  _WORK_QUEUE_ITEM PagefileScanWorkItem;
  unsigned int PagefileScanCount;
  volatile int ClusterWritesDisabled[2];
  volatile unsigned __int8 DelayMappedWrite;
  volatile unsigned int PagefileReservationsEnabled;
  _EX_PUSH_LOCK PageFileCreationLock;
  _WORK_QUEUE_ITEM TrimPagefileWorkItem;
  unsigned __int64 LastTrimPagefileTime;
  _WORK_QUEUE_ITEM WsSwapPagefileContractWorkItem;
  volatile int WsSwapPageFileContractionInProgress;
  _EX_PUSH_LOCK WorkingSetSwapLock;
  volatile int WorkingSetInswapLock;
};

/* 731 */
struct $E6AB85F4C00D05B5CDD951583603F4EA
{
  __int32 FlushCompleting : 1;
  __int32 FlushInProgress : 31;
};

/* 732 */
union $A578CF065D3B9F52894DB6E1B83A3834
{
  $E6AB85F4C00D05B5CDD951583603F4EA __s0;
  volatile int Long;
};

/* 733 */
struct _MI_PARTITION_STORES
{
  $A578CF065D3B9F52894DB6E1B83A3834 WriteAllStoreHintedPages;
  unsigned int VirtualPageFileNumber;
  unsigned int Registered;
  unsigned int ReadClusterSizeMax;
  unsigned int EvictFlushRequestCount;
  unsigned int ModifiedWriteDisableCount;
  unsigned int WriteIssueFailures;
  _ETHREAD *EvictionThread;
  _KEVENT EvictEvent;
  _KEVENT EvictFlushCompleteEvent;
  _SLIST_HEADER WriteSupportSListHead;
  volatile int EvictFlushLock;
  _RTL_BITMAP *ModifiedWriteFailedBitmap;
};

/* 734 */
struct _MMDEREFERENCE_SEGMENT_HEADER
{
  _KSEMAPHORE Semaphore;
  _LIST_ENTRY ListHead;
};

/* 735 */
struct __declspec(align(8)) _MI_PARTITION_SEGMENTS
{
  _KEVENT DeleteSubsectionCleanup;
  _KEVENT UnusedSegmentCleanup;
  unsigned int SubsectionDeletePtes;
  _MMDEREFERENCE_SEGMENT_HEADER DereferenceSegmentHeader;
  _LIST_ENTRY DeleteOnCloseList;
  _KTIMER DeleteOnCloseTimer;
  unsigned __int8 DeleteOnCloseTimerActive;
  unsigned int DeleteOnCloseCount;
  _LIST_ENTRY UnusedSegmentList;
  _LIST_ENTRY UnusedSubsectionList;
  _LIST_ENTRY DeleteSubsectionList;
  _KEVENT ControlAreaDeleteEvent;
  _SINGLE_LIST_ENTRY ControlAreaDeleteList;
};

/* 736 */
struct _MMPFNLIST
{
  unsigned int Total;
  _MMLISTS ListName;
  unsigned int Flink;
  unsigned int Blink;
  unsigned int Lock;
};

/* 737 */
struct _MI_DECAY_TIMER_LINKAGE
{
  unsigned __int32 Spare0 : 1;
  unsigned __int32 PreviousDecayPfn : 15;
  unsigned __int32 Spare1 : 1;
  unsigned __int32 NextDecayPfn : 15;
};

/* 738 */
union $36F6D0CADEF32F931B69CB698223A717
{
  unsigned int Long;
  _MI_DECAY_TIMER_LINKAGE e1;
};

/* 739 */
struct _MI_DECAY_TIMER_LINK
{
  $36F6D0CADEF32F931B69CB698223A717 u1;
};

/* 740 */
struct __declspec(align(4)) _MI_LDW_WORK_CONTEXT
{
  _WORK_QUEUE_ITEM WorkItem;
  _FILE_OBJECT *FileObject;
  int ErrorStatus;
  volatile int Active;
  unsigned __int8 FreeWhenDone;
};

/* 741 */
struct _MI_AVAILABLE_PAGE_WAIT_STATES
{
  _KEVENT Event;
  unsigned int EventSets;
};

/* 742 */
struct _MI_REBUILD_LARGE_PAGE_COUNTDOWN
{
  unsigned __int8 SecondsLeft;
  unsigned __int8 SecondsAssigned;
};

/* 743 */
struct _MI_REBUILD_LARGE_PAGES
{
  int Active;
  _MI_REBUILD_LARGE_PAGE_COUNTDOWN Timer[16][1];
  _WORK_QUEUE_ITEM WorkItem;
};

/* 744 */
struct _MI_PARTITION_PAGE_LISTS
{
  _MMPFNLIST *FreePagesByColor[2];
  _SLIST_HEADER *FreePageSlist[2];
  __declspec(align(128)) _MMPFNLIST ZeroedPageListHead;
  __declspec(align(128)) _MMPFNLIST FreePageListHead;
  __declspec(align(128)) _MMPFNLIST StandbyPageListHead;
  __declspec(align(128)) _MMPFNLIST StandbyPageListByPriority[8];
  __declspec(align(128)) _MMPFNLIST ModifiedPageListNoReservation;
  __declspec(align(128)) _MMPFNLIST ModifiedPageListByReservation[2];
  __declspec(align(128)) _MMPFNLIST MappedPageListHead[16];
  __declspec(align(128)) _MMPFNLIST BadPageListHead;
  _MMPFNLIST *PageLocationList[8];
  volatile unsigned int StandbyRepurposedByPriority[8];
  _KEVENT MappedPageListHeadEvent[16];
  _MI_DECAY_TIMER_LINK DecayClusterTimerHeads[4];
  unsigned int DecayHand;
  unsigned __int64 LastDecayHandUpdateTime;
  _MI_LDW_WORK_CONTEXT LastChanceLdwContext;
  __declspec(align(128)) unsigned int AvailableEventsLock;
  _MI_AVAILABLE_PAGE_WAIT_STATES AvailablePageWaitStates[2];
  unsigned int LowMemoryThreshold;
  unsigned int HighMemoryThreshold;
  __declspec(align(128)) volatile unsigned int TransitionPrivatePages;
  unsigned __int8 RebuildLargePagesInitialized;
  _MI_REBUILD_LARGE_PAGES RebuildLargePagesItem;
};

/* 745 */
struct _MI_PARTITION_COMMIT
{
  unsigned int PeakCommitment;
  unsigned int TotalCommitLimitMaximum;
  volatile int Popups[2];
  unsigned int LowCommitThreshold;
  unsigned int HighCommitThreshold;
  unsigned int EventLock;
  unsigned int SystemCommitReserve;
};

/* 746 */
struct _MI_PARTITION_ZEROING
{
  _KEVENT PageEvent;
  unsigned __int8 ThreadActive;
  int ZeroFreePageSlistMinimum;
  _MMPTE *FirstReservedZeroingPte;
  _WORK_QUEUE_ITEM RebalanceZeroFreeWorkItem;
};

/* 747 */
struct _MI_COMBINE_WORKITEM
{
  void *NextEntry;
  _WORK_QUEUE_ITEM WorkItem;
};

/* 748 */
struct _MI_COMBINE_PAGE_LISTHEAD
{
  _RTL_AVL_TREE Table;
  volatile int Lock;
};

/* 749 */
struct __declspec(align(8)) _MI_PAGE_COMBINE_STATISTICS
{
  unsigned __int64 PagesScannedActive;
  unsigned __int64 PagesScannedStandby;
  unsigned __int64 PagesCombined;
  unsigned int CombineScanCount;
  int CombinedBlocksInUse;
  int SumCombinedBlocksReferenceCount;
};

/* 750 */
struct _MI_PAGE_COMBINING_SUPPORT
{
  _MI_PARTITION *Partition;
  _LIST_ENTRY ArbitraryPfnMapList;
  _MI_COMBINE_WORKITEM FreeCombinePoolItem;
  unsigned int CombiningThreadCount;
  _LIST_ENTRY CombinePageFreeList;
  unsigned int CombineFreeListLock;
  _MI_COMBINE_PAGE_LISTHEAD CombinePageListHeads[16];
  _EX_PUSH_LOCK CombinePagesLock;
  _MMPTE *FirstCombinedPte;
  _MMPTE *LastCombinedPte;
  _MI_PAGE_COMBINE_STATISTICS PageCombineStats;
};

/* 751 */
struct _MMWORKING_SET_EXPANSION_HEAD
{
  _LIST_ENTRY ListHead;
};

/* 752 */
struct $D45091B8531F84AA3ACF3697F32ED8A3
{
  _MDL Mdl;
  unsigned int Page[1];
};

/* 753 */
struct __declspec(align(8)) _MI_PAGEFILE_TRACES
{
  int Status;
  unsigned __int16 PartitionId;
  unsigned __int8 Priority;
  unsigned __int8 IrpPriority;
  unsigned __int8 ReservationWrite;
  _LARGE_INTEGER CurrentTime;
  unsigned int AvailablePages;
  unsigned int ModifiedPagesTotal;
  unsigned int ModifiedPagefilePages;
  unsigned int ModifiedNoWritePages;
  unsigned int ModifiedPagefileNoReservationPages;
  $D45091B8531F84AA3ACF3697F32ED8A3 MdlHack;
};

/* 754 */
struct _MI_VISIBLE_PARTITION
{
  unsigned int LowestPhysicalPage;
  unsigned int HighestPhysicalPage;
  unsigned int NumberOfPhysicalPages;
  volatile unsigned int NumberOfPagingFiles;
  _MMPAGING_FILE *PagingFile[2];
  __declspec(align(128)) volatile unsigned int AvailablePages;
  __declspec(align(128)) volatile unsigned int ResidentAvailablePages;
  volatile unsigned int TotalCommittedPages;
  __declspec(align(128)) _MMPFNLIST ModifiedPageListHead;
  __declspec(align(128)) _MMPFNLIST ModifiedNoWritePageListHead;
  unsigned int TotalCommitLimit;
  unsigned int TotalPagesForPagingFile;
  unsigned int VadPhysicalPages;
  unsigned int ProcessLockedFilePages;
  unsigned int ChargeCommitmentFailures[4];
  volatile int PageFileTraceIndex;
  _MI_PAGEFILE_TRACES PageFileTraces[32];
};

/* 716 */
struct _MI_PARTITION
{
  _MI_PARTITION_CORE Core;
  _MI_PARTITION_MODWRITES Modwriter;
  _MI_PARTITION_STORES Store;
  _MI_PARTITION_SEGMENTS Segments;
  _MI_PARTITION_PAGE_LISTS PageLists;
  _MI_PARTITION_COMMIT Commit;
  _MI_PARTITION_ZEROING Zeroing;
  _MI_PAGE_COMBINING_SUPPORT PageCombine;
  void *WorkingSetControl;
  _MMWORKING_SET_EXPANSION_HEAD WorkingSetExpansionHead;
  _MI_VISIBLE_PARTITION Vp;
};

/* 571 */
struct $66DC0EC290AA6DCA6B62C030901B9071
{
  unsigned __int16 SubSystemMinorVersion;
  unsigned __int16 SubSystemMajorVersion;
};

/* 572 */
union $E7B8CA2CF9FC22E38B0DC258D43BAA98
{
  $66DC0EC290AA6DCA6B62C030901B9071 __s0;
  unsigned int SubSystemVersion;
};

/* 573 */
struct $3F04A6BA6C494E4FD8CB880D3817940D
{
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
};

/* 574 */
union $FBF0C53DE3EF7D0A882B31036FA8B124
{
  $3F04A6BA6C494E4FD8CB880D3817940D __s0;
  unsigned int OperatingSystemVersion;
};

/* 575 */
struct $F070E9AC67FA8BC49B011A7219020341
{
  unsigned __int8 ComPlusNativeReady : 1;
  unsigned __int8 ComPlusILOnly : 1;
  unsigned __int8 ImageDynamicallyRelocated : 1;
  unsigned __int8 ImageMappedFlat : 1;
  unsigned __int8 BaseBelow4gb : 1;
  unsigned __int8 ComPlusPrefer32bit : 1;
  unsigned __int8 Reserved : 2;
};

/* 576 */
union $D126AF7BA27DC25D483AF5082F42E599
{
  unsigned __int8 ImageFlags;
  $F070E9AC67FA8BC49B011A7219020341 __s1;
};

/* 577 */
struct _SECTION_IMAGE_INFORMATION
{
  void *TransferAddress;
  unsigned int ZeroBits;
  unsigned int MaximumStackSize;
  unsigned int CommittedStackSize;
  unsigned int SubSystemType;
  $E7B8CA2CF9FC22E38B0DC258D43BAA98 ___u5;
  $FBF0C53DE3EF7D0A882B31036FA8B124 ___u6;
  unsigned __int16 ImageCharacteristics;
  unsigned __int16 DllCharacteristics;
  unsigned __int16 Machine;
  unsigned __int8 ImageContainsCode;
  $D126AF7BA27DC25D483AF5082F42E599 ___u11;
  unsigned int LoaderFlags;
  unsigned int ImageFileSize;
  unsigned int CheckSum;
};

/* 578 */
struct _MI_EXTRA_IMAGE_INFORMATION
{
  unsigned int SizeOfHeaders;
  unsigned int SizeOfImage;
};

/* 579 */
struct _MI_SECTION_IMAGE_INFORMATION
{
  _SECTION_IMAGE_INFORMATION ExportedImageInformation;
  _MI_EXTRA_IMAGE_INFORMATION InternalImageInformation;
};

/* 597 */
struct _MI_FILE_EXTENTS_WAIT_BLOCK
{
  _MI_FILE_EXTENTS_WAIT_BLOCK *Next;
  _KGATE Gate;
};

/* 717 */
struct $1802CCCF572635275BFCE3D673D18E03
{
  unsigned __int32 ChannelsHotCold : 1;
  unsigned __int32 Spare : 31;
};

/* 718 */
struct _MI_NODE_INFORMATION
{
  unsigned int LargePageFreeCount[2];
  _LIST_ENTRY LargePages[2][2][1];
  unsigned int LargePagesCount[2][2][1];
  volatile unsigned int FreeCount[2];
  unsigned int TotalPages[1];
  unsigned int TotalPagesEntireNode;
  unsigned int MmShiftedColor;
  unsigned int Color;
  volatile unsigned int ChannelFreeCount[1][2];
  $1802CCCF572635275BFCE3D673D18E03 Flags;
  _EX_PUSH_LOCK NodeLock;
  unsigned __int8 ChannelStatus;
  unsigned __int8 ChannelOrdering[1];
  unsigned __int8 LockedChannelOrdering[1];
  unsigned __int8 PowerAttribute[1];
  unsigned int LargePageLock;
};

/* 719 */
struct _PHYSICAL_MEMORY_RUN
{
  unsigned int BasePage;
  unsigned int PageCount;
};

/* 720 */
struct _PHYSICAL_MEMORY_DESCRIPTOR
{
  unsigned int NumberOfRuns;
  unsigned int NumberOfPages;
  _PHYSICAL_MEMORY_RUN Run[1];
};

/* 831 */
struct _GENERIC_MAPPING
{
  unsigned int GenericRead;
  unsigned int GenericWrite;
  unsigned int GenericExecute;
  unsigned int GenericAll;
};

/* 832 */
struct _ACCESS_REASONS
{
  unsigned int Data[32];
};

/* 833 */
struct __declspec(align(4)) _AUX_ACCESS_DATA
{
  _PRIVILEGE_SET *PrivilegesUsed;
  _GENERIC_MAPPING GenericMapping;
  unsigned int AccessesToAudit;
  unsigned int MaximumAuditMask;
  _GUID TransactionId;
  void *NewSecurityDescriptor;
  void *ExistingSecurityDescriptor;
  void *ParentSecurityDescriptor;
  void (__cdecl *DeRefSecurityDescriptor)(void *, void *);
  void *SDLock;
  _ACCESS_REASONS AccessReasons;
  unsigned __int8 GenerateStagingEvents;
};

/* 834 */
struct _OBJECT_DUMP_CONTROL
{
  void *Stream;
  unsigned int Detail;
};

/* 835 */
struct $94D5DFDF047C618B4D0CC175FC9B4CA4
{
  unsigned __int8 CaseInsensitive : 1;
  unsigned __int8 UnnamedObjectsOnly : 1;
  unsigned __int8 UseDefaultObject : 1;
  unsigned __int8 SecurityRequired : 1;
  unsigned __int8 MaintainHandleCount : 1;
  unsigned __int8 MaintainTypeList : 1;
  unsigned __int8 SupportsObjectCallbacks : 1;
  unsigned __int8 CacheAligned : 1;
};

/* 836 */
union $B217FE8BD909E5D4BB10247AB5E470DD
{
  unsigned __int8 ObjectTypeFlags;
  $94D5DFDF047C618B4D0CC175FC9B4CA4 __s1;
};

/* 837 */
struct _OBJECT_TYPE_INITIALIZER
{
  unsigned __int16 Length;
  $B217FE8BD909E5D4BB10247AB5E470DD ___u1;
  unsigned int ObjectTypeCode;
  unsigned int InvalidAttributes;
  _GENERIC_MAPPING GenericMapping;
  unsigned int ValidAccessMask;
  unsigned int RetainAccess;
  _POOL_TYPE PoolType;
  unsigned int DefaultPagedPoolCharge;
  unsigned int DefaultNonPagedPoolCharge;
  void (__cdecl *DumpProcedure)(void *, _OBJECT_DUMP_CONTROL *);
  int (__cdecl *OpenProcedure)(_OB_OPEN_REASON, char, _EPROCESS *, void *, unsigned int *, unsigned int);
  void (__cdecl *CloseProcedure)(_EPROCESS *, void *, unsigned int, unsigned int);
  void (__cdecl *DeleteProcedure)(void *);
  int (__cdecl *ParseProcedure)(void *, void *, _ACCESS_STATE *, char, unsigned int, _UNICODE_STRING *, _UNICODE_STRING *, void *, _SECURITY_QUALITY_OF_SERVICE *, void **);
  int (__cdecl *SecurityProcedure)(void *, _SECURITY_OPERATION_CODE, unsigned int *, void *, unsigned int *, void **, _POOL_TYPE, _GENERIC_MAPPING *, char);
  int (__cdecl *QueryNameProcedure)(void *, unsigned __int8, _OBJECT_NAME_INFORMATION *, unsigned int, unsigned int *, char);
  unsigned __int8 (__cdecl *OkayToCloseProcedure)(_EPROCESS *, void *, void *, char);
  unsigned int WaitObjectFlagMask;
  unsigned __int16 WaitObjectFlagOffset;
  unsigned __int16 WaitObjectPointerOffset;
};

/* 838 */
struct _OBJECT_TYPE
{
  _LIST_ENTRY TypeList;
  _UNICODE_STRING Name;
  void *DefaultObject;
  unsigned __int8 Index;
  unsigned int TotalNumberOfObjects;
  unsigned int TotalNumberOfHandles;
  unsigned int HighWaterNumberOfObjects;
  unsigned int HighWaterNumberOfHandles;
  _OBJECT_TYPE_INITIALIZER TypeInfo;
  _EX_PUSH_LOCK TypeLock;
  unsigned int Key;
  _LIST_ENTRY CallbackList;
};

/* 839 */
struct _OBJECT_HANDLE_INFORMATION
{
  unsigned int HandleAttributes;
  unsigned int GrantedAccess;
};

/* 840 */
struct _ECP_LIST
{
  unsigned int Signature;
  unsigned int Flags;
  _LIST_ENTRY EcpList;
};

/* 841 */
struct _TXN_PARAMETER_BLOCK
{
  unsigned __int16 Length;
  unsigned __int16 TxFsContext;
  void *TransactionObject;
};

/* 842 */
struct _IO_DRIVER_CREATE_CONTEXT
{
  __int16 Size;
  _ECP_LIST *ExtraCreateParameter;
  void *DeviceObjectHint;
  _TXN_PARAMETER_BLOCK *TxnParameters;
};

/* 843 */
struct _IO_PRIORITY_INFO
{
  unsigned int Size;
  unsigned int ThreadPriority;
  unsigned int PagePriority;
  _IO_PRIORITY_HINT IoPriority;
};

/* 844 */
struct $0C5828C8BB62FF2F1199CF985F8D6E45
{
  unsigned __int8 Type;
  unsigned __int8 Reserved1;
  unsigned __int16 Reserved2;
};

/* 845 */
union $345FD0070D55ADA57C529CEEDBCE2A0A
{
  unsigned int Reserved;
  $0C5828C8BB62FF2F1199CF985F8D6E45 __s1;
};

/* 846 */
struct _EVENT_DATA_DESCRIPTOR
{
  unsigned __int64 Ptr;
  unsigned int Size;
  $345FD0070D55ADA57C529CEEDBCE2A0A ___u2;
};

/* 847 */
struct _EVENT_DESCRIPTOR
{
  unsigned __int16 Id;
  unsigned __int8 Version;
  unsigned __int8 Channel;
  unsigned __int8 Level;
  unsigned __int8 Opcode;
  unsigned __int16 Task;
  unsigned __int64 Keyword;
};

/* 848 */
struct $4DE972276DA75B0A8C3B01FB1799153A
{
  unsigned int KernelTime;
  unsigned int UserTime;
};

/* 849 */
union $6F5F6AA56E8646DCEE031D5EF88DF451
{
  $4DE972276DA75B0A8C3B01FB1799153A __s0;
  unsigned __int64 ProcessorTime;
};

/* 850 */
struct _EVENT_HEADER
{
  unsigned __int16 Size;
  unsigned __int16 HeaderType;
  unsigned __int16 Flags;
  unsigned __int16 EventProperty;
  unsigned int ThreadId;
  unsigned int ProcessId;
  _LARGE_INTEGER TimeStamp;
  _GUID ProviderId;
  _EVENT_DESCRIPTOR EventDescriptor;
  $6F5F6AA56E8646DCEE031D5EF88DF451 ___u9;
  _GUID ActivityId;
};

/* 851 */
struct $F7432ABE0171147119B3CC6D5D7B4734
{
  unsigned __int8 ProcessorNumber;
  unsigned __int8 Alignment;
};

/* 852 */
union $A1D3777CFF95FC9965D3A7882F09B0FA
{
  $F7432ABE0171147119B3CC6D5D7B4734 __s0;
  unsigned __int16 ProcessorIndex;
};

/* 853 */
struct _ETW_BUFFER_CONTEXT
{
  $A1D3777CFF95FC9965D3A7882F09B0FA ___u0;
  unsigned __int16 LoggerId;
};

/* 854 */
struct _EVENT_HEADER_EXTENDED_DATA_ITEM
{
  unsigned __int16 Reserved1;
  unsigned __int16 ExtType;
  unsigned __int16 Linkage : 1;
  unsigned __int16 Reserved2 : 15;
  unsigned __int16 DataSize;
  unsigned __int64 DataPtr;
};

/* 855 */
struct __declspec(align(8)) _EVENT_RECORD
{
  _EVENT_HEADER EventHeader;
  _ETW_BUFFER_CONTEXT BufferContext;
  unsigned __int16 ExtendedDataCount;
  unsigned __int16 UserDataLength;
  _EVENT_HEADER_EXTENDED_DATA_ITEM *ExtendedData;
  void *UserData;
  void *UserContext;
};

/* 856 */
struct _PERFINFO_GROUPMASK
{
  unsigned int Masks[8];
};

/* 857 */
struct $9A3075D787B3FA6390236B5128BA7861
{
  unsigned __int32 FilePointerIndex : 9;
  unsigned __int32 HardFault : 1;
  unsigned __int32 Image : 1;
  unsigned __int32 Spare0 : 1;
};

/* 858 */
struct $8085C7622DD7274482910D646E99F4FF
{
  unsigned __int32 FilePointerIndex : 9;
  unsigned __int32 HardFault : 1;
  unsigned __int32 Spare1 : 2;
};

/* 859 */
union _MM_PAGE_ACCESS_INFO_FLAGS
{
  $9A3075D787B3FA6390236B5128BA7861 File;
  $8085C7622DD7274482910D646E99F4FF Private;
};

/* 860 */
struct $0CE6B45D81B11721CA5B65C170C8A8B9
{
  _MM_PAGE_ACCESS_INFO_FLAGS Flags;
  void *PointerProtoPte;
};

/* 861 */
struct $F50256D08B92807F3D9ED0D06CCA2977
{
  unsigned __int32 DontUse0 : 3;
  unsigned __int32 Spare0 : 29;
};

/* 862 */
union $1B3748EA58199967C23EA800AECCB2BD
{
  $0CE6B45D81B11721CA5B65C170C8A8B9 __s0;
  unsigned __int64 FileOffset;
  void *VirtualAddress;
  $F50256D08B92807F3D9ED0D06CCA2977 __s3;
};

/* 863 */
struct _MM_PAGE_ACCESS_INFO
{
  $1B3748EA58199967C23EA800AECCB2BD ___u0;
};

/* 864 */
union $B199E3D3D43313813CA7041F0E5F3B08
{
  unsigned int EmptySequenceNumber;
  unsigned int CurrentFileIndex;
};

/* 865 */
union $116D41F4FA0652768057486F95B381CF
{
  unsigned __int64 EmptyTime;
  _MM_PAGE_ACCESS_INFO *TempEntry;
};

/* 866 */
union $09214DC699ED91C9B95D1A3A0C746FFF
{
  _MM_PAGE_ACCESS_INFO *PageEntry;
  unsigned int *PageFrameEntry;
};

/* 867 */
union $07FD636FB0559A60F5A3E212C791EB93
{
  unsigned int *FileEntry;
  unsigned int *LastPageFrameEntry;
};

/* 868 */
struct __declspec(align(8)) _MM_PAGE_ACCESS_INFO_HEADER
{
  _SINGLE_LIST_ENTRY Link;
  _MM_PAGE_ACCESS_TYPE Type;
  $B199E3D3D43313813CA7041F0E5F3B08 ___u2;
  unsigned __int64 CreateTime;
  $116D41F4FA0652768057486F95B381CF ___u4;
  $09214DC699ED91C9B95D1A3A0C746FFF ___u5;
  $07FD636FB0559A60F5A3E212C791EB93 ___u6;
  unsigned int *FirstFileEntry;
  _EPROCESS *Process;
  unsigned int SessionId;
};

/* 869 */
struct $C7D1ECE9C01D92286062F80E9BABF03D
{
  unsigned __int32 PreviousError : 1;
  unsigned __int32 Reserved1 : 1;
  unsigned __int32 HypervisorError : 1;
  unsigned __int32 Simulated : 1;
  unsigned __int32 PlatformPfaControl : 1;
  unsigned __int32 PlatformDirectedOffline : 1;
  unsigned __int32 Reserved2 : 26;
};

/* 870 */
union _WHEA_ERROR_PACKET_FLAGS
{
  $C7D1ECE9C01D92286062F80E9BABF03D __s0;
  unsigned int AsULONG;
};

/* 871 */
struct _WHEA_ERROR_PACKET_V2
{
  unsigned int Signature;
  unsigned int Version;
  unsigned int Length;
  _WHEA_ERROR_PACKET_FLAGS Flags;
  _WHEA_ERROR_TYPE ErrorType;
  _WHEA_ERROR_SEVERITY ErrorSeverity;
  unsigned int ErrorSourceId;
  _WHEA_ERROR_SOURCE_TYPE ErrorSourceType;
  _GUID NotifyType;
  unsigned __int64 Context;
  _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat;
  unsigned int Reserved1;
  unsigned int DataOffset;
  unsigned int DataLength;
  unsigned int PshedDataOffset;
  unsigned int PshedDataLength;
};

/* 872 */
struct $093851A5671CCE5957B5EAEAC4F608A2
{
  unsigned __int8 MinorRevision;
  unsigned __int8 MajorRevision;
};

/* 873 */
union _WHEA_REVISION
{
  $093851A5671CCE5957B5EAEAC4F608A2 __s0;
  unsigned __int16 AsUSHORT;
};

/* 874 */
struct $303239889594314C554CBA593C88201B
{
  unsigned __int32 PlatformId : 1;
  unsigned __int32 Timestamp : 1;
  unsigned __int32 PartitionId : 1;
  unsigned __int32 Reserved : 29;
};

/* 875 */
union _WHEA_ERROR_RECORD_HEADER_VALIDBITS
{
  $303239889594314C554CBA593C88201B __s0;
  unsigned int AsULONG;
};

/* 876 */
struct $0E69AD184FCFEB7998E3B897182A8ACD
{
  unsigned __int64 Seconds : 8;
  unsigned __int64 Minutes : 8;
  unsigned __int64 Hours : 8;
  unsigned __int64 Precise : 1;
  unsigned __int64 Reserved : 7;
  unsigned __int64 Day : 8;
  unsigned __int64 Month : 8;
  unsigned __int64 Year : 8;
  unsigned __int64 Century : 8;
};

/* 877 */
union _WHEA_TIMESTAMP
{
  $0E69AD184FCFEB7998E3B897182A8ACD __s0;
  _LARGE_INTEGER AsLARGE_INTEGER;
};

/* 878 */
struct $437784891AA9E873707BAF02F9C8B216
{
  unsigned __int32 Recovered : 1;
  unsigned __int32 PreviousError : 1;
  unsigned __int32 Simulated : 1;
  unsigned __int32 Reserved : 29;
};

/* 879 */
union _WHEA_ERROR_RECORD_HEADER_FLAGS
{
  $437784891AA9E873707BAF02F9C8B216 __s0;
  unsigned int AsULONG;
};

/* 880 */
struct $7AB0461A727F28B9D4873A511C9F9EFB
{
  unsigned __int64 Signature : 16;
  unsigned __int64 Length : 24;
  unsigned __int64 Identifier : 16;
  unsigned __int64 Attributes : 2;
  unsigned __int64 DoNotLog : 1;
  unsigned __int64 Reserved : 5;
};

/* 881 */
union _WHEA_PERSISTENCE_INFO
{
  $7AB0461A727F28B9D4873A511C9F9EFB __s0;
  unsigned __int64 AsULONGLONG;
};

/* 882 */
struct _WHEA_ERROR_RECORD_HEADER
{
  unsigned int Signature;
  _WHEA_REVISION Revision;
  __unaligned __declspec(align(1)) unsigned int SignatureEnd;
  unsigned __int16 SectionCount;
  _WHEA_ERROR_SEVERITY Severity;
  _WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits;
  unsigned int Length;
  _WHEA_TIMESTAMP Timestamp;
  _GUID PlatformId;
  _GUID PartitionId;
  _GUID CreatorId;
  _GUID NotifyType;
  unsigned __int64 RecordId;
  _WHEA_ERROR_RECORD_HEADER_FLAGS Flags;
  __unaligned __declspec(align(1)) _WHEA_PERSISTENCE_INFO PersistenceInfo;
  unsigned __int8 Reserved[12];
};

/* 883 */
struct $6811685E9C9CDE140128703EAAAFCDFF
{
  unsigned __int8 FRUId : 1;
  unsigned __int8 FRUText : 1;
  unsigned __int8 Reserved : 6;
};

/* 884 */
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS
{
  $6811685E9C9CDE140128703EAAAFCDFF __s0;
  unsigned __int8 AsUCHAR;
};

/* 885 */
struct $EBBD5017D96525D77178BA3E4B036D03
{
  unsigned __int32 Primary : 1;
  unsigned __int32 ContainmentWarning : 1;
  unsigned __int32 Reset : 1;
  unsigned __int32 ThresholdExceeded : 1;
  unsigned __int32 ResourceNotAvailable : 1;
  unsigned __int32 LatentError : 1;
  unsigned __int32 Reserved : 26;
};

/* 886 */
union _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS
{
  $EBBD5017D96525D77178BA3E4B036D03 __s0;
  unsigned int AsULONG;
};

/* 887 */
struct _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR
{
  unsigned int SectionOffset;
  unsigned int SectionLength;
  _WHEA_REVISION Revision;
  _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits;
  unsigned __int8 Reserved;
  _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags;
  _GUID SectionType;
  _GUID FRUId;
  _WHEA_ERROR_SEVERITY SectionSeverity;
  char FRUText[20];
};

/* 888 */
struct _WHEA_ERROR_RECORD
{
  _WHEA_ERROR_RECORD_HEADER Header;
  _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR SectionDescriptor[1];
};

/* 889 */
union $EB85F99015691E86D035651458B34354
{
  void *Oplock;
  void *ReservedForRemote;
};

/* 890 */
struct __declspec(align(8)) _FSRTL_ADVANCED_FCB_HEADER
{
  __int16 NodeTypeCode;
  __int16 NodeByteSize;
  unsigned __int8 Flags;
  unsigned __int8 IsFastIoPossible;
  unsigned __int8 Flags2;
  unsigned __int8 Reserved : 4;
  unsigned __int8 Version : 4;
  _ERESOURCE *Resource;
  _ERESOURCE *PagingIoResource;
  _LARGE_INTEGER AllocationSize;
  _LARGE_INTEGER FileSize;
  _LARGE_INTEGER ValidDataLength;
  _FAST_MUTEX *FastMutex;
  _LIST_ENTRY FilterContexts;
  _EX_PUSH_LOCK PushLock;
  void **FileContextSupportPointer;
  $EB85F99015691E86D035651458B34354 ___u16;
  void *ReservedContext;
};

/* 891 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 892 */
struct _EVENT_FILTER_DESCRIPTOR
{
  unsigned __int64 Ptr;
  unsigned int Size;
  unsigned int Type;
};

/* 893 */
struct __declspec(align(8)) _TlgProvider_t
{
  unsigned int LevelPlus1;
  const unsigned __int16 *ProviderMetadataPtr;
  unsigned __int64 KeywordAny;
  unsigned __int64 KeywordAll;
  unsigned __int64 RegHandle;
  void (__cdecl *EnableCallback)(const _GUID *, unsigned int, unsigned __int8, unsigned __int64, unsigned __int64, _EVENT_FILTER_DESCRIPTOR *, void *);
  void *CallbackContext;
  void (*AnnotationFunc)(...);
};

/* 894 */
struct __unaligned __declspec(align(1)) _TlgProviderMetadata_t
{
  unsigned __int8 Type;
  _GUID ProviderId;
  unsigned __int16 RemainingSize;
};

/* 895 */
struct $B8BE16A3D12D2052ACAC7615E36C3DCE
{
  unsigned __int32 Expanded : 1;
  unsigned __int32 Transitioning : 1;
  unsigned __int32 Pageable : 1;
};

/* 896 */
union $59C60C18CA8F25893553ADEABFAC7EDE
{
  $B8BE16A3D12D2052ACAC7615E36C3DCE __s0;
  unsigned int Value;
};

/* 897 */
struct _EX_PUSH_LOCK_AUTO_EXPAND_STATE
{
  $59C60C18CA8F25893553ADEABFAC7EDE ___u0;
};

/* 898 */
struct _EX_PUSH_LOCK_AUTO_EXPAND
{
  _EX_PUSH_LOCK LocalLock;
  _EX_PUSH_LOCK_AUTO_EXPAND_STATE State;
  unsigned int Stats;
};

/* 899 */
struct $11EE8C088C5C7365D4A3C22E26D1DB4A
{
  unsigned int GlobalTimeStamp;
  unsigned int PteIndex;
};

/* 900 */
union $5EFC6BD75BC798D5667AA4DB29C33855
{
  $11EE8C088C5C7365D4A3C22E26D1DB4A __s0;
  __int64 Long;
};

/* 901 */
struct _MI_CACHED_PTE
{
  $5EFC6BD75BC798D5667AA4DB29C33855 ___u0;
};

/* 902 */
struct __declspec(align(4)) _KLOCK_QUEUE_HANDLE
{
  _KSPIN_LOCK_QUEUE LockQueue;
  unsigned __int8 OldIrql;
};

/* 903 */
volatile struct __declspec(align(8)) _MI_CACHED_PTES
{
  _MI_CACHED_PTE Bins[8];
  int CachedPteCount;
};

/* 904 */
union $C5706BFCD8AACE86CE9A3EB475870395
{
  unsigned int SpinLock;
  _EX_PUSH_LOCK *GlobalPushLock;
};

/* 905 */
struct _MI_SYSTEM_PTE_TYPE
{
  _RTL_BITMAP Bitmap;
  _MMPTE *BasePte;
  unsigned int Flags;
  _MI_SYSTEM_VA_TYPE VaType;
  unsigned int *FailureCount;
  unsigned int PteFailures;
  $C5706BFCD8AACE86CE9A3EB475870395 ___u6;
  _MMSUPPORT *Vm;
  volatile unsigned int TotalSystemPtes;
  unsigned int Hint;
  volatile _MI_CACHED_PTES *CachedPtes;
  volatile unsigned int TotalFreeSystemPtes;
};

/* 911 */
union $4A2D504C7AD0F03CEB1C88EC9953CB38
{
  _RTL_BALANCED_NODE CloneNode;
  _MMCLONE_DESCRIPTOR *Next;
};

/* 906 */
struct _MMCLONE_DESCRIPTOR
{
  $4A2D504C7AD0F03CEB1C88EC9953CB38 ___u0;
  _MMCLONE_BLOCK *StartingCloneBlock;
  _MMCLONE_BLOCK *EndingCloneBlock;
  unsigned int NumberOfPtes;
  volatile unsigned int NumberOfReferences;
  _MMCLONE_HEADER *CloneHeader;
  unsigned int NonPagedPoolQuotaCharge;
  unsigned __int64 NestingLevel;
};

/* 907 */
struct _MI_CLONE_BLOCK_FLAGS
{
  unsigned __int32 ActualCloneCommit : 27;
  unsigned __int32 CloneProtection : 5;
};

/* 908 */
union $908B72467F4A1C2B4F0E6A44033593B8
{
  volatile unsigned int CloneCommitCount;
  _MI_CLONE_BLOCK_FLAGS u1;
};

/* 909 */
struct _MMCLONE_BLOCK
{
  _MMPTE ProtoPte;
  unsigned int PaddingFor16ByteAlignment;
  $908B72467F4A1C2B4F0E6A44033593B8 ___u2;
  volatile unsigned int CloneRefCount;
};

/* 910 */
struct _MMCLONE_HEADER
{
  unsigned int NumberOfPtes;
  volatile unsigned int NumberOfProcessReferences;
  _MMCLONE_BLOCK *ClonePtes;
};

/* 912 */
struct $8CC7F978D85DEA3230150DEAA2DFE633
{
  unsigned __int32 KeyLow : 28;
  unsigned __int32 KeyHigh : 4;
};

/* 913 */
union _MM_STORE_KEY
{
  $8CC7F978D85DEA3230150DEAA2DFE633 __s0;
  unsigned int EntireKey;
};

/* 914 */
struct tagSWITCH_CONTEXT_ATTRIBUTE
{
  unsigned __int64 ulContextUpdateCounter;
  int fAllowContextUpdate;
  int fEnableTrace;
  unsigned __int64 EtwHandle;
};

/* 915 */
struct tagSWITCH_CONTEXT_DATA
{
  unsigned __int64 ullOsMaxVersionTested;
  unsigned int ulTargetPlatform;
  unsigned __int64 ullContextMinimum;
  _GUID guPlatform;
  _GUID guMinPlatform;
  unsigned int ulContextSource;
  unsigned int ulElementCount;
  _GUID guElements[1];
};

/* 916 */
struct tagSWITCH_CONTEXT
{
  tagSWITCH_CONTEXT_ATTRIBUTE Attribute;
  tagSWITCH_CONTEXT_DATA Data;
};

/* 917 */
struct _CHILD_LIST
{
  unsigned int Count;
  unsigned int List;
};

/* 947 */
struct $AD43055CC8109C2B717ABA96D82BD064
{
  unsigned __int16 FirstLogFile : 3;
  unsigned __int16 SecondLogFile : 3;
  unsigned __int16 HeaderRecovered : 1;
  unsigned __int16 LegacyRecoveryIndicated : 1;
  unsigned __int16 RecoveryInformationReserved : 8;
};

/* 948 */
union $0833E4118A4A73F19E4BD3644438CB55
{
  $AD43055CC8109C2B717ABA96D82BD064 __s0;
  unsigned __int16 RecoveryInformation;
};

/* 939 */
struct __declspec(align(8)) _HVIEW_MAP_PIN_LOG_ENTRY
{
  unsigned int ViewOffset;
  unsigned __int8 Pinned;
  unsigned __int64 PinMask;
  _KTHREAD *Thread;
  void *Stack[6];
};

/* 940 */
struct _HVIEW_MAP_PIN_LOG
{
  unsigned int Next;
  unsigned int Size;
  _HVIEW_MAP_PIN_LOG_ENTRY Entries[16];
};

/* 941 */
struct _HVIEW_MAP
{
  unsigned int MappedLength;
  _EX_PUSH_LOCK Lock;
  _FILE_OBJECT *FileObject;
  _HVIEW_MAP_DIRECTORY *Directory;
  unsigned int PagesCharged;
  _HVIEW_MAP_PIN_LOG PinLog;
};

/* 945 */
struct _FREE_DISPLAY
{
  unsigned int RealVectorSize;
  unsigned int Hint;
  _RTL_BITMAP Display;
};

/* 946 */
struct _DUAL
{
  unsigned int Length;
  _HMAP_DIRECTORY *Map;
  _HMAP_TABLE *SmallDir;
  unsigned int Guard;
  _FREE_DISPLAY FreeDisplay[24];
  _LIST_ENTRY FreeBins;
  unsigned int FreeSummary;
};

/* 918 */
struct _HHIVE
{
  unsigned int Signature;
  _CELL_DATA *(__cdecl *GetCellRoutine)(_HHIVE *, unsigned int, _HV_GET_CELL_CONTEXT *);
  void (__cdecl *ReleaseCellRoutine)(_HHIVE *, _HV_GET_CELL_CONTEXT *);
  void *(__cdecl *Allocate)(unsigned int, unsigned __int8, unsigned int);
  void (__cdecl *Free)(void *, unsigned int);
  unsigned __int8 (__cdecl *FileWrite)(_HHIVE *, unsigned int, CMP_OFFSET_ARRAY *, unsigned int, unsigned int *, unsigned int);
  unsigned __int8 (__cdecl *FileRead)(_HHIVE *, unsigned int, unsigned int *, void *, unsigned int);
  void *HiveLoadFailure;
  _HBASE_BLOCK *BaseBlock;
  _RTL_BITMAP DirtyVector;
  unsigned int DirtyCount;
  unsigned int DirtyAlloc;
  _RTL_BITMAP UnreconciledVector;
  unsigned int UnreconciledCount;
  unsigned int BaseBlockAlloc;
  unsigned int Cluster;
  unsigned __int8 Flat : 1;
  unsigned __int8 ReadOnly : 1;
  unsigned __int8 SystemCacheBacked : 1;
  unsigned __int8 Reserved : 5;
  unsigned __int8 DirtyFlag;
  unsigned int HvBinHeadersUse;
  unsigned int HvFreeCellsUse;
  unsigned int HvUsedCellsUse;
  unsigned int CmUsedCellsUse;
  unsigned int HiveFlags;
  unsigned int CurrentLog;
  unsigned int CurrentLogSequence;
  unsigned int CurrentLogMinimumSequence;
  unsigned int CurrentLogOffset;
  unsigned int MinimumLogSequence;
  unsigned int LogFileSizeCap;
  unsigned __int8 LogDataPresent[2];
  unsigned __int8 PrimaryFileValid;
  unsigned __int8 BaseBlockDirty;
  _LARGE_INTEGER LastLogSwapTime;
  $0833E4118A4A73F19E4BD3644438CB55 ___u36;
  unsigned __int8 LogEntriesRecovered[2];
  unsigned int RefreshCount;
  unsigned int StorageTypeCount;
  unsigned int Version;
  _HVIEW_MAP ViewMap;
  _DUAL Storage[2];
};

/* 919 */
struct _CM_KEY_REFERENCE
{
  unsigned int KeyCell;
  _HHIVE *KeyHive;
};

/* 920 */
union $E14123D68C10F534B87E62019D419F96
{
  unsigned int SubKeyLists[2];
  _CM_KEY_REFERENCE ChildHiveReference;
};

/* 921 */
struct _CM_KEY_NODE
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  __unaligned __declspec(align(1)) _LARGE_INTEGER LastWriteTime;
  unsigned int AccessBits;
  unsigned int Parent;
  unsigned int SubKeyCounts[2];
  $E14123D68C10F534B87E62019D419F96 ___u6;
  _CHILD_LIST ValueList;
  unsigned int Security;
  unsigned int Class;
  unsigned __int32 MaxNameLen : 16;
  unsigned __int32 UserFlags : 4;
  unsigned __int32 VirtControlFlags : 4;
  unsigned __int32 Debug : 8;
  unsigned int MaxClassLen;
  unsigned int MaxValueNameLen;
  unsigned int MaxValueDataLen;
  unsigned int WorkVar;
  unsigned __int16 NameLength;
  unsigned __int16 ClassLength;
  wchar_t Name[1];
};

/* 922 */
struct __declspec(align(4)) _CM_KEY_VALUE
{
  unsigned __int16 Signature;
  unsigned __int16 NameLength;
  unsigned int DataLength;
  unsigned int Data;
  unsigned int Type;
  unsigned __int16 Flags;
  unsigned __int16 Spare;
  wchar_t Name[1];
};

/* 923 */
struct _SECURITY_DESCRIPTOR_RELATIVE
{
  unsigned __int8 Revision;
  unsigned __int8 Sbz1;
  unsigned __int16 Control;
  unsigned int Owner;
  unsigned int Group;
  unsigned int Sacl;
  unsigned int Dacl;
};

/* 924 */
struct _CM_KEY_SECURITY
{
  unsigned __int16 Signature;
  unsigned __int16 Reserved;
  unsigned int Flink;
  unsigned int Blink;
  unsigned int ReferenceCount;
  unsigned int DescriptorLength;
  _SECURITY_DESCRIPTOR_RELATIVE Descriptor;
};

/* 925 */
struct _CM_KEY_INDEX
{
  unsigned __int16 Signature;
  unsigned __int16 Count;
  unsigned int List[1];
};

/* 926 */
struct _CM_BIG_DATA
{
  unsigned __int16 Signature;
  unsigned __int16 Count;
  unsigned int List;
};

/* 927 */
union _u
{
  _CM_KEY_NODE KeyNode;
  _CM_KEY_VALUE KeyValue;
  _CM_KEY_SECURITY KeySecurity;
  _CM_KEY_INDEX KeyIndex;
  _CM_BIG_DATA ValueData;
  unsigned int KeyList[1];
  wchar_t KeyString[1];
};

/* 928 */
struct _CELL_DATA
{
  _u u;
};

/* 929 */
struct $43A20FC4FB2DD79C3296C4E2C94FC6FA
{
  unsigned __int32 IsInTempBin : 1;
  unsigned __int32 Reserved : 31;
};

/* 930 */
union $5AA2AB845ACCBF7101834A54BE72D52B
{
  unsigned int Cell;
  $43A20FC4FB2DD79C3296C4E2C94FC6FA __s1;
};

/* 931 */
struct _HV_GET_CELL_CONTEXT
{
  $5AA2AB845ACCBF7101834A54BE72D52B ___u0;
};

/* 932 */
struct CMP_OFFSET_ARRAY
{
  unsigned int FileOffset;
  void *DataBuffer;
  unsigned int DataLength;
};

/* 933 */
struct _HBASE_BLOCK
{
  unsigned int Signature;
  unsigned int Sequence1;
  unsigned int Sequence2;
  __unaligned __declspec(align(1)) _LARGE_INTEGER TimeStamp;
  unsigned int Major;
  unsigned int Minor;
  unsigned int Type;
  unsigned int Format;
  unsigned int RootCell;
  unsigned int Length;
  unsigned int Cluster;
  unsigned __int8 FileName[64];
  _GUID RmId;
  _GUID LogId;
  unsigned int Flags;
  _GUID TmId;
  unsigned int GuidSignature;
  unsigned __int64 LastReorganizeTime;
  unsigned int Reserved1[83];
  unsigned int CheckSum;
  unsigned int Reserved2[882];
  _GUID ThawTmId;
  _GUID ThawRmId;
  _GUID ThawLogId;
  unsigned int BootType;
  unsigned int BootRecover;
};

/* 938 */
struct _HVIEW_MAP_DIRECTORY
{
  _HVIEW_MAP_TABLE *Tables[128];
};

/* 944 */
struct _HMAP_DIRECTORY
{
  _HMAP_TABLE *Directory[1024];
};

/* 942 */
struct _HMAP_ENTRY
{
  unsigned int BlockOffset;
  unsigned int PermanentBinAddress;
  unsigned int TemporaryBinAddress;
  _EX_RUNDOWN_REF TemporaryBinRundown;
  unsigned int MemAlloc;
};

/* 943 */
struct _HMAP_TABLE
{
  _HMAP_ENTRY Table[512];
};

/* 934 */
struct $6A0861795A044689E8C7A894702CCE8E
{
  unsigned __int32 IsPinned : 1;
};

/* 935 */
union $60C52E767BB0C37C1BCE9101171559C5
{
  void *ViewStart;
  $6A0861795A044689E8C7A894702CCE8E __s1;
};

/* 936 */
struct __declspec(align(8)) _HVIEW_MAP_ENTRY
{
  $60C52E767BB0C37C1BCE9101171559C5 ___u0;
  void *Bcb;
  unsigned __int64 PinnedPages;
  unsigned int Size;
};

/* 937 */
struct _HVIEW_MAP_TABLE
{
  _HVIEW_MAP_ENTRY Entries[64];
};

/* 949 */
struct $9C5F9C32AC27756810AFCB82F3A8B0BB
{
  _CM_LOAD_FAILURE_TYPE Failure;
  int Status;
  unsigned int Point;
};

/* 950 */
struct $B7FAE79B6D34002C5ACCD05484405D65
{
  unsigned int Action;
  void *Handle;
  int Status;
};

/* 951 */
struct $9BED5EE5347931B4D4B21F76E93F2B13
{
  void *CheckStack;
};

/* 952 */
struct $02604705EC46E1C58349047B6AC8A3D0
{
  unsigned int Cell;
  _CELL_DATA *CellPoint;
  void *RootPoint;
  unsigned int Index;
};

/* 953 */
struct $6810C7F377D74F30E0B1CD24A4D39060
{
  _CELL_DATA *List;
  unsigned int Index;
  unsigned int Cell;
  _CELL_DATA *CellPoint;
};

/* 954 */
struct _HBIN
{
  unsigned int Signature;
  unsigned int FileOffset;
  unsigned int Size;
  unsigned int Reserved1[2];
  __unaligned __declspec(align(1)) _LARGE_INTEGER TimeStamp;
  unsigned int Spare;
};

/* 955 */
struct $4080172239B273E43E3184DDADFCDCDD
{
  unsigned int Space;
  unsigned int MapPoint;
  _HBIN *BinPoint;
};

/* 956 */
union $30E3AE16B085182D01AD8209A3CE9BA9
{
  unsigned int UserData;
  unsigned int Next;
};

/* 957 */
struct $59496497A1EC405A3A979B4ED54CF9D5
{
  $30E3AE16B085182D01AD8209A3CE9BA9 u;
};

/* 958 */
union $3DA6E96C2423029C64B1184D3930C4E2
{
  $59496497A1EC405A3A979B4ED54CF9D5 NewCell;
};

/* 959 */
struct _HCELL
{
  int Size;
  $3DA6E96C2423029C64B1184D3930C4E2 u;
};

/* 960 */
struct $293D83FB5DD1D4A644B681D1CBF27C77
{
  _HBIN *Bin;
  _HCELL *CellPoint;
};

/* 961 */
struct $6D4F98EF8BFF68BC7CABF153CCAB15DC
{
  unsigned int FileOffset;
};

/* 962 */
struct _HIVE_LOAD_FAILURE
{
  _HHIVE *Hive;
  unsigned int Index;
  unsigned int RecoverableIndex;
  $9C5F9C32AC27756810AFCB82F3A8B0BB Locations[8];
  $9C5F9C32AC27756810AFCB82F3A8B0BB RecoverableLocations[8];
  $B7FAE79B6D34002C5ACCD05484405D65 RegistryIO;
  $9BED5EE5347931B4D4B21F76E93F2B13 CheckRegistry2;
  $02604705EC46E1C58349047B6AC8A3D0 CheckKey;
  $6810C7F377D74F30E0B1CD24A4D39060 CheckValueList;
  $4080172239B273E43E3184DDADFCDCDD CheckHive;
  $4080172239B273E43E3184DDADFCDCDD CheckHive1;
  $293D83FB5DD1D4A644B681D1CBF27C77 CheckBin;
  $6D4F98EF8BFF68BC7CABF153CCAB15DC RecoverData;
};

/* 963 */
struct _PCW_COUNTER_DESCRIPTOR
{
  unsigned __int16 Id;
  unsigned __int16 StructIndex;
  unsigned __int16 Offset;
  unsigned __int16 Size;
};

/* 964 */
struct __declspec(align(8)) _PCW_COUNTER_INFORMATION
{
  unsigned __int64 CounterMask;
  const _UNICODE_STRING *InstanceMask;
};

/* 965 */
struct __declspec(align(8)) _PCW_MASK_INFORMATION
{
  unsigned __int64 CounterMask;
  const _UNICODE_STRING *InstanceMask;
  unsigned int InstanceId;
  unsigned __int8 CollectMultiple;
  struct _PCW_BUFFER *Buffer;
  _KEVENT *CancelEvent;
};

/* 966 */
union _PCW_CALLBACK_INFORMATION
{
  _PCW_COUNTER_INFORMATION AddCounter;
  _PCW_COUNTER_INFORMATION RemoveCounter;
  _PCW_MASK_INFORMATION EnumerateInstances;
  _PCW_MASK_INFORMATION CollectData;
};

/* 967 */
struct _PCW_REGISTRATION_INFORMATION
{
  unsigned int Version;
  const _UNICODE_STRING *Name;
  unsigned int CounterCount;
  _PCW_COUNTER_DESCRIPTOR *Counters;
  int (__cdecl *Callback)(_PCW_CALLBACK_TYPE, _PCW_CALLBACK_INFORMATION *, void *);
  void *CallbackContext;
};

/* 968 */
struct _PCW_PROCESSOR_INFO
{
  unsigned __int64 IdleTime;
  unsigned __int64 AvailableTime;
  unsigned __int64 UserTime;
  unsigned __int64 KernelTime;
  unsigned int Interrupts;
  unsigned __int64 DpcTime;
  unsigned __int64 InterruptTime;
  unsigned int ClockInterrupts;
  unsigned int DpcCount;
  unsigned int DpcRate;
  unsigned __int64 C1Time;
  unsigned __int64 C2Time;
  unsigned __int64 C3Time;
  unsigned __int64 C1Transitions;
  unsigned __int64 C2Transitions;
  unsigned __int64 C3Transitions;
  unsigned __int64 StallTime;
  unsigned int ParkingStatus;
  unsigned int CurrentFrequency;
  unsigned int PercentMaxFrequency;
  unsigned int StateFlags;
  unsigned int NominalThroughput;
  unsigned int ActiveThroughput;
  unsigned __int64 ScaledThroughput;
  unsigned __int64 ScaledKernelThroughput;
  unsigned __int64 AverageIdleTime;
  unsigned __int64 IdleBreakEvents;
  unsigned int PerformanceLimit;
  unsigned int PerformanceLimitFlags;
};

/* 969 */
struct _PCW_DATA
{
  const void *Data;
  unsigned int Size;
};

/* 970 */
struct _ETW_PERF_COUNTERS
{
  int TotalActiveSessions;
  int TotalBufferMemoryNonPagedPool;
  int TotalBufferMemoryPagedPool;
  int TotalGuidsEnabled;
  int TotalGuidsNotEnabled;
  int TotalGuidsPreEnabled;
};

/* 971 */
struct _ETW_SESSION_PERF_COUNTERS
{
  int BufferMemoryPagedPool;
  int BufferMemoryNonPagedPool;
  unsigned __int64 EventsLoggedCount;
  int EventsLost;
  int NumConsumers;
};

/* 972 */
struct _THERMAL_ZONE_COUNTERS
{
  unsigned int Temperature;
  unsigned int ThrottleLimit;
  unsigned int ThrottleReasons;
};

/* 973 */
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  _RTL_ACTIVATION_CONTEXT_STACK_FRAME *Previous;
  struct _ACTIVATION_CONTEXT *ActivationContext;
  unsigned int Flags;
};

/* 974 */
struct _ACTIVATION_CONTEXT_STACK
{
  _RTL_ACTIVATION_CONTEXT_STACK_FRAME *ActiveFrame;
  _LIST_ENTRY FrameListCache;
  unsigned int Flags;
  unsigned int NextCookieSequenceNumber;
  unsigned int StackId;
};

/* 975 */
struct _GDI_TEB_BATCH
{
  unsigned __int32 Offset : 31;
  unsigned __int32 HasRenderingCommand : 1;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 976 */
struct _TEB_ACTIVE_FRAME
{
  unsigned int Flags;
  _TEB_ACTIVE_FRAME *Previous;
  const _TEB_ACTIVE_FRAME_CONTEXT *Context;
};

/* 977 */
const struct _TEB_ACTIVE_FRAME_CONTEXT
{
  unsigned int Flags;
  const char *FrameName;
};

/* 978 */
struct $6BCCBD9B7EADC6FB619C96ACD0967B24
{
  unsigned __int8 ReservedPad0;
  unsigned __int8 ReservedPad1;
  unsigned __int8 ReservedPad2;
  unsigned __int8 IdealProcessor;
};

/* 979 */
union $6873B55AD4EA1195BB58E46C8715FE85
{
  _PROCESSOR_NUMBER CurrentIdealProcessor;
  unsigned int IdealProcessorValue;
  $6BCCBD9B7EADC6FB619C96ACD0967B24 __s2;
};

/* 980 */
struct $88D35C6E749BA8930BA8A8A22D5F60D0
{
  unsigned __int16 SpareCrossTebBits : 16;
};

/* 981 */
union $91BAE6CC5AEA9C67E7CBBE7EF9D48753
{
  volatile unsigned __int16 CrossTebFlags;
  $88D35C6E749BA8930BA8A8A22D5F60D0 __s1;
};

/* 982 */
struct $40C2999BA0C7DC4E033AE936C90D56A5
{
  unsigned __int16 SafeThunkCall : 1;
  unsigned __int16 InDebugPrint : 1;
  unsigned __int16 HasFiberData : 1;
  unsigned __int16 SkipThreadAttach : 1;
  unsigned __int16 WerInShipAssertCode : 1;
  unsigned __int16 RanProcessInit : 1;
  unsigned __int16 ClonedThread : 1;
  unsigned __int16 SuppressDebugMsg : 1;
  unsigned __int16 DisableUserStackWalk : 1;
  unsigned __int16 RtlExceptionAttached : 1;
  unsigned __int16 InitialThread : 1;
  unsigned __int16 SessionAware : 1;
  unsigned __int16 LoadOwner : 1;
  unsigned __int16 LoaderWorker : 1;
  unsigned __int16 SpareSameTebBits : 2;
};

/* 983 */
union $0FE208D385627469BE6891C0D1735EB1
{
  unsigned __int16 SameTebFlags;
  $40C2999BA0C7DC4E033AE936C90D56A5 __s1;
};

/* 984 */
struct _TEB
{
  _NT_TIB NtTib;
  void *EnvironmentPointer;
  _CLIENT_ID ClientId;
  void *ActiveRpcHandle;
  void *ThreadLocalStoragePointer;
  _PEB *ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  void *CsrClientThread;
  void *Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  void *WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  void *ReservedForDebuggerInstrumentation[16];
  void *SystemReserved1[38];
  int ExceptionCode;
  _ACTIVATION_CONTEXT_STACK *ActivationContextStackPointer;
  unsigned int InstrumentationCallbackSp;
  unsigned int InstrumentationCallbackPreviousPc;
  unsigned int InstrumentationCallbackPreviousSp;
  unsigned __int8 InstrumentationCallbackDisabled;
  unsigned __int8 SpareBytes[23];
  unsigned int TxFsContext;
  _GDI_TEB_BATCH GdiTebBatch;
  _CLIENT_ID RealClientId;
  void *GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  void *GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  void *glDispatchTable[233];
  unsigned int glReserved1[29];
  void *glReserved2;
  void *glSectionInfo;
  void *glSection;
  void *glTable;
  void *glCurrentRC;
  void *glContext;
  unsigned int LastStatusValue;
  _UNICODE_STRING StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  void *DeallocationStack;
  void *TlsSlots[64];
  _LIST_ENTRY TlsLinks;
  void *Vdm;
  void *ReservedForNtRpc;
  void *DbgSsReserved[2];
  unsigned int HardErrorMode;
  void *Instrumentation[9];
  _GUID ActivityId;
  void *SubProcessTag;
  void *PerflibData;
  void *EtwTraceData;
  void *WinSockData;
  unsigned int GdiBatchCount;
  $6873B55AD4EA1195BB58E46C8715FE85 ___u57;
  unsigned int GuaranteedStackBytes;
  void *ReservedForPerf;
  void *ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  void *SavedPriorityState;
  unsigned int ReservedForCodeCoverage;
  void *ThreadPoolData;
  void **TlsExpansionSlots;
  unsigned int MuiGeneration;
  unsigned int IsImpersonating;
  void *NlsCache;
  void *pShimData;
  unsigned __int16 HeapVirtualAffinity;
  unsigned __int16 LowFragHeapDataSlot;
  void *CurrentTransactionHandle;
  _TEB_ACTIVE_FRAME *ActiveFrame;
  void *FlsData;
  void *PreferredLanguages;
  void *UserPrefLanguages;
  void *MergedPrefLanguages;
  unsigned int MuiImpersonation;
  $91BAE6CC5AEA9C67E7CBBE7EF9D48753 ___u79;
  $0FE208D385627469BE6891C0D1735EB1 ___u80;
  void *TxnScopeEnterCallback;
  void *TxnScopeExitCallback;
  void *TxnScopeContext;
  unsigned int LockCount;
  int WowTebOffset;
  void *ResourceRetValue;
  void *ReservedForWdf;
  unsigned __int64 ReservedForCrt;
  _GUID EffectiveContainerId;
};

/* 985 */
union $E38888FFFF2E8047BDBD55C921E86469
{
  unsigned int FiberData;
  unsigned int Version;
};

/* 986 */
struct _NT_TIB32
{
  unsigned int ExceptionList;
  unsigned int StackBase;
  unsigned int StackLimit;
  unsigned int SubSystemTib;
  $E38888FFFF2E8047BDBD55C921E86469 ___u4;
  unsigned int ArbitraryUserPointer;
  unsigned int Self;
};

/* 987 */
struct _CLIENT_ID32
{
  unsigned int UniqueProcess;
  unsigned int UniqueThread;
};

/* 988 */
struct _GDI_TEB_BATCH32
{
  unsigned __int32 Offset : 31;
  unsigned __int32 HasRenderingCommand : 1;
  unsigned int HDC;
  unsigned int Buffer[310];
};

/* 989 */
struct _STRING32
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned int Buffer;
};

/* 990 */
struct _TEB32
{
  _NT_TIB32 NtTib;
  unsigned int EnvironmentPointer;
  _CLIENT_ID32 ClientId;
  unsigned int ActiveRpcHandle;
  unsigned int ThreadLocalStoragePointer;
  unsigned int ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  unsigned int CsrClientThread;
  unsigned int Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  unsigned int WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  unsigned int ReservedForDebuggerInstrumentation[16];
  unsigned int SystemReserved1[38];
  int ExceptionCode;
  unsigned int ActivationContextStackPointer;
  unsigned int InstrumentationCallbackSp;
  unsigned int InstrumentationCallbackPreviousPc;
  unsigned int InstrumentationCallbackPreviousSp;
  unsigned __int8 InstrumentationCallbackDisabled;
  unsigned __int8 SpareBytes[23];
  unsigned int TxFsContext;
  _GDI_TEB_BATCH32 GdiTebBatch;
  _CLIENT_ID32 RealClientId;
  unsigned int GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  unsigned int GdiThreadLocalInfo;
  unsigned int Win32ClientInfo[62];
  unsigned int glDispatchTable[233];
  unsigned int glReserved1[29];
  unsigned int glReserved2;
  unsigned int glSectionInfo;
  unsigned int glSection;
  unsigned int glTable;
  unsigned int glCurrentRC;
  unsigned int glContext;
  unsigned int LastStatusValue;
  _STRING32 StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  unsigned int DeallocationStack;
  unsigned int TlsSlots[64];
  LIST_ENTRY32 TlsLinks;
  unsigned int Vdm;
  unsigned int ReservedForNtRpc;
  unsigned int DbgSsReserved[2];
  unsigned int HardErrorMode;
  unsigned int Instrumentation[9];
  _GUID ActivityId;
  unsigned int SubProcessTag;
  unsigned int PerflibData;
  unsigned int EtwTraceData;
  unsigned int WinSockData;
  unsigned int GdiBatchCount;
  $6873B55AD4EA1195BB58E46C8715FE85 ___u57;
  unsigned int GuaranteedStackBytes;
  unsigned int ReservedForPerf;
  unsigned int ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  unsigned int SavedPriorityState;
  unsigned int ReservedForCodeCoverage;
  unsigned int ThreadPoolData;
  unsigned int TlsExpansionSlots;
  unsigned int MuiGeneration;
  unsigned int IsImpersonating;
  unsigned int NlsCache;
  unsigned int pShimData;
  unsigned __int16 HeapVirtualAffinity;
  unsigned __int16 LowFragHeapDataSlot;
  unsigned int CurrentTransactionHandle;
  unsigned int ActiveFrame;
  unsigned int FlsData;
  unsigned int PreferredLanguages;
  unsigned int UserPrefLanguages;
  unsigned int MergedPrefLanguages;
  unsigned int MuiImpersonation;
  $91BAE6CC5AEA9C67E7CBBE7EF9D48753 ___u79;
  $0FE208D385627469BE6891C0D1735EB1 ___u80;
  unsigned int TxnScopeEnterCallback;
  unsigned int TxnScopeExitCallback;
  unsigned int TxnScopeContext;
  unsigned int LockCount;
  int WowTebOffset;
  unsigned int ResourceRetValue;
  unsigned int ReservedForWdf;
  unsigned __int64 ReservedForCrt;
  _GUID EffectiveContainerId;
};

/* 991 */
union $8662F439D215AAEDBB1F787C8B649648
{
  unsigned __int64 FiberData;
  unsigned int Version;
};

/* 992 */
struct _NT_TIB64
{
  unsigned __int64 ExceptionList;
  unsigned __int64 StackBase;
  unsigned __int64 StackLimit;
  unsigned __int64 SubSystemTib;
  $8662F439D215AAEDBB1F787C8B649648 ___u4;
  unsigned __int64 ArbitraryUserPointer;
  unsigned __int64 Self;
};

/* 993 */
struct _CLIENT_ID64
{
  unsigned __int64 UniqueProcess;
  unsigned __int64 UniqueThread;
};

/* 994 */
struct _GDI_TEB_BATCH64
{
  unsigned __int32 Offset : 31;
  unsigned __int32 HasRenderingCommand : 1;
  unsigned __int64 HDC;
  unsigned int Buffer[310];
};

/* 995 */
struct _STRING64
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int64 Buffer;
};

/* 996 */
struct _TEB64
{
  _NT_TIB64 NtTib;
  unsigned __int64 EnvironmentPointer;
  _CLIENT_ID64 ClientId;
  unsigned __int64 ActiveRpcHandle;
  unsigned __int64 ThreadLocalStoragePointer;
  unsigned __int64 ProcessEnvironmentBlock;
  unsigned int LastErrorValue;
  unsigned int CountOfOwnedCriticalSections;
  unsigned __int64 CsrClientThread;
  unsigned __int64 Win32ThreadInfo;
  unsigned int User32Reserved[26];
  unsigned int UserReserved[5];
  unsigned __int64 WOW32Reserved;
  unsigned int CurrentLocale;
  unsigned int FpSoftwareStatusRegister;
  unsigned __int64 ReservedForDebuggerInstrumentation[16];
  unsigned __int64 SystemReserved1[38];
  int ExceptionCode;
  unsigned __int8 Padding0[4];
  unsigned __int64 ActivationContextStackPointer;
  unsigned __int64 InstrumentationCallbackSp;
  unsigned __int64 InstrumentationCallbackPreviousPc;
  unsigned __int64 InstrumentationCallbackPreviousSp;
  unsigned int TxFsContext;
  unsigned __int8 InstrumentationCallbackDisabled;
  unsigned __int8 Padding1[3];
  _GDI_TEB_BATCH64 GdiTebBatch;
  _CLIENT_ID64 RealClientId;
  unsigned __int64 GdiCachedProcessHandle;
  unsigned int GdiClientPID;
  unsigned int GdiClientTID;
  unsigned __int64 GdiThreadLocalInfo;
  unsigned __int64 Win32ClientInfo[62];
  unsigned __int64 glDispatchTable[233];
  unsigned __int64 glReserved1[29];
  unsigned __int64 glReserved2;
  unsigned __int64 glSectionInfo;
  unsigned __int64 glSection;
  unsigned __int64 glTable;
  unsigned __int64 glCurrentRC;
  unsigned __int64 glContext;
  unsigned int LastStatusValue;
  unsigned __int8 Padding2[4];
  _STRING64 StaticUnicodeString;
  wchar_t StaticUnicodeBuffer[261];
  unsigned __int8 Padding3[6];
  unsigned __int64 DeallocationStack;
  unsigned __int64 TlsSlots[64];
  LIST_ENTRY64 TlsLinks;
  unsigned __int64 Vdm;
  unsigned __int64 ReservedForNtRpc;
  unsigned __int64 DbgSsReserved[2];
  unsigned int HardErrorMode;
  unsigned __int8 Padding4[4];
  unsigned __int64 Instrumentation[11];
  _GUID ActivityId;
  unsigned __int64 SubProcessTag;
  unsigned __int64 PerflibData;
  unsigned __int64 EtwTraceData;
  unsigned __int64 WinSockData;
  unsigned int GdiBatchCount;
  $6873B55AD4EA1195BB58E46C8715FE85 ___u61;
  unsigned int GuaranteedStackBytes;
  unsigned __int8 Padding5[4];
  unsigned __int64 ReservedForPerf;
  unsigned __int64 ReservedForOle;
  unsigned int WaitingOnLoaderLock;
  unsigned __int8 Padding6[4];
  unsigned __int64 SavedPriorityState;
  unsigned __int64 ReservedForCodeCoverage;
  unsigned __int64 ThreadPoolData;
  unsigned __int64 TlsExpansionSlots;
  unsigned __int64 DeallocationBStore;
  unsigned __int64 BStoreLimit;
  unsigned int MuiGeneration;
  unsigned int IsImpersonating;
  unsigned __int64 NlsCache;
  unsigned __int64 pShimData;
  unsigned __int16 HeapVirtualAffinity;
  unsigned __int16 LowFragHeapDataSlot;
  unsigned __int8 Padding7[4];
  unsigned __int64 CurrentTransactionHandle;
  unsigned __int64 ActiveFrame;
  unsigned __int64 FlsData;
  unsigned __int64 PreferredLanguages;
  unsigned __int64 UserPrefLanguages;
  unsigned __int64 MergedPrefLanguages;
  unsigned int MuiImpersonation;
  $91BAE6CC5AEA9C67E7CBBE7EF9D48753 ___u88;
  $0FE208D385627469BE6891C0D1735EB1 ___u89;
  unsigned __int64 TxnScopeEnterCallback;
  unsigned __int64 TxnScopeExitCallback;
  unsigned __int64 TxnScopeContext;
  unsigned int LockCount;
  int WowTebOffset;
  unsigned __int64 ResourceRetValue;
  unsigned __int64 ReservedForWdf;
  unsigned __int64 ReservedForCrt;
  _GUID EffectiveContainerId;
};

/* 997 */
struct $01D4FD88065DFE281322D11AF6A72E2B
{
  unsigned __int64 AccessVpRunTimeReg : 1;
  unsigned __int64 AccessPartitionReferenceCounter : 1;
  unsigned __int64 AccessSynicRegs : 1;
  unsigned __int64 AccessSyntheticTimerRegs : 1;
  unsigned __int64 AccessIntrCtrlRegs : 1;
  unsigned __int64 AccessHypercallMsrs : 1;
  unsigned __int64 AccessVpIndex : 1;
  unsigned __int64 AccessResetReg : 1;
  unsigned __int64 AccessStatsReg : 1;
  unsigned __int64 AccessPartitionReferenceTsc : 1;
  unsigned __int64 AccessGuestIdleReg : 1;
  unsigned __int64 AccessFrequencyRegs : 1;
  unsigned __int64 AccessDebugRegs : 1;
  unsigned __int64 Reserved1 : 19;
  unsigned __int64 CreatePartitions : 1;
  unsigned __int64 AccessPartitionId : 1;
  unsigned __int64 AccessMemoryPool : 1;
  unsigned __int64 AdjustMessageBuffers : 1;
  unsigned __int64 PostMessages : 1;
  unsigned __int64 SignalEvents : 1;
  unsigned __int64 CreatePort : 1;
  unsigned __int64 ConnectPort : 1;
  unsigned __int64 AccessStats : 1;
  unsigned __int64 Reserved2 : 2;
  unsigned __int64 Debugging : 1;
  unsigned __int64 CpuManagement : 1;
  unsigned __int64 ConfigureProfiler : 1;
  unsigned __int64 AccessVpExitTracing : 1;
  unsigned __int64 EnableExtendedGvaRangesForFlushVirtualAddressList : 1;
  unsigned __int64 AccessVsm : 1;
  unsigned __int64 AccessVpRegisters : 1;
  unsigned __int64 UnusedBit : 1;
  unsigned __int64 FastHypercallOutput : 1;
  unsigned __int64 EnableExtendedHypercalls : 1;
  unsigned __int64 StartVirtualProcessor : 1;
  unsigned __int64 Reserved3 : 10;
};

/* 998 */
union _HV_PARTITION_PRIVILEGE_MASK
{
  unsigned __int64 AsUINT64;
  $01D4FD88065DFE281322D11AF6A72E2B __s1;
};

/* 999 */
struct __declspec(align(8)) _HV_ARM64_HYPERVISOR_FEATURES
{
  _HV_PARTITION_PRIVILEGE_MASK PartitionPrivileges;
  unsigned __int32 GuestDebuggingAvailable : 1;
  unsigned __int32 PerformanceMonitorsAvailable : 1;
  unsigned __int32 CpuDynamicPartitioningAvailable : 1;
  unsigned __int32 GuestIdleAvailable : 1;
  unsigned __int32 HypervisorSleepStateSupportAvailable : 1;
  unsigned __int32 NumaDistanceQueryAvailable : 1;
  unsigned __int32 FrequencyRegsAvailable : 1;
  unsigned __int32 SyntheticMachineCheckAvailable : 1;
  unsigned __int32 GuestCrashRegsAvailable : 1;
  unsigned __int32 DebugRegsAvailable : 1;
  unsigned __int32 DisableHypervisorAvailable : 1;
  unsigned __int32 ExtendedGvaRangesForFlushVirtualAddressListAvailable : 1;
  unsigned __int32 SintPollingModeAvailable : 1;
  unsigned __int32 Reserved1 : 19;
};

/* 1003 */
struct _PO_DEVICE_NOTIFY
{
  _LIST_ENTRY Link;
  _LIST_ENTRY PowerChildren;
  _LIST_ENTRY PowerParents;
  _DEVICE_OBJECT *TargetDevice;
  unsigned __int8 OrderLevel;
  _DEVICE_OBJECT *DeviceObject;
  unsigned __int16 *DeviceName;
  unsigned __int16 *DriverName;
  unsigned int ChildCount;
  unsigned int ActiveChild;
  unsigned int ParentCount;
  unsigned int ActiveParent;
};

/* 1036 */
struct _PO_IRP_QUEUE
{
  _IRP *CurrentIrp;
  _IRP *PendingIrpList;
};

/* 1037 */
struct _PO_IRP_MANAGER
{
  _PO_IRP_QUEUE DeviceIrpQueue;
  _PO_IRP_QUEUE SystemIrpQueue;
};

/* 1039 */
union $C3F3BC4E94F6594BB2CBA48AF2A13D00
{
  _DEVICE_NODE *LegacyDeviceNode;
  _DEVICE_RELATIONS *PendingDeviceRelations;
  void *Information;
};

/* 1040 */
union $DCDEFA3FE7C7C0943C1BFD9C87EC94E8
{
  _DEVICE_NODE *NextResourceDeviceNode;
};

/* 1041 */
struct $B03903404A81F1469121B6785EB74BAB
{
  PROFILE_STATUS DockStatus;
  _LIST_ENTRY ListEntry;
  unsigned __int16 *SerialNumber;
};

/* 1000 */
struct _DEVICE_NODE
{
  _DEVICE_NODE *Sibling;
  _DEVICE_NODE *Child;
  _DEVICE_NODE *Parent;
  _DEVICE_NODE *LastChild;
  _DEVICE_OBJECT *PhysicalDeviceObject;
  _UNICODE_STRING InstancePath;
  _UNICODE_STRING ServiceName;
  _IRP *PendingIrp;
  _POP_FX_DEVICE *FxDevice;
  volatile int FxDeviceLock;
  _KEVENT FxRemoveEvent;
  volatile int FxActivationCount;
  volatile int FxSleepCount;
  _POP_FX_PLUGIN *Plugin;
  unsigned int Level;
  _POWER_STATE CurrentPowerState;
  _PO_DEVICE_NOTIFY Notify;
  _PO_IRP_MANAGER PoIrpManager;
  _UNICODE_STRING UniqueId;
  unsigned int PowerFlags;
  _PNP_DEVNODE_STATE State;
  _PNP_DEVNODE_STATE PreviousState;
  _PNP_DEVNODE_STATE StateHistory[20];
  unsigned int StateHistoryEntry;
  int CompletionStatus;
  unsigned int Flags;
  unsigned int UserFlags;
  unsigned int Problem;
  int ProblemStatus;
  _CM_RESOURCE_LIST *ResourceList;
  _CM_RESOURCE_LIST *ResourceListTranslated;
  _DEVICE_OBJECT *DuplicatePDO;
  _IO_RESOURCE_REQUIREMENTS_LIST *ResourceRequirements;
  _INTERFACE_TYPE InterfaceType;
  unsigned int BusNumber;
  _INTERFACE_TYPE ChildInterfaceType;
  unsigned int ChildBusNumber;
  unsigned __int16 ChildBusTypeIndex;
  unsigned __int8 RemovalPolicy;
  unsigned __int8 HardwareRemovalPolicy;
  _LIST_ENTRY TargetDeviceNotify;
  _LIST_ENTRY DeviceArbiterList;
  _LIST_ENTRY DeviceTranslatorList;
  unsigned __int16 NoTranslatorMask;
  unsigned __int16 QueryTranslatorMask;
  unsigned __int16 NoArbiterMask;
  unsigned __int16 QueryArbiterMask;
  $C3F3BC4E94F6594BB2CBA48AF2A13D00 OverUsed1;
  $DCDEFA3FE7C7C0943C1BFD9C87EC94E8 OverUsed2;
  _CM_RESOURCE_LIST *BootResources;
  _CM_RESOURCE_LIST *BootResourcesTranslated;
  unsigned int CapabilityFlags;
  $B03903404A81F1469121B6785EB74BAB DockInfo;
  unsigned int DisableableDepends;
  _LIST_ENTRY PendedSetInterfaceState;
  _LIST_ENTRY LegacyBusListEntry;
  unsigned int DriverUnloadRetryCount;
  _DEVICE_NODE *PreviousParent;
  int DeletedChildren;
  unsigned int NumaNodeIndex;
  _GUID ContainerID;
  unsigned __int8 OverrideFlags;
  unsigned int DeviceIdsHash;
  unsigned __int8 RequiresUnloadedDriver;
  _PENDING_RELATIONS_LIST_ENTRY *PendingEjectRelations;
  unsigned int StateFlags;
};

/* 1007 */
struct $BF01A2388BF57D4C31A65726CFD79900
{
  unsigned __int32 SystemTransition : 1;
  unsigned __int32 PepD0Notify : 1;
  unsigned __int32 IdleTimerOn : 1;
  unsigned __int32 IgnoreIdleTimeout : 1;
  unsigned __int32 IrpInUse : 1;
  unsigned __int32 IrpPending : 1;
  unsigned __int32 DPNRDeviceNotified : 1;
  unsigned __int32 DPNRReceivedFromPep : 1;
  unsigned __int32 IrpFirstPendingIndex : 1;
  unsigned __int32 IrpLastPendingIndex : 1;
  unsigned __int32 Reserved : 22;
};

/* 1008 */
volatile union _POP_FX_DEVICE_STATUS
{
  int Value;
  $BF01A2388BF57D4C31A65726CFD79900 __s1;
};

/* 1013 */
struct _POP_FX_DRIVER_CALLBACKS
{
  void (__cdecl *ComponentActive)(void *, unsigned int);
  void (__cdecl *ComponentIdle)(void *, unsigned int);
  void (__cdecl *ComponentIdleState)(void *, unsigned int, unsigned int);
  void (__cdecl *DevicePowerRequired)(void *);
  void (__cdecl *DevicePowerNotRequired)(void *);
  int (__cdecl *PowerControl)(void *, const _GUID *, void *, unsigned int, void *, unsigned int, unsigned int *);
  void (__cdecl *ComponentCriticalTransition)(void *, unsigned int, unsigned __int8);
};

/* 1014 */
struct _IO_REMOVE_LOCK_COMMON_BLOCK
{
  unsigned __int8 Removed;
  unsigned __int8 Reserved[3];
  int IoCount;
  _KEVENT RemoveEvent;
};

/* 1015 */
struct _IO_REMOVE_LOCK
{
  _IO_REMOVE_LOCK_COMMON_BLOCK Common;
};

/* 1010 */
struct _POP_FX_WORK_ORDER
{
  _WORK_QUEUE_ITEM WorkItem;
  int WorkCount;
  void *Context;
  _POP_FX_WORK_ORDER_WATCHDOG_INFO *WatchdogTimerInfo;
};

/* 1017 */
struct _POP_FX_ACCOUNTING
{
  unsigned int Lock;
  unsigned __int8 Active;
  unsigned int DripsRequiredState;
  int Level;
  __int64 ActiveStamp;
  unsigned __int64 CsActiveTime;
  __int64 CriticalActiveTime;
};

/* 1001 */
struct __declspec(align(8)) _POP_FX_DEVICE
{
  _LIST_ENTRY Link;
  _IRP *Irp;
  _POP_IRP_DATA *IrpData;
  volatile _POP_FX_DEVICE_STATUS Status;
  volatile int PowerReqCall;
  volatile int PowerNotReqCall;
  _DEVICE_NODE *DevNode;
  PEPHANDLE__ *DpmContext;
  _POP_FX_PLUGIN *Plugin;
  PEPHANDLE__ *PluginHandle;
  _POP_FX_PLUGIN *AcpiPlugin;
  PEPHANDLE__ *AcpiPluginHandle;
  _DEVICE_OBJECT *DeviceObject;
  _DEVICE_OBJECT *TargetDevice;
  _POP_FX_DRIVER_CALLBACKS Callbacks;
  void *DriverContext;
  _LIST_ENTRY AcpiLink;
  _UNICODE_STRING DeviceId;
  _IO_REMOVE_LOCK RemoveLock;
  _IO_REMOVE_LOCK AcpiRemoveLock;
  _POP_FX_WORK_ORDER WorkOrder;
  unsigned int IdleLock;
  _KTIMER IdleTimer;
  _KDPC IdleDpc;
  unsigned __int64 IdleTimeout;
  unsigned __int64 IdleStamp;
  _DEVICE_OBJECT *NextIrpDeviceObject[2];
  _POWER_STATE NextIrpPowerState[2];
  void (__cdecl *NextIrpCallerCompletion[2])(_DEVICE_OBJECT *, unsigned __int8, _POWER_STATE, void *, _IO_STATUS_BLOCK *);
  void *NextIrpCallerContext[2];
  _KEVENT IrpCompleteEvent;
  unsigned __int8 (__cdecl *PowerOnDumpDeviceCallback)(_PEP_CRASHDUMP_INFORMATION *);
  _POP_FX_ACCOUNTING Accounting;
  volatile unsigned int Flags;
  unsigned int ComponentCount;
  _POP_FX_COMPONENT **Components;
};

/* 1012 */
struct __declspec(align(8)) _POP_FX_PLUGIN
{
  _LIST_ENTRY Link;
  unsigned int Version;
  unsigned __int64 Flags;
  _KQUEUE WorkQueue;
  unsigned __int8 (__cdecl *AcceptDeviceNotification)(unsigned int, void *);
  unsigned __int8 (__cdecl *AcceptProcessorNotification)(PEPHANDLE__ *, unsigned int, void *);
  unsigned __int8 (__cdecl *AcceptAcpiNotification)(unsigned int, void *);
  unsigned int WorkOrderCount;
  _POP_FX_WORK_ORDER WorkOrders[1];
};

/* 1038 */
struct _DEVICE_RELATIONS
{
  unsigned int Count;
  _DEVICE_OBJECT *Objects[1];
};

/* 1056 */
struct _PENDING_RELATIONS_LIST_ENTRY
{
  _LIST_ENTRY Link;
  _WORK_QUEUE_ITEM WorkItem;
  _PNP_DEVICE_EVENT_ENTRY *DeviceEvent;
  _DEVICE_OBJECT *DeviceObject;
  _RELATION_LIST *RelationsList;
  _IRP *EjectIrp;
  IRPLOCK Lock;
  unsigned int Problem;
  unsigned __int8 ProfileChangingEject;
  unsigned __int8 DisplaySafeRemovalDialog;
  _SYSTEM_POWER_STATE LightestSleepState;
  DOCK_INTERFACE *DockInterface;
  unsigned __int8 DequeuePending;
  _PNP_DEVICE_DELETE_TYPE DeleteType;
};

/* 1002 */
struct __declspec(align(4)) $E5D6CCCB93A336562C70D60413EE5556
{
  void (__cdecl *CallerCompletion)(_DEVICE_OBJECT *, unsigned __int8, _POWER_STATE, void *, _IO_STATUS_BLOCK *);
  void *CallerContext;
  _DEVICE_OBJECT *CallerDevice;
  unsigned __int8 SystemWake;
};

/* 1004 */
struct __declspec(align(4)) $97AE5550FB8D2E0007BE87836EEC1D11
{
  _PO_DEVICE_NOTIFY *NotifyDevice;
  unsigned __int8 FxDeviceActivated;
};

/* 1005 */
union $8F3EE221758AB4003E6311619F918A01
{
  $E5D6CCCB93A336562C70D60413EE5556 Device;
  $97AE5550FB8D2E0007BE87836EEC1D11 System;
};

/* 1006 */
struct _POP_IRP_DATA
{
  _LIST_ENTRY Link;
  _IRP *Irp;
  _DEVICE_OBJECT *Pdo;
  _DEVICE_OBJECT *TargetDevice;
  _DEVICE_OBJECT *CurrentDevice;
  unsigned __int64 WatchdogStart;
  _KTIMER WatchdogTimer;
  _KDPC WatchdogDpc;
  unsigned __int8 MinorFunction;
  _POWER_STATE_TYPE PowerStateType;
  _POWER_STATE PowerState;
  unsigned __int8 WatchdogEnabled;
  _POP_FX_DEVICE *FxDevice;
  unsigned __int8 SystemTransition;
  unsigned __int8 NotifyPEP;
  $8F3EE221758AB4003E6311619F918A01 ___u15;
};

/* 1009 */
struct PEPHANDLE__
{
  int unused;
};

/* 1011 */
struct __declspec(align(8)) _POP_FX_WORK_ORDER_WATCHDOG_INFO
{
  _KTIMER Timer;
  _KDPC Dpc;
  _POP_FX_WORK_ORDER *WorkOrder;
};

/* 1016 */
struct _PEP_CRASHDUMP_INFORMATION
{
  PEPHANDLE__ *DeviceHandle;
  void *DeviceContext;
};

/* 1018 */
struct $BE89F16392544B30D814E7277EA7E79E
{
  int Value;
  int Value2;
};

/* 1019 */
struct $AEAC89CCD4A218B8F52366BC38303136
{
  unsigned __int32 RefCount : 30;
  unsigned __int32 Idling : 1;
  unsigned __int32 Active : 1;
  unsigned __int32 CriticalIdleOverride : 1;
  unsigned __int32 ResidentOverride : 1;
  unsigned __int32 Reserved : 30;
};

/* 1020 */
volatile union _POP_FX_COMPONENT_FLAGS
{
  $BE89F16392544B30D814E7277EA7E79E __s0;
  $AEAC89CCD4A218B8F52366BC38303136 __s1;
};

/* 1024 */
struct __declspec(align(8)) _POP_FX_COMPONENT
{
  _GUID Id;
  unsigned int Index;
  _POP_FX_WORK_ORDER WorkOrder;
  _POP_FX_DEVICE *Device;
  volatile _POP_FX_COMPONENT_FLAGS Flags;
  volatile int Resident;
  _KEVENT ActiveEvent;
  unsigned int IdleLock;
  volatile int IdleConditionComplete;
  volatile int IdleStateComplete;
  unsigned __int64 IdleStamp;
  volatile unsigned int CurrentIdleState;
  unsigned int IdleStateCount;
  _POP_FX_IDLE_STATE *IdleStates;
  unsigned int DeepestWakeableIdleState;
  unsigned int ProviderCount;
  _POP_FX_PROVIDER *Providers;
  unsigned int IdleProviderCount;
  unsigned int DependentCount;
  _POP_FX_DEPENDENT *Dependents;
  _POP_FX_ACCOUNTING Accounting;
  _POP_FX_PERF_INFO *Performance;
};

/* 1043 */
struct __declspec(align(4)) $C89B4895EC3BA42EDA831A0C370345C8
{
  _GUID ClassGuid;
  wchar_t SymbolicLinkName[1];
};

/* 1044 */
struct $57E078D87C70BB7EFB9C5ADF715161D6
{
  wchar_t DeviceId[1];
};

/* 1045 */
struct __declspec(align(4)) $B6A24EA2C84C6C8A64ACA1143AC036BD
{
  void *NotificationStructure;
  wchar_t DeviceId[1];
};

/* 1046 */
struct $B1F1E551A1D3132E68A65BF2B586ECEB
{
  void *Notification;
};

/* 1047 */
struct $4B6658DD9EB87CC13C5C78399361CA84
{
  unsigned int NotificationCode;
  unsigned int NotificationData;
};

/* 1048 */
struct __declspec(align(4)) $C0E439BDCDFB5DC0661F1F28D5EDC6B9
{
  _PNP_VETO_TYPE VetoType;
  wchar_t DeviceIdVetoNameBuffer[1];
};

/* 1049 */
struct $A945EB00C8F63225FD14993E47C62C50
{
  _GUID BlockedDriverGuid;
};

/* 1050 */
struct $BC252DAE9DEB9C1CE105898EFFAE4927
{
  wchar_t ParentId[1];
};

/* 1051 */
struct __declspec(align(4)) $762D6C8FDF5D44EF9856C8D24D2DCED9
{
  _GUID PowerSettingGuid;
  unsigned int Flags;
  unsigned int SessionId;
  unsigned int DataLength;
  unsigned __int8 Data[1];
};

/* 1052 */
union $51E74D3EE68BAFCB8DA082929A4636AC
{
  $C89B4895EC3BA42EDA831A0C370345C8 DeviceClass;
  $57E078D87C70BB7EFB9C5ADF715161D6 TargetDevice;
  $57E078D87C70BB7EFB9C5ADF715161D6 InstallDevice;
  $B6A24EA2C84C6C8A64ACA1143AC036BD CustomNotification;
  $B1F1E551A1D3132E68A65BF2B586ECEB ProfileNotification;
  $4B6658DD9EB87CC13C5C78399361CA84 PowerNotification;
  $C0E439BDCDFB5DC0661F1F28D5EDC6B9 VetoNotification;
  $A945EB00C8F63225FD14993E47C62C50 BlockedDriverNotification;
  $BC252DAE9DEB9C1CE105898EFFAE4927 InvalidIDNotification;
  $762D6C8FDF5D44EF9856C8D24D2DCED9 PowerSettingNotification;
  $57E078D87C70BB7EFB9C5ADF715161D6 PropertyChangeNotification;
  $57E078D87C70BB7EFB9C5ADF715161D6 DeviceInstanceNotification;
};

/* 1053 */
struct __unaligned __declspec(align(4)) _PLUGPLAY_EVENT_BLOCK
{
  _GUID EventGuid;
  _PLUGPLAY_EVENT_CATEGORY EventCategory;
  unsigned int *Result;
  unsigned int Flags;
  unsigned int TotalSize;
  void *DeviceObject;
  $51E74D3EE68BAFCB8DA082929A4636AC u;
};

/* 1042 */
struct __unaligned __declspec(align(4)) _PNP_DEVICE_EVENT_ENTRY
{
  _LIST_ENTRY ListEntry;
  unsigned int Argument;
  _KEVENT *CallerEvent;
  void (__cdecl *Callback)(void *);
  void *Context;
  _PNP_VETO_TYPE *VetoType;
  _UNICODE_STRING *VetoName;
  unsigned int RefCount;
  unsigned int Lock;
  unsigned __int8 Cancel;
  __declspec(align(4)) _PNP_DEVICE_EVENT_ENTRY *Parent;
  _GUID ActivityId;
  _PLUGPLAY_EVENT_BLOCK Data;
};

/* 1054 */
struct __declspec(align(4)) _RELATION_LIST
{
  struct _DEVICE_OBJECT_LIST *DeviceObjectList;
  unsigned __int8 Sorted;
};

/* 1055 */
struct DOCK_INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__cdecl *InterfaceReference)(void *);
  void (__cdecl *InterfaceDereference)(void *);
  unsigned int (__cdecl *ProfileDepartureSetMode)(void *, PROFILE_DEPARTURE_STYLE);
  unsigned int (__cdecl *ProfileDepartureUpdate)(void *);
};

/* 1021 */
struct __declspec(align(8)) _POP_FX_IDLE_STATE
{
  unsigned __int64 TransitionLatency;
  unsigned __int64 ResidencyRequirement;
  unsigned int NominalPower;
};

/* 1022 */
struct __declspec(align(4)) _POP_FX_PROVIDER
{
  unsigned int Index;
  unsigned __int8 Activating;
};

/* 1023 */
struct _POP_FX_DEPENDENT
{
  unsigned int Index;
  unsigned int ProviderIndex;
};

/* 1025 */
struct $E4CC3B1434A21E6FDFDE75249B5ACF9A
{
  unsigned __int32 Progress : 3;
  unsigned __int32 Reserved : 24;
  unsigned __int32 Synchronicity : 2;
  unsigned __int32 RequestPepCompleted : 1;
  unsigned __int32 RequestSucceeded : 1;
  unsigned __int32 NestedCallback : 1;
};

/* 1026 */
volatile union _POP_FX_PERF_FLAGS
{
  int Value;
  $E4CC3B1434A21E6FDFDE75249B5ACF9A __s1;
};

/* 1035 */
struct __declspec(align(8)) _POP_FX_PERF_INFO
{
  _POP_FX_COMPONENT *Component;
  _KEVENT CompletedEvent;
  void (__cdecl *ComponentPerfState)(void *, unsigned int, unsigned __int8, void *);
  volatile _POP_FX_PERF_FLAGS Flags;
  _PO_FX_PERF_STATE_CHANGE *LastChange;
  unsigned int LastChangeCount;
  unsigned __int64 LastChangeStamp;
  unsigned __int8 LastChangeNominal;
  unsigned __int8 PepRegistered;
  unsigned __int8 QueryOnIdleStates;
  void *volatile RequestDriverContext;
  _POP_FX_WORK_ORDER WorkOrder;
  unsigned int SetsCount;
  _POP_FX_PERF_SET *Sets;
};

/* 1027 */
union $EAADDD9D0831108F923DCADC883D7ACD
{
  unsigned int StateIndex;
  unsigned __int64 StateValue;
};

/* 1028 */
struct _PO_FX_PERF_STATE_CHANGE
{
  unsigned int Set;
  $EAADDD9D0831108F923DCADC883D7ACD ___u1;
};

/* 1034 */
struct __declspec(align(8)) _POP_FX_PERF_SET
{
  _PO_FX_COMPONENT_PERF_SET *PerfSet;
  unsigned __int64 CurrentPerf;
  unsigned __int64 CurrentPerfStamp;
  unsigned __int8 CurrentPerfNominal;
};

/* 1030 */
struct $9C394A9409AC89788E5A71BE32E6C6C0
{
  unsigned int Count;
  _PO_FX_PERF_STATE *States;
};

/* 1031 */
struct $1CC20BA79CB696BF498B72324B781A74
{
  unsigned __int64 Minimum;
  unsigned __int64 Maximum;
};

/* 1032 */
union $173CA4E08C8BBAB9ECC2254801E05879
{
  $9C394A9409AC89788E5A71BE32E6C6C0 Discrete;
  $1CC20BA79CB696BF498B72324B781A74 Range;
};

/* 1033 */
struct _PO_FX_COMPONENT_PERF_SET
{
  _UNICODE_STRING Name;
  unsigned __int64 Flags;
  _PO_FX_PERF_STATE_UNIT Unit;
  _PO_FX_PERF_STATE_TYPE Type;
  $173CA4E08C8BBAB9ECC2254801E05879 ___u4;
};

/* 1029 */
struct __declspec(align(8)) _PO_FX_PERF_STATE
{
  unsigned __int64 Value;
  void *Context;
};

/* 1057 */
struct _MCGEN_TRACE_CONTEXT
{
  unsigned __int64 RegistrationHandle;
  unsigned __int64 Logger;
  unsigned __int64 MatchAnyKeyword;
  unsigned __int64 MatchAllKeyword;
  unsigned int Flags;
  unsigned int IsEnabled;
  unsigned __int8 Level;
  unsigned __int8 Reserve;
  unsigned __int16 EnableBitsCount;
  unsigned int *EnableBitMask;
  const unsigned __int64 *EnableKeyWords;
  const unsigned __int8 *EnableLevel;
};

/* 1058 */
struct _PNP_DEVICE_COMPLETION_QUEUE
{
  _LIST_ENTRY DispatchedList;
  unsigned int DispatchedCount;
  _LIST_ENTRY CompletedList;
  _KSEMAPHORE CompletedSemaphore;
  unsigned int SpinLock;
};

/* 1059 */
struct _PNP_ASSIGN_RESOURCES_CONTEXT
{
  unsigned int IncludeFailedDevices;
  unsigned int DeviceCount;
  _DEVICE_OBJECT *DeviceList[1];
};

/* 1060 */
struct _PNP_RESOURCE_REQUEST
{
  _DEVICE_OBJECT *PhysicalDevice;
  unsigned int Flags;
  _ARBITER_REQUEST_SOURCE AllocationType;
  unsigned int Priority;
  unsigned int Position;
  _IO_RESOURCE_REQUIREMENTS_LIST *ResourceRequirements;
  void *ReqList;
  _CM_RESOURCE_LIST *ResourceAssignment;
  _CM_RESOURCE_LIST *TranslatedResourceAssignment;
  int Status;
};

/* 1061 */
struct _EXCEPTION_RECORD64
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned __int64 ExceptionRecord;
  unsigned __int64 ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int __unusedAlignment;
  unsigned __int64 ExceptionInformation[15];
};

/* 1062 */
struct _EXCEPTION_RECORD32
{
  int ExceptionCode;
  unsigned int ExceptionFlags;
  unsigned int ExceptionRecord;
  unsigned int ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 1063 */
struct __declspec(align(8)) _DBGKM_EXCEPTION64
{
  _EXCEPTION_RECORD64 ExceptionRecord;
  unsigned int FirstChance;
};

/* 1064 */
struct _DBGKM_EXCEPTION32
{
  _EXCEPTION_RECORD32 ExceptionRecord;
  unsigned int FirstChance;
};

/* 1065 */
struct _X86_KTRAP_FRAME
{
  unsigned int DbgEbp;
  unsigned int DbgEip;
  unsigned int DbgArgMark;
  unsigned int DbgArgPointer;
  unsigned int TempSegCs;
  unsigned int TempEsp;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  unsigned int SegGs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned __int8 PreviousPreviousMode;
  unsigned __int8 EntropyQueueDpc;
  unsigned __int8 Reserved[2];
  unsigned int ExceptionList;
  unsigned int SegFs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Ebp;
  unsigned int ErrCode;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int HardwareEsp;
  unsigned int HardwareSegSs;
  unsigned int V86Es;
  unsigned int V86Ds;
  unsigned int V86Fs;
  unsigned int V86Gs;
};

/* 1066 */
struct _X86_KTRAP_FRAME_BLUE
{
  unsigned int DbgEbp;
  unsigned int DbgEip;
  unsigned int DbgArgMark;
  unsigned __int16 TempSegCs;
  unsigned __int8 Logging;
  unsigned __int8 FrameType;
  unsigned int TempEsp;
  unsigned int Dr0;
  unsigned int Dr1;
  unsigned int Dr2;
  unsigned int Dr3;
  unsigned int Dr6;
  unsigned int Dr7;
  unsigned int SegGs;
  unsigned int SegEs;
  unsigned int SegDs;
  unsigned int Edx;
  unsigned int Ecx;
  unsigned int Eax;
  unsigned __int8 PreviousPreviousMode;
  unsigned __int8 EntropyQueueDpc;
  unsigned __int8 Reserved[2];
  unsigned int MxCsr;
  unsigned int ExceptionList;
  unsigned int SegFs;
  unsigned int Edi;
  unsigned int Esi;
  unsigned int Ebx;
  unsigned int Ebp;
  unsigned int ErrCode;
  unsigned int Eip;
  unsigned int SegCs;
  unsigned int EFlags;
  unsigned int HardwareEsp;
  unsigned int HardwareSegSs;
  unsigned int V86Es;
  unsigned int V86Ds;
  unsigned int V86Fs;
  unsigned int V86Gs;
};

/* 1067 */
struct __declspec(align(8)) _DBGKD_LOAD_SYMBOLS64
{
  unsigned int PathNameLength;
  unsigned __int64 BaseOfDll;
  unsigned __int64 ProcessId;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int8 UnloadSymbols;
};

/* 1068 */
struct __declspec(align(4)) _DBGKD_LOAD_SYMBOLS32
{
  unsigned int PathNameLength;
  unsigned int BaseOfDll;
  unsigned int ProcessId;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int8 UnloadSymbols;
};

/* 1069 */
struct _DBGKD_READ_MEMORY64
{
  unsigned __int64 TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesRead;
};

/* 1070 */
struct _DBGKD_READ_MEMORY32
{
  unsigned int TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesRead;
};

/* 1071 */
struct _DBGKD_WRITE_MEMORY64
{
  unsigned __int64 TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesWritten;
};

/* 1072 */
struct _DBGKD_WRITE_MEMORY32
{
  unsigned int TargetBaseAddress;
  unsigned int TransferCount;
  unsigned int ActualBytesWritten;
};

/* 1073 */
struct __declspec(align(8)) _DBGKD_WRITE_BREAKPOINT64
{
  unsigned __int64 BreakPointAddress;
  unsigned int BreakPointHandle;
};

/* 1074 */
struct _DBGKD_WRITE_BREAKPOINT32
{
  unsigned int BreakPointAddress;
  unsigned int BreakPointHandle;
};

/* 1075 */
struct _DBGKD_READ_WRITE_IO64
{
  unsigned __int64 IoAddress;
  unsigned int DataSize;
  unsigned int DataValue;
};

/* 1076 */
struct _DBGKD_READ_WRITE_IO32
{
  unsigned int DataSize;
  unsigned int IoAddress;
  unsigned int DataValue;
};

/* 1077 */
struct __declspec(align(8)) _DBGKD_READ_WRITE_IO_EXTENDED64
{
  unsigned int DataSize;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
  unsigned __int64 IoAddress;
  unsigned int DataValue;
};

/* 1078 */
struct _DBGKD_READ_WRITE_IO_EXTENDED32
{
  unsigned int DataSize;
  unsigned int InterfaceType;
  unsigned int BusNumber;
  unsigned int AddressSpace;
  unsigned int IoAddress;
  unsigned int DataValue;
};

/* 1079 */
struct _DBGKD_SET_SPECIAL_CALL32
{
  unsigned int SpecialCall;
};

/* 1080 */
struct _DBGKD_SET_SPECIAL_CALL64
{
  unsigned __int64 SpecialCall;
};

/* 1081 */
struct _DBGKD_SET_INTERNAL_BREAKPOINT32
{
  unsigned int BreakpointAddress;
  unsigned int Flags;
};

/* 1082 */
struct __declspec(align(8)) _DBGKD_SET_INTERNAL_BREAKPOINT64
{
  unsigned __int64 BreakpointAddress;
  unsigned int Flags;
};

/* 1083 */
struct _DBGKD_GET_INTERNAL_BREAKPOINT64
{
  unsigned __int64 BreakpointAddress;
  unsigned int Flags;
  unsigned int Calls;
  unsigned int MaxCallsPerPeriod;
  unsigned int MinInstructions;
  unsigned int MaxInstructions;
  unsigned int TotalInstructions;
};

/* 1084 */
struct _DBGKD_GET_INTERNAL_BREAKPOINT32
{
  unsigned int BreakpointAddress;
  unsigned int Flags;
  unsigned int Calls;
  unsigned int MaxCallsPerPeriod;
  unsigned int MinInstructions;
  unsigned int MaxInstructions;
  unsigned int TotalInstructions;
};

/* 1085 */
struct _DBGKD_GET_CONTEXT
{
  unsigned int Unused;
};

/* 1086 */
struct _DBGKD_SET_CONTEXT
{
  unsigned int ContextFlags;
};

/* 1087 */
struct _DBGKD_RESTORE_BREAKPOINT
{
  unsigned int BreakPointHandle;
};

/* 1088 */
struct _DBGKD_CONTINUE
{
  int ContinueStatus;
};

/* 1089 */
struct _ARM_DBGKD_CONTROL_SET
{
  unsigned int Continue;
  unsigned int CurrentSymbolStart;
  unsigned int CurrentSymbolEnd;
};

/* 1090 */
struct _X86_DBGKD_CONTROL_SET
{
  unsigned int TraceFlag;
  unsigned int Dr7;
  unsigned int CurrentSymbolStart;
  unsigned int CurrentSymbolEnd;
};

/* 1091 */
struct __unaligned __declspec(align(4)) _IA64_DBGKD_CONTROL_SET
{
  unsigned int Continue;
  unsigned __int64 CurrentSymbolStart;
  unsigned __int64 CurrentSymbolEnd;
};

/* 1092 */
struct __unaligned __declspec(align(4)) _AMD64_DBGKD_CONTROL_SET
{
  unsigned int TraceFlag;
  unsigned __int64 Dr7;
  unsigned __int64 CurrentSymbolStart;
  unsigned __int64 CurrentSymbolEnd;
};

/* 1093 */
struct _ARM64_DBGKD_CONTROL_SET
{
  unsigned int Continue;
  unsigned int TraceFlag;
  unsigned __int64 CurrentSymbolStart;
  unsigned __int64 CurrentSymbolEnd;
};

/* 1094 */
struct _ARMCE_DBGKD_CONTROL_SET
{
  unsigned int Continue;
  unsigned int CurrentSymbolStart;
  unsigned int CurrentSymbolEnd;
};

/* 1095 */
struct _PPC_DBGKD_CONTROL_SET
{
  unsigned int Continue;
  unsigned int CurrentSymbolStart;
  unsigned int CurrentSymbolEnd;
};

/* 1096 */
union __unaligned __declspec(align(4)) $8C90163A61E50ECB9472032DE880CCE3
{
  _X86_DBGKD_CONTROL_SET X86ControlSet;
  unsigned int AlphaControlSet;
  _IA64_DBGKD_CONTROL_SET IA64ControlSet;
  _AMD64_DBGKD_CONTROL_SET Amd64ControlSet;
  _ARM_DBGKD_CONTROL_SET ArmControlSet;
  _ARM64_DBGKD_CONTROL_SET Arm64ControlSet;
  _ARMCE_DBGKD_CONTROL_SET ArmCeControlSet;
  _PPC_DBGKD_CONTROL_SET PpcControlSet;
};

/* 1097 */
struct _DBGKD_ANY_CONTROL_SET
{
  $8C90163A61E50ECB9472032DE880CCE3 ___u0;
};

/* 1098 */
union $41AA2198CF23E1EF33E71B38E595FA7C
{
  _ARM_DBGKD_CONTROL_SET ControlSet;
  _DBGKD_ANY_CONTROL_SET AnyControlSet;
};

/* 1099 */
struct _DBGKD_CONTINUE2
{
  int ContinueStatus;
  $41AA2198CF23E1EF33E71B38E595FA7C ___u1;
};

/* 1100 */
struct _DBGKD_QUERY_SPECIAL_CALLS
{
  unsigned int NumberOfSpecialCalls;
};

/* 1101 */
struct _DBGKD_GET_VERSION64
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int8 ProtocolVersion;
  unsigned __int8 KdSecondaryVersion;
  unsigned __int16 Flags;
  unsigned __int16 MachineType;
  unsigned __int8 MaxPacketType;
  unsigned __int8 MaxStateChange;
  unsigned __int8 MaxManipulate;
  unsigned __int8 Simulation;
  unsigned __int16 Unused[1];
  unsigned __int64 KernBase;
  unsigned __int64 PsLoadedModuleList;
  unsigned __int64 DebuggerDataList;
};

/* 1102 */
struct _DBGKD_BREAKPOINTEX
{
  unsigned int BreakPointCount;
  int ContinueStatus;
};

/* 1103 */
struct _DBGKD_READ_WRITE_MSR
{
  unsigned int Msr;
  unsigned int DataValueLow;
  unsigned int DataValueHigh;
};

/* 1104 */
union $B888D73C355F38144AA7B636A80398B1
{
  unsigned __int64 SearchAddress;
  unsigned __int64 FoundAddress;
};

/* 1105 */
struct __declspec(align(8)) _DBGKD_SEARCH_MEMORY
{
  $B888D73C355F38144AA7B636A80398B1 ___u0;
  unsigned __int64 SearchLength;
  unsigned int PatternLength;
};

/* 1106 */
struct _DBGKD_GET_SET_BUS_DATA
{
  unsigned int BusDataType;
  unsigned int BusNumber;
  unsigned int SlotNumber;
  unsigned int Offset;
  unsigned int Length;
};

/* 1107 */
struct _DBGKD_FILL_MEMORY
{
  unsigned __int64 Address;
  unsigned int Length;
  unsigned __int16 Flags;
  unsigned __int16 PatternLength;
};

/* 1108 */
struct _DBGKD_QUERY_MEMORY
{
  unsigned __int64 Address;
  unsigned __int64 Reserved;
  unsigned int AddressSpace;
  unsigned int Flags;
};

/* 1109 */
struct _DBGKD_SWITCH_PARTITION
{
  unsigned int Partition;
};

/* 1110 */
struct _DBGKD_CONTEXT_EX
{
  unsigned int Offset;
  unsigned int ByteCount;
  unsigned int BytesCopied;
};

/* 1111 */
struct __declspec(align(4)) _DBGKD_WRITE_CUSTOM_BREAKPOINT
{
  unsigned __int64 BreakPointAddress;
  unsigned __int64 BreakPointInstruction;
  unsigned int BreakPointHandle;
  unsigned __int8 BreakPointInstructionSize;
  unsigned __int8 BreakPointInstructionAlignment;
};

/* 1112 */
union $C5D6CF98D3792235FF944075943BB1EB
{
  _DBGKD_READ_MEMORY64 ReadMemory;
  _DBGKD_WRITE_MEMORY64 WriteMemory;
  _DBGKD_GET_CONTEXT GetContext;
  _DBGKD_SET_CONTEXT SetContext;
  _DBGKD_WRITE_BREAKPOINT64 WriteBreakPoint;
  _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
  _DBGKD_CONTINUE Continue;
  _DBGKD_CONTINUE2 Continue2;
  _DBGKD_READ_WRITE_IO64 ReadWriteIo;
  _DBGKD_READ_WRITE_IO_EXTENDED64 ReadWriteIoExtended;
  _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
  _DBGKD_SET_SPECIAL_CALL64 SetSpecialCall;
  _DBGKD_SET_INTERNAL_BREAKPOINT64 SetInternalBreakpoint;
  _DBGKD_GET_INTERNAL_BREAKPOINT64 GetInternalBreakpoint;
  _DBGKD_GET_VERSION64 GetVersion64;
  _DBGKD_BREAKPOINTEX BreakPointEx;
  _DBGKD_READ_WRITE_MSR ReadWriteMsr;
  _DBGKD_SEARCH_MEMORY SearchMemory;
  _DBGKD_GET_SET_BUS_DATA GetSetBusData;
  _DBGKD_FILL_MEMORY FillMemory;
  _DBGKD_QUERY_MEMORY QueryMemory;
  _DBGKD_SWITCH_PARTITION SwitchPartition;
  _DBGKD_CONTEXT_EX GetContextEx;
  _DBGKD_CONTEXT_EX SetContextEx;
  _DBGKD_WRITE_CUSTOM_BREAKPOINT WriteCustomBreakPoint;
};

/* 1113 */
struct _DBGKD_MANIPULATE_STATE64
{
  unsigned int ApiNumber;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  int ReturnStatus;
  $C5D6CF98D3792235FF944075943BB1EB u;
};

/* 1114 */
struct _DBGKD_GET_VERSION32
{
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned __int16 ProtocolVersion;
  unsigned __int16 Flags;
  unsigned int KernBase;
  unsigned int PsLoadedModuleList;
  unsigned __int16 MachineType;
  unsigned __int16 ThCallbackStack;
  unsigned __int16 NextCallback;
  unsigned __int16 FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int BreakpointWithStatus;
  unsigned int DebuggerDataList;
};

/* 1115 */
union $C0349A8551DB23D4FC43DF46E8C4C0CF
{
  _DBGKD_READ_MEMORY32 ReadMemory;
  _DBGKD_WRITE_MEMORY32 WriteMemory;
  _DBGKD_READ_MEMORY64 ReadMemory64;
  _DBGKD_WRITE_MEMORY64 WriteMemory64;
  _DBGKD_GET_CONTEXT GetContext;
  _DBGKD_SET_CONTEXT SetContext;
  _DBGKD_WRITE_BREAKPOINT32 WriteBreakPoint;
  _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint;
  _DBGKD_CONTINUE Continue;
  _DBGKD_CONTINUE2 Continue2;
  _DBGKD_READ_WRITE_IO32 ReadWriteIo;
  _DBGKD_READ_WRITE_IO_EXTENDED32 ReadWriteIoExtended;
  _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls;
  _DBGKD_SET_SPECIAL_CALL32 SetSpecialCall;
  _DBGKD_SET_INTERNAL_BREAKPOINT32 SetInternalBreakpoint;
  _DBGKD_GET_INTERNAL_BREAKPOINT32 GetInternalBreakpoint;
  _DBGKD_GET_VERSION32 GetVersion32;
  _DBGKD_BREAKPOINTEX BreakPointEx;
  _DBGKD_READ_WRITE_MSR ReadWriteMsr;
  _DBGKD_SEARCH_MEMORY SearchMemory;
  _DBGKD_CONTEXT_EX GetContextEx;
  _DBGKD_CONTEXT_EX SetContextEx;
};

/* 1116 */
struct __unaligned __declspec(align(4)) _DBGKD_MANIPULATE_STATE32
{
  unsigned int ApiNumber;
  unsigned __int16 ProcessorLevel;
  unsigned __int16 Processor;
  int ReturnStatus;
  $C0349A8551DB23D4FC43DF46E8C4C0CF u;
};

/* 1117 */
struct _PEP_ACPI_IO_MEMORY_RESOURCE
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  unsigned __int8 Information;
  _LARGE_INTEGER MinimumAddress;
  _LARGE_INTEGER MaximumAddress;
  unsigned int Alignment;
  unsigned int Length;
};

/* 1118 */
struct $6D4F6A779CB91EC017A0C8BC9C01A4CF
{
  unsigned __int32 Shared : 1;
  unsigned __int32 Wake : 1;
  unsigned __int32 ResourceUsage : 1;
  unsigned __int32 SlaveMode : 1;
  unsigned __int32 AddressingMode : 1;
  unsigned __int32 SharedMode : 1;
  unsigned __int32 Reserved : 26;
};

/* 1119 */
union _PEP_ACPI_RESOURCE_FLAGS
{
  unsigned int AsULong;
  $6D4F6A779CB91EC017A0C8BC9C01A4CF __s1;
};

/* 1120 */
struct _PEP_ACPI_INTERRUPT_RESOURCE
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  _KINTERRUPT_MODE InterruptType;
  _KINTERRUPT_POLARITY InterruptPolarity;
  _PEP_ACPI_RESOURCE_FLAGS Flags;
  unsigned __int8 Count;
  unsigned int *Pins;
};

/* 1121 */
struct __declspec(align(4)) _PEP_ACPI_GPIO_RESOURCE
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  _PEP_ACPI_RESOURCE_FLAGS Flags;
  _KINTERRUPT_MODE InterruptType;
  _KINTERRUPT_POLARITY InterruptPolarity;
  _GPIO_PIN_CONFIG_TYPE PinConfig;
  _GPIO_PIN_IORESTRICTION_TYPE IoRestrictionType;
  unsigned __int16 DriveStrength;
  unsigned __int16 DebounceTimeout;
  unsigned __int16 *PinTable;
  unsigned __int16 PinCount;
  unsigned __int8 ResourceSourceIndex;
  _UNICODE_STRING *ResourceSourceName;
  unsigned __int8 *VendorData;
  unsigned __int16 VendorDataLength;
};

/* 1122 */
struct __declspec(align(4)) _PEP_ACPI_SPB_RESOURCE
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  _PEP_ACPI_RESOURCE_FLAGS Flags;
  unsigned __int16 TypeSpecificFlags;
  unsigned __int8 ResourceSourceIndex;
  _UNICODE_STRING *ResourceSourceName;
  char *VendorData;
  unsigned __int16 VendorDataLength;
};

/* 1123 */
struct __declspec(align(4)) _PEP_ACPI_SPB_I2C_RESOURCE
{
  _PEP_ACPI_SPB_RESOURCE SpbCommon;
  unsigned int ConnectionSpeed;
  unsigned __int16 SlaveAddress;
};

/* 1124 */
struct __declspec(align(4)) _PEP_ACPI_SPB_SPI_RESOURCE
{
  _PEP_ACPI_SPB_RESOURCE SpbCommon;
  unsigned int ConnectionSpeed;
  unsigned __int8 DataBitLength;
  unsigned __int8 Phase;
  unsigned __int8 Polarity;
  unsigned __int16 DeviceSelection;
};

/* 1125 */
struct __declspec(align(4)) _PEP_ACPI_SPB_UART_RESOURCE
{
  _PEP_ACPI_SPB_RESOURCE SpbCommon;
  unsigned int BaudRate;
  unsigned __int16 RxBufferSize;
  unsigned __int16 TxBufferSize;
  unsigned __int8 Parity;
  unsigned __int8 LinesInUse;
};

/* 1126 */
struct __declspec(align(8)) _PEP_ACPI_EXTENDED_ADDRESS
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  _PEP_ACPI_RESOURCE_FLAGS Flags;
  unsigned __int8 ResourceFlags;
  unsigned __int8 GeneralFlags;
  unsigned __int8 TypeSpecificFlags;
  unsigned __int8 RevisionId;
  unsigned __int8 Reserved;
  unsigned __int64 Granularity;
  unsigned __int64 MinimumAddress;
  unsigned __int64 MaximumAddress;
  unsigned __int64 TranslationAddress;
  unsigned __int64 AddressLength;
  unsigned __int64 TypeAttribute;
  _UNICODE_STRING *DescriptorName;
};

/* 1127 */
union _PEP_ACPI_RESOURCE
{
  _PEP_ACPI_RESOURCE_TYPE Type;
  _PEP_ACPI_IO_MEMORY_RESOURCE IoMemory;
  _PEP_ACPI_INTERRUPT_RESOURCE Interrupt;
  _PEP_ACPI_GPIO_RESOURCE Gpio;
  _PEP_ACPI_SPB_I2C_RESOURCE SpbI2c;
  _PEP_ACPI_SPB_SPI_RESOURCE SpbSpi;
  _PEP_ACPI_SPB_UART_RESOURCE SpbUart;
  _PEP_ACPI_EXTENDED_ADDRESS ExtendedAddress;
};

/* 1128 */
struct _PROCESSOR_PLATFORM_STATE_RESIDENCY
{
  unsigned __int64 Residency;
  unsigned __int64 TransitionCount;
};

/* 1129 */
struct _PROCESSOR_PLATFORM_STATE_RESIDENCIES
{
  unsigned int Count;
  _PROCESSOR_PLATFORM_STATE_RESIDENCY States[1];
};

/* 1130 */
struct _PLATFORM_IDLE_STATE_ACCOUNTING
{
  unsigned int CancelCount;
  unsigned int FailureCount;
  unsigned int SuccessCount;
  unsigned __int64 MaxTime;
  unsigned __int64 MinTime;
  unsigned __int64 TotalTime;
  unsigned int InvalidBucketIndex;
  _PPM_SELECTION_STATISTICS SelectionStatistics;
  _PROC_IDLE_STATE_BUCKET IdleTimeBuckets[26];
};

/* 1131 */
struct _PLATFORM_IDLE_ACCOUNTING
{
  unsigned int ResetCount;
  unsigned int StateCount;
  PPM_IDLE_BUCKET_TIME_TYPE TimeUnit;
  unsigned __int64 StartTime;
  _PLATFORM_IDLE_STATE_ACCOUNTING State[1];
};

/* 1132 */
struct $73C11091B01E4A739D369CFEFD4F477D
{
  unsigned __int32 EnterProcessor : 14;
  unsigned __int32 ExitProcessor : 14;
  unsigned __int32 Transition : 2;
  unsigned __int32 Entered : 1;
  unsigned __int32 Reserved : 1;
};

/* 1133 */
volatile union _PPM_COORDINATED_SYNCHRONIZATION
{
  int AsLong;
  $73C11091B01E4A739D369CFEFD4F477D __s1;
};

/* 1134 */
union $006FE71E90D42FB62A9D64017F62A3D8
{
  volatile int RefCount;
  unsigned __int8 CacheAlign0[128];
};

/* 1135 */
struct _PPM_PLATFORM_STATE
{
  unsigned int Latency;
  unsigned int BreakEvenDuration;
  _PPM_VETO_ACCOUNTING VetoAccounting;
  unsigned __int8 TransitionDebugger;
  unsigned __int8 Platform;
  unsigned int DependencyListCount;
  _KAFFINITY_EX Processors;
  _UNICODE_STRING Name;
  _PPM_SELECTION_DEPENDENCY *DependencyLists;
  volatile _PPM_COORDINATED_SYNCHRONIZATION Synchronization;
  volatile unsigned __int64 EnterTime;
  __declspec(align(64)) $006FE71E90D42FB62A9D64017F62A3D8 ___u11;
};

/* 1136 */
struct _PPM_PLATFORM_STATES
{
  unsigned int StateCount;
  unsigned int InterfaceVersion;
  unsigned int ProcessorCount;
  unsigned __int8 CoordinatedInterface;
  unsigned int (__cdecl *IdleTest)(void *, unsigned int, unsigned int);
  int (__cdecl *IdlePreExecute)(void *, unsigned int, unsigned int, unsigned int, unsigned int *);
  void (__cdecl *IdleComplete)(void *, unsigned int, unsigned int, unsigned int, unsigned int *);
  int (__cdecl *QueryPlatformStateResidency)(void *, _PROCESSOR_PLATFORM_STATE_RESIDENCIES *);
  _PLATFORM_IDLE_ACCOUNTING *Accounting;
  __declspec(align(128)) _PPM_PLATFORM_STATE State[1];
};

/* 1137 */
struct $109F373B935EF0E062D95FF3FA5BF03D
{
  unsigned __int32 PerfDecreaseTime : 1;
  unsigned __int32 PerfIncreaseTime : 1;
  unsigned __int32 PerfDecreasePolicy : 1;
  unsigned __int32 PerfIncreasePolicy : 1;
  unsigned __int32 PerfDecreaseThreshold : 1;
  unsigned __int32 PerfIncreaseThreshold : 1;
  unsigned __int32 PerfMinPolicy : 1;
  unsigned __int32 PerfMaxPolicy : 1;
  unsigned __int32 PerfTimeCheck : 1;
  unsigned __int32 PerfBoostPolicy : 1;
  unsigned __int32 PerfBoostMode : 1;
  unsigned __int32 AllowThrottling : 1;
  unsigned __int32 PerfHistoryCount : 1;
  unsigned __int32 ParkingPerfState : 1;
  unsigned __int32 LatencyHintPerf : 1;
  unsigned __int32 LatencyHintUnpark : 1;
  unsigned __int32 CoreParkingMinCores : 1;
  unsigned __int32 CoreParkingMaxCores : 1;
  unsigned __int32 CoreParkingDecreasePolicy : 1;
  unsigned __int32 CoreParkingIncreasePolicy : 1;
  unsigned __int32 CoreParkingDecreaseTime : 1;
  unsigned __int32 CoreParkingIncreaseTime : 1;
  unsigned __int32 CoreParkingOverUtilizationThreshold : 1;
  unsigned __int32 CoreParkingDistributeUtility : 1;
  unsigned __int32 CoreParkingConcurrencyThreshold : 1;
  unsigned __int32 CoreParkingHeadroomThreshold : 1;
  unsigned __int32 CoreParkingDistributionThreshold : 1;
  unsigned __int32 IdleAllowScaling : 1;
  unsigned __int32 IdleDisable : 1;
  unsigned __int32 IdleTimeCheck : 1;
  unsigned __int32 IdleDemoteThreshold : 1;
  unsigned __int32 IdlePromoteThreshold : 1;
  unsigned __int32 HeteroDecreaseTime : 1;
  unsigned __int32 HeteroIncreaseTime : 1;
  unsigned __int32 HeteroDecreaseThreshold : 1;
  unsigned __int32 HeteroIncreaseThreshold : 1;
  unsigned __int32 Class0FloorPerformance : 1;
  unsigned __int32 Class1InitialPerformance : 1;
  unsigned __int32 EnergyPerfPreference : 1;
  unsigned __int32 AutonomousActivityWindow : 1;
  unsigned __int32 AutonomousMode : 1;
  unsigned __int32 DutyCycling : 1;
  unsigned __int32 Spare : 22;
};

/* 1138 */
union _PPM_POLICY_SETTINGS_MASK
{
  unsigned __int64 Value;
  $109F373B935EF0E062D95FF3FA5BF03D __s1;
};

/* 1139 */
struct __declspec(align(8)) _PPM_ENGINE_SETTINGS
{
  _PPM_POLICY_SETTINGS_MASK ExplicitSetting[2];
  unsigned __int8 ThrottlingPolicy;
  unsigned int PerfTimeCheck;
  unsigned __int8 PerfHistoryCount[2];
  unsigned __int8 PerfMinPolicy[2];
  unsigned __int8 PerfMaxPolicy[2];
  unsigned __int8 PerfDecreaseTime[2];
  unsigned __int8 PerfIncreaseTime[2];
  unsigned __int8 PerfDecreasePolicy[2];
  unsigned __int8 PerfIncreasePolicy[2];
  unsigned __int8 PerfDecreaseThreshold[2];
  unsigned __int8 PerfIncreaseThreshold[2];
  unsigned int PerfBoostPolicy;
  unsigned int PerfBoostMode;
  unsigned int PerfReductionTolerance;
  unsigned int EnergyPerfPreference;
  unsigned int AutonomousActivityWindow;
  unsigned __int8 AutonomousPreference;
  unsigned __int8 LatencyHintPerf[2];
  unsigned __int8 LatencyHintUnpark[2];
  unsigned __int8 DutyCycling;
  unsigned __int8 ParkingPerfState[2];
  unsigned __int8 DistributeUtility;
  unsigned __int8 CoreParkingOverUtilizationThreshold;
  unsigned __int8 CoreParkingConcurrencyThreshold;
  unsigned __int8 CoreParkingHeadroomThreshold;
  unsigned __int8 CoreParkingDistributionThreshold;
  unsigned __int8 CoreParkingDecreasePolicy;
  unsigned __int8 CoreParkingIncreasePolicy;
  unsigned int CoreParkingDecreaseTime;
  unsigned int CoreParkingIncreaseTime;
  unsigned __int8 CoreParkingMinCores[2];
  unsigned __int8 CoreParkingMaxCores[2];
  unsigned __int8 AllowScaling;
  unsigned __int8 IdleDisabled;
  unsigned int IdleTimeCheck;
  unsigned __int8 IdleDemotePercent;
  unsigned __int8 IdlePromotePercent;
  unsigned __int8 HeteroDecreaseTime;
  unsigned __int8 HeteroIncreaseTime;
  unsigned __int8 HeteroDecreaseThreshold[32];
  unsigned __int8 HeteroIncreaseThreshold[32];
  unsigned __int8 Class0FloorPerformance;
  unsigned __int8 Class1InitialPerformance;
};

/* 1140 */
struct _POP_PPM_PROFILE
{
  unsigned __int16 *Name;
  unsigned __int8 Id;
  _GUID Guid;
  unsigned int Flags;
  unsigned __int8 Priority;
  _PPM_ENGINE_SETTINGS Settings[2];
  unsigned __int64 StartTime;
  unsigned __int64 Count;
  unsigned __int64 MaxDuration;
  unsigned __int64 MinDuration;
  unsigned __int64 TotalDuration;
};

/* 1141 */
struct _DIRTY_PAGE_STATISTICS
{
  unsigned int DirtyPages;
  unsigned int DirtyPagesLastScan;
  unsigned int DirtyPagesScheduledLastScan;
};

/* 1142 */
struct __declspec(align(8)) _DIRTY_PAGE_THRESHOLDS
{
  unsigned int DirtyPageThreshold;
  unsigned int DirtyPageThresholdTop;
  unsigned int DirtyPageThresholdBottom;
  unsigned int DirtyPageTarget;
  unsigned __int64 AggregateAvailablePages;
  unsigned __int64 AggregateDirtyPages;
  unsigned int AvailableHistory;
};

/* 1143 */
struct __declspec(align(8)) _LOG_HANDLE_CONTEXT
{
  void *LogHandle;
  void (__cdecl *FlushToLsnRoutine)(void *, _LARGE_INTEGER);
  void (__cdecl *QueryLogHandleInfoRoutine)(void *, unsigned __int16 *);
  _DIRTY_PAGE_STATISTICS DirtyPageStatistics;
  _DIRTY_PAGE_THRESHOLDS DirtyPageThresholds;
  unsigned int AdditionalPagesToWrite;
  unsigned int CcLWScanDPThreshold;
  _LARGE_INTEGER LargestLsnForCurrentLWScan;
  _FILE_OBJECT *RelatedFileObject;
  unsigned int LargestLsnFileObjectKey;
  _LARGE_INTEGER LastLWTimeStamp;
  unsigned int Flags;
};

/* 1144 */
struct __declspec(align(8)) _VOLUME_CACHE_MAP
{
  __int16 NodeTypeCode;
  __int16 NodeByteCode;
  unsigned int UseCount;
  _DEVICE_OBJECT *DeviceObject;
  _LIST_ENTRY VolumeCacheMapLinks;
  unsigned int DirtyPages;
  _LOG_HANDLE_CONTEXT LogHandleContext;
  unsigned int Flags;
  unsigned int PagesQueuedToDisk;
  unsigned int LoggedPagesQueuedToDisk;
};

/* 1152 */
struct _LOGGED_STREAM_CALLBACK_V1
{
  void *LogHandle;
  void (__cdecl *FlushToLsnRoutine)(void *, _LARGE_INTEGER);
};

/* 1153 */
struct _LOGGED_STREAM_CALLBACK_V2
{
  _LOG_HANDLE_CONTEXT *LogHandleContext;
};

/* 1158 */
union $414E1E4B3E350A90D20678CDDAAD67E7
{
  _LOGGED_STREAM_CALLBACK_V1 V1;
  _LOGGED_STREAM_CALLBACK_V2 V2;
};

/* 1155 */
struct _PRIVATE_CACHE_MAP_FLAGS
{
  unsigned __int32 DontUse : 16;
  unsigned __int32 ReadAheadActive : 1;
  unsigned __int32 ReadAheadEnabled : 1;
  unsigned __int32 PagePriority : 3;
  unsigned __int32 PipelineReadAheads : 1;
  unsigned __int32 Available : 10;
};

/* 1156 */
union $FC0CE7795B787B457F09EE6F8860F84F
{
  __int16 NodeTypeCode;
  _PRIVATE_CACHE_MAP_FLAGS Flags;
};

/* 1157 */
struct _PRIVATE_CACHE_MAP
{
  $FC0CE7795B787B457F09EE6F8860F84F ___u0;
  unsigned int ReadAheadMask;
  _FILE_OBJECT *FileObject;
  _LARGE_INTEGER FileOffset1;
  _LARGE_INTEGER BeyondLastByte1;
  _LARGE_INTEGER FileOffset2;
  _LARGE_INTEGER BeyondLastByte2;
  unsigned int SequentialReadCount;
  unsigned int ReadAheadLength;
  _LARGE_INTEGER ReadAheadOffset;
  _LARGE_INTEGER ReadAheadBeyondLastByte;
  unsigned __int64 PrevReadAheadBeyondLastByte;
  unsigned int ReadAheadSpinLock;
  unsigned int PipelinedReadAheadRequestSize;
  unsigned int ReadAheadGrowth;
  _LIST_ENTRY PrivateLinks;
  void *ReadAheadWorkItem;
};

/* 1145 */
struct __declspec(align(8)) _SHARED_CACHE_MAP
{
  __int16 NodeTypeCode;
  __int16 NodeByteSize;
  unsigned int OpenCount;
  _LARGE_INTEGER FileSize;
  _LIST_ENTRY BcbList;
  _LARGE_INTEGER SectionSize;
  _LARGE_INTEGER ValidDataLength;
  _LARGE_INTEGER ValidDataGoal;
  _VACB *InitialVacbs[4];
  _VACB **Vacbs;
  _EX_FAST_REF FileObjectFastRef;
  _EX_PUSH_LOCK VacbLock;
  unsigned int DirtyPages;
  _LIST_ENTRY LoggedStreamLinks;
  _LIST_ENTRY SharedCacheMapLinks;
  unsigned int Flags;
  int Status;
  _MBCB *Mbcb;
  void *Section;
  _KEVENT *CreateEvent;
  _KEVENT *WaitOnActiveCount;
  unsigned int PagesToWrite;
  __int64 BeyondLastFlush;
  _CACHE_MANAGER_CALLBACKS *Callbacks;
  void *LazyWriteContext;
  _LIST_ENTRY PrivateList;
  $414E1E4B3E350A90D20678CDDAAD67E7 ___u26;
  _LARGE_INTEGER LargestLSN;
  unsigned int DirtyPageThreshold;
  unsigned int LazyWritePassCount;
  _CACHE_UNINITIALIZE_EVENT *UninitializeEvent;
  _FAST_MUTEX BcbLock;
  _LARGE_INTEGER LastUnmapBehindOffset;
  _KEVENT Event;
  _LARGE_INTEGER HighWaterMappingOffset;
  _PRIVATE_CACHE_MAP PrivateCacheMap;
  void *WriteBehindWorkQueueEntry;
  _VOLUME_CACHE_MAP *VolumeCacheMap;
  unsigned int ProcImagePathHash;
  unsigned int WritesInProgress;
  unsigned int AsyncReadRequestCount;
};

/* 1146 */
union $BA24F4FBFB69C141672E6145D4A72A23
{
  _LARGE_INTEGER FileOffset;
  unsigned __int16 ActiveCount;
  _LIST_ENTRY Links;
};

/* 1148 */
struct __declspec(align(8)) _VACB
{
  void *BaseAddress;
  _SHARED_CACHE_MAP *SharedCacheMap;
  $BA24F4FBFB69C141672E6145D4A72A23 Overlay;
  _VACB_ARRAY_HEADER *ArrayHead;
};

/* 1149 */
struct _BITMAP_RANGE
{
  _LIST_ENTRY Links;
  __int64 BasePage;
  unsigned int FirstDirtyPage;
  unsigned int LastDirtyPage;
  unsigned int DirtyPages;
  unsigned int *Bitmap;
};

/* 1150 */
struct _MBCB
{
  __int16 NodeTypeCode;
  __int16 NodeIsInZone;
  unsigned int PagesToWrite;
  unsigned int DirtyPages;
  unsigned int Reserved;
  _LIST_ENTRY BitmapRanges;
  __int64 ResumeWritePage;
  __int64 MostRecentlyDirtiedPage;
  _BITMAP_RANGE BitmapRange1;
  _BITMAP_RANGE BitmapRange2;
  _BITMAP_RANGE BitmapRange3;
};

/* 1151 */
struct _CACHE_MANAGER_CALLBACKS
{
  unsigned __int8 (__cdecl *AcquireForLazyWrite)(void *, unsigned __int8);
  void (__cdecl *ReleaseFromLazyWrite)(void *);
  unsigned __int8 (__cdecl *AcquireForReadAhead)(void *, unsigned __int8);
  void (__cdecl *ReleaseFromReadAhead)(void *);
};

/* 1154 */
struct _CACHE_UNINITIALIZE_EVENT
{
  _CACHE_UNINITIALIZE_EVENT *Next;
  _KEVENT Event;
};

/* 1147 */
struct _VACB_ARRAY_HEADER
{
  unsigned int VacbArrayIndex;
  unsigned int MappingCount;
  unsigned int HighestMappedIndex;
  unsigned int Reserved;
};

/* 1159 */
struct $F5256E32988E7FEF922F3044A1BFA36F
{
  _FILE_OBJECT *FileObject;
};

/* 1160 */
struct $BD552319F72A1F1F6EB369B789106C40
{
  _SHARED_CACHE_MAP *SharedCacheMap;
};

/* 1161 */
struct $F41FD7A7805216D5568F868382AC702B
{
  _KEVENT *Event;
};

/* 1162 */
struct $68775FCE2216BFC64C5D17A13BAD008C
{
  unsigned int Reason;
};

/* 1163 */
struct __declspec(align(4)) $F9A1FD9FE2D16218DC27DC625E2395D9
{
  _SHARED_CACHE_MAP *SharedCacheMap;
  _IO_STATUS_BLOCK *IoStatus;
  _KEVENT CallerWaitEvent;
  unsigned __int8 IsLowPriWriteBehind;
};

/* 1164 */
struct _CC_ASYNC_READ_CONTEXT
{
  unsigned __int8 (__cdecl *CompletionRoutine)(void *);
  void *Context;
  _MDL *Mdl;
  char RequestorMode;
  unsigned int NestingLevel;
};

/* 1165 */
struct $7E4F495B56D9A3AF149A069094B08791
{
  _SHARED_CACHE_MAP *SharedCacheMap;
  _LARGE_INTEGER FileOffset;
  _FILE_OBJECT *FileObject;
  unsigned int Length;
  _SINGLE_LIST_ENTRY *PrefetchList;
  unsigned int PrefetchPagePriority;
  _MDL *Mdl;
  _IO_STATUS_BLOCK *IoStatusBlock;
  _CC_ASYNC_READ_CONTEXT *CallbackContext;
  _EPROCESS *OriginatingProcess;
  char RequestorMode;
  unsigned int NestingLevel;
};

/* 1166 */
union $441CF9030779E94DA1457D420DD5474A
{
  $F5256E32988E7FEF922F3044A1BFA36F Read;
  $BD552319F72A1F1F6EB369B789106C40 Write;
  $F41FD7A7805216D5568F868382AC702B Event;
  $68775FCE2216BFC64C5D17A13BAD008C Notification;
  $F9A1FD9FE2D16218DC27DC625E2395D9 LowPriWrite;
  $7E4F495B56D9A3AF149A069094B08791 AsyncRead;
};

/* 1167 */
struct __declspec(align(8)) _WORK_QUEUE_ENTRY
{
  _LIST_ENTRY WorkQueueLinks;
  $441CF9030779E94DA1457D420DD5474A Parameters;
  unsigned __int8 Function;
};

/* 1168 */
struct _CC_EXTERNAL_CACHE_INFO
{
  void (__cdecl *Callback)(void *, unsigned int, unsigned int);
  _DIRTY_PAGE_STATISTICS DirtyPageStatistics;
  _LIST_ENTRY Links;
};

/* 1169 */
struct VACB_LEVEL_ALLOCATION_LIST
{
  _LIST_ENTRY VacbLevelList;
  void *VacbLevelWithBcbListHeads;
  unsigned int VacbLevelsAllocated;
};

/* 1170 */
struct _VACB_LEVEL_REFERENCE
{
  int Reference;
  int SpecialReference;
};

/* 1171 */
struct _HEAP_LIST_LOOKUP
{
  _HEAP_LIST_LOOKUP *ExtendedLookup;
  unsigned int ArraySize;
  unsigned int ExtraItem;
  unsigned int ItemCount;
  unsigned int OutOfRangeItems;
  unsigned int BaseIndex;
  _LIST_ENTRY *ListHead;
  unsigned int *ListsInUseUlong;
  _LIST_ENTRY **ListHints;
};

/* 1172 */
struct $F88B49076F009D1FCEE0BF4B64DF9F21
{
  unsigned __int16 Size;
  unsigned __int8 Flags;
  unsigned __int8 SmallTagIndex;
};

/* 1173 */
union $18AEDCD6A88F57C2CD45CC765EE868AA
{
  $F88B49076F009D1FCEE0BF4B64DF9F21 __s0;
  unsigned int SubSegmentCode;
};

/* 1174 */
union $D9B30C8FE5471008C581BB5D65D85096
{
  unsigned __int8 SegmentOffset;
  unsigned __int8 LFHFlags;
};

/* 1175 */
struct _HEAP_UNPACKED_ENTRY
{
  $18AEDCD6A88F57C2CD45CC765EE868AA ___u0;
  unsigned __int16 PreviousSize;
  $D9B30C8FE5471008C581BB5D65D85096 ___u2;
  unsigned __int8 UnusedBytes;
};

/* 1176 */
struct $189410402A8C196D49CE26743A8A266F
{
  unsigned __int16 FunctionIndex;
  unsigned __int16 ContextValue;
};

/* 1177 */
union $40290AFF254D8E0DCD2C0B9E0BC75178
{
  $189410402A8C196D49CE26743A8A266F __s0;
  unsigned int InterceptorValue;
};

/* 1178 */
struct _HEAP_EXTENDED_ENTRY
{
  $40290AFF254D8E0DCD2C0B9E0BC75178 ___u0;
  unsigned __int16 UnusedBytesLength;
  unsigned __int8 EntryOffset;
  unsigned __int8 ExtendedBlockSignature;
};

/* 1179 */
struct $C0BE8CF8EEC0746F3E432DC5811435AA
{
  unsigned __int16 Size;
  unsigned __int8 Flags;
  unsigned __int8 SmallTagIndex;
  unsigned __int16 PreviousSize;
  unsigned __int8 SegmentOffset;
  unsigned __int8 UnusedBytes;
};

/* 1180 */
struct $ACDCB695F0FB7AA47DFD893C52CD5732
{
  unsigned int SubSegmentCode;
  unsigned __int16 UnusedBytesLength;
  unsigned __int8 LFHFlags;
  unsigned __int8 ExtendedBlockSignature;
};

/* 1181 */
struct $482F55CAED3E18B22A9FDB6679448147
{
  unsigned __int16 FunctionIndex;
  unsigned __int16 ContextValue;
  unsigned __int16 Code2;
  unsigned __int8 EntryOffset;
  unsigned __int8 Code4;
};

/* 1182 */
struct $435DB9ABECFB0398DAC950A2509117DA
{
  unsigned int InterceptorValue;
  unsigned int Code234;
};

/* 1183 */
struct __unaligned __declspec(align(1)) $0FCB6C0F599C568AADE282D3734A48E9
{
  unsigned int Code1;
  _BYTE gap4[2];
  unsigned __int8 Code3;
};

/* 1184 */
union $BEF8BA8C70FEB6854671E0CE0C8FC675
{
  _HEAP_UNPACKED_ENTRY UnpackedEntry;
  $C0BE8CF8EEC0746F3E432DC5811435AA __s1;
  $ACDCB695F0FB7AA47DFD893C52CD5732 __s2;
  _HEAP_EXTENDED_ENTRY ExtendedEntry;
  $482F55CAED3E18B22A9FDB6679448147 __s4;
  $435DB9ABECFB0398DAC950A2509117DA __s5;
  $0FCB6C0F599C568AADE282D3734A48E9 __s6;
  unsigned __int64 AgregateCode;
};

/* 1185 */
struct _HEAP_ENTRY
{
  $BEF8BA8C70FEB6854671E0CE0C8FC675 ___u0;
};

/* 1187 */
struct _HEAP_SEGMENT
{
  _HEAP_ENTRY Entry;
  unsigned int SegmentSignature;
  unsigned int SegmentFlags;
  _LIST_ENTRY SegmentListEntry;
  _HEAP *Heap;
  void *BaseAddress;
  unsigned int NumberOfPages;
  _HEAP_ENTRY *FirstEntry;
  _HEAP_ENTRY *LastValidEntry;
  unsigned int NumberOfUnCommittedPages;
  unsigned int NumberOfUnCommittedRanges;
  unsigned __int16 SegmentAllocatorBackTraceIndex;
  unsigned __int16 Reserved;
  _LIST_ENTRY UCRSegmentList;
};

/* 1194 */
struct $2BC3DFBC5E35396B3699AAF958F3C081
{
  _HEAP_ENTRY Entry;
  unsigned int SegmentSignature;
  unsigned int SegmentFlags;
  _LIST_ENTRY SegmentListEntry;
  _HEAP *Heap;
  void *BaseAddress;
  unsigned int NumberOfPages;
  _HEAP_ENTRY *FirstEntry;
  _HEAP_ENTRY *LastValidEntry;
  unsigned int NumberOfUnCommittedPages;
  unsigned int NumberOfUnCommittedRanges;
  unsigned __int16 SegmentAllocatorBackTraceIndex;
  unsigned __int16 Reserved;
  _LIST_ENTRY UCRSegmentList;
};

/* 1195 */
union $BB38D2473DCCE1A41321BFEE0D62E034
{
  _HEAP_SEGMENT Segment;
  $2BC3DFBC5E35396B3699AAF958F3C081 __s1;
};

/* 1192 */
struct _HEAP_COUNTERS
{
  unsigned int TotalMemoryReserved;
  unsigned int TotalMemoryCommitted;
  unsigned int TotalMemoryLargeUCR;
  unsigned int TotalSizeInVirtualBlocks;
  unsigned int TotalSegments;
  unsigned int TotalUCRs;
  unsigned int CommittOps;
  unsigned int DeCommitOps;
  unsigned int LockAcquires;
  unsigned int LockCollisions;
  unsigned int CommitRate;
  unsigned int DecommittRate;
  unsigned int CommitFailures;
  unsigned int InBlockCommitFailures;
  unsigned int PollIntervalCounter;
  unsigned int DecommitsSinceLastCheck;
  unsigned int HeapPollInterval;
  unsigned int AllocAndFreeOps;
  unsigned int AllocationIndicesActive;
  unsigned int InBlockDeccommits;
  unsigned int InBlockDeccomitSize;
  unsigned int HighWatermarkSize;
  unsigned int LastPolledSize;
};

/* 1193 */
struct _HEAP_TUNING_PARAMETERS
{
  unsigned int CommittThresholdShift;
  unsigned int MaxPreCommittThreshold;
};

/* 1186 */
struct __declspec(align(8)) _HEAP
{
  $BB38D2473DCCE1A41321BFEE0D62E034 ___u0;
  unsigned int Flags;
  unsigned int ForceFlags;
  unsigned int CompatibilityFlags;
  unsigned int EncodeFlagMask;
  _HEAP_ENTRY Encoding;
  unsigned int Interceptor;
  unsigned int VirtualMemoryThreshold;
  unsigned int Signature;
  unsigned int SegmentReserve;
  unsigned int SegmentCommit;
  unsigned int DeCommitFreeBlockThreshold;
  unsigned int DeCommitTotalFreeThreshold;
  unsigned int TotalFreeSize;
  unsigned int MaximumAllocationSize;
  unsigned __int16 ProcessHeapsListIndex;
  unsigned __int16 HeaderValidateLength;
  void *HeaderValidateCopy;
  unsigned __int16 NextAvailableTagIndex;
  unsigned __int16 MaximumTagIndex;
  _HEAP_TAG_ENTRY *TagEntries;
  _LIST_ENTRY UCRList;
  unsigned int AlignRound;
  unsigned int AlignMask;
  _LIST_ENTRY VirtualAllocdBlocks;
  _LIST_ENTRY SegmentList;
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned int NonDedicatedListLength;
  void *BlocksIndex;
  void *UCRIndex;
  _HEAP_PSEUDO_TAG_ENTRY *PseudoTagEntries;
  _LIST_ENTRY FreeLists;
  _HEAP_LOCK *LockVariable;
  int (__cdecl *CommitRoutine)(void *, void **, unsigned int *);
  void *FrontEndHeap;
  unsigned __int16 FrontHeapLockCount;
  unsigned __int8 FrontEndHeapType;
  unsigned __int8 RequestedFrontEndHeapType;
  unsigned __int16 *FrontEndHeapUsageData;
  unsigned __int16 FrontEndHeapMaximumIndex;
  volatile unsigned __int8 FrontEndHeapStatusBitmap[257];
  _HEAP_COUNTERS Counters;
  _HEAP_TUNING_PARAMETERS TuningParameters;
};

/* 1188 */
struct _HEAP_TAG_ENTRY
{
  unsigned int Allocs;
  unsigned int Frees;
  unsigned int Size;
  unsigned __int16 TagIndex;
  unsigned __int16 CreatorBackTraceIndex;
  wchar_t TagName[24];
};

/* 1189 */
struct _HEAP_PSEUDO_TAG_ENTRY
{
  unsigned int Allocs;
  unsigned int Frees;
  unsigned int Size;
};

/* 1190 */
union $86190EE58EF0229E6DFD1EE660616B67
{
  _RTL_CRITICAL_SECTION CriticalSection;
  _ERESOURCE Resource;
};

/* 1191 */
struct _HEAP_LOCK
{
  $86190EE58EF0229E6DFD1EE660616B67 Lock;
};

/* 1196 */
struct $2D5184E9B969D2673E61420A64C87FC9
{
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned __int16 TagIndex;
  unsigned int Settable;
};

/* 1197 */
union $930E2279723EB74303DF5FBF3B1782A4
{
  $2D5184E9B969D2673E61420A64C87FC9 __s0;
  unsigned __int64 ZeroInit;
};

/* 1198 */
struct _HEAP_ENTRY_EXTRA
{
  $930E2279723EB74303DF5FBF3B1782A4 ___u0;
};

/* 1199 */
struct _HEAP_VIRTUAL_ALLOC_ENTRY
{
  _LIST_ENTRY Entry;
  _HEAP_ENTRY_EXTRA ExtraStuff;
  unsigned int CommitSize;
  unsigned int ReserveSize;
  _HEAP_ENTRY BusyBlock;
};

/* 1200 */
union $6506DFB6B7561EB4F6AB366B64C1BA4A
{
  _HEAP_ENTRY HeapEntry;
  _HEAP_UNPACKED_ENTRY UnpackedEntry;
  $C0BE8CF8EEC0746F3E432DC5811435AA __s2;
  $ACDCB695F0FB7AA47DFD893C52CD5732 __s3;
  _HEAP_EXTENDED_ENTRY ExtendedEntry;
  $482F55CAED3E18B22A9FDB6679448147 __s5;
  $435DB9ABECFB0398DAC950A2509117DA __s6;
  $0FCB6C0F599C568AADE282D3734A48E9 __s7;
  unsigned __int64 AgregateCode;
};

/* 1201 */
struct _HEAP_FREE_ENTRY
{
  $6506DFB6B7561EB4F6AB366B64C1BA4A ___u0;
  _LIST_ENTRY FreeList;
};

/* 1202 */
struct $98DC74700006FF6C48411D0D6D66C036
{
  __int16 DataLength;
  __int16 TotalLength;
};

/* 1203 */
union $377F30D653BF801040329D041FDB389C
{
  $98DC74700006FF6C48411D0D6D66C036 s1;
  unsigned int Length;
};

/* 1204 */
struct $3C08E6DE03C606518A54683476EDD482
{
  __int16 Type;
  __int16 DataInfoOffset;
};

/* 1205 */
union $65AAE7980374F260961FD36B1A1D5B7D
{
  $3C08E6DE03C606518A54683476EDD482 s2;
  unsigned int ZeroInit;
};

/* 1206 */
union $0DDEFD79807F1C9CD74987E1FEB54738
{
  _CLIENT_ID ClientId;
  long double DoNotUseThisField;
};

/* 1207 */
union $DFDBDD63C2587FA282FAD6CEC707ED02
{
  unsigned int ClientViewSize;
  unsigned int CallbackId;
};

/* 1208 */
struct _PORT_MESSAGE
{
  $377F30D653BF801040329D041FDB389C u1;
  $65AAE7980374F260961FD36B1A1D5B7D u2;
  $0DDEFD79807F1C9CD74987E1FEB54738 ___u2;
  unsigned int MessageId;
  $DFDBDD63C2587FA282FAD6CEC707ED02 ___u4;
};

/* 1209 */
struct _ALPC_MESSAGE_ATTRIBUTES
{
  unsigned int AllocatedAttributes;
  unsigned int ValidAttributes;
};

/* 1210 */
struct _ALPC_HANDLE_ENTRY
{
  void *Object;
};

/* 1211 */
struct _BLOB_COUNTERS
{
  unsigned int CreatedObjects;
  unsigned int DeletedObjects;
};

/* 1212 */
struct _BLOB_TYPE
{
  _BLOB_ID ResourceId;
  unsigned int PoolTag;
  unsigned int LookasideIndex;
  unsigned int Flags;
  _BLOB_COUNTERS *Counters;
  void (__cdecl *DeleteProcedure)(void *);
  int (__cdecl *DestroyProcedure)(void *);
  unsigned int UsualSize;
};

/* 1213 */
struct $DDF8D924F5565C546F4328CBA7C6CEF8
{
  unsigned __int8 ReferenceCache : 1;
  unsigned __int8 Lookaside : 1;
  unsigned __int8 Initializing : 1;
  unsigned __int8 Deleted : 1;
};

/* 1214 */
union $F65DADE8C726E2F7FFA587D6219BA704
{
  $DDF8D924F5565C546F4328CBA7C6CEF8 s1;
  unsigned __int8 Flags;
};

/* 1215 */
union $4E306D605D27CD28105048959466AC06
{
  _LIST_ENTRY ResourceList;
  _SINGLE_LIST_ENTRY FreeListEntry;
};

/* 1216 */
struct _BLOB
{
  $4E306D605D27CD28105048959466AC06 ___u0;
  $F65DADE8C726E2F7FFA587D6219BA704 u1;
  unsigned __int8 ResourceId;
  __int16 CachedReferences;
  int ReferenceCount;
  unsigned int Pad;
  _EX_PUSH_LOCK Lock;
};

/* 1217 */
struct _ALPC_HANDLE_TABLE
{
  _ALPC_HANDLE_ENTRY *Handles;
  unsigned int TotalHandles;
  unsigned int Flags;
  _EX_PUSH_LOCK Lock;
};

/* 1223 */
struct _TOKEN_SOURCE
{
  char SourceName[8];
  _LUID SourceIdentifier;
};

/* 1224 */
struct _TOKEN_CONTROL
{
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ModifiedId;
  _TOKEN_SOURCE TokenSource;
};

/* 1225 */
struct _SECURITY_CLIENT_CONTEXT
{
  _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  void *ClientToken;
  unsigned __int8 DirectlyAccessClientToken;
  unsigned __int8 DirectAccessEffectiveOnly;
  unsigned __int8 ServerIsRemote;
  _TOKEN_CONTROL ClientTokenControl;
};

/* 1255 */
union $B263C080E3D8F1943C82B6516BBD60D4
{
  _KSEMAPHORE *Semaphore;
  _KEVENT *DummyEvent;
};

/* 1245 */
struct _ALPC_PORT_ATTRIBUTES
{
  unsigned int Flags;
  _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  unsigned int MaxMessageLength;
  unsigned int MemoryBandwidth;
  unsigned int MaxPoolUsage;
  unsigned int MaxSectionSize;
  unsigned int MaxViewSize;
  unsigned int MaxTotalSectionSize;
  unsigned int DupObjectTypes;
};

/* 1253 */
struct $0FABBAB89B4942942836DBD8B35C9423
{
  unsigned __int32 Initialized : 1;
  unsigned __int32 Type : 2;
  unsigned __int32 ConnectionPending : 1;
  unsigned __int32 ConnectionRefused : 1;
  unsigned __int32 Disconnected : 1;
  unsigned __int32 Closed : 1;
  unsigned __int32 NoFlushOnClose : 1;
  unsigned __int32 ReturnExtendedInfo : 1;
  unsigned __int32 Waitable : 1;
  unsigned __int32 DynamicSecurity : 1;
  unsigned __int32 Wow64CompletionList : 1;
  unsigned __int32 Lpc : 1;
  unsigned __int32 LpcToLpc : 1;
  unsigned __int32 HasCompletionList : 1;
  unsigned __int32 HadCompletionList : 1;
  unsigned __int32 EnableCompletionList : 1;
};

/* 1254 */
union $12E0D935A00FED4D10D99C540FF10A5C
{
  $0FABBAB89B4942942836DBD8B35C9423 s1;
  unsigned int State;
};

/* 1218 */
struct _ALPC_PORT
{
  _LIST_ENTRY PortListEntry;
  _ALPC_COMMUNICATION_INFO *CommunicationInfo;
  _EPROCESS *OwnerProcess;
  void *CompletionPort;
  void *CompletionKey;
  _ALPC_COMPLETION_PACKET_LOOKASIDE *CompletionPacketLookaside;
  void *PortContext;
  _SECURITY_CLIENT_CONTEXT StaticSecurity;
  _EX_PUSH_LOCK IncomingQueueLock;
  _LIST_ENTRY MainQueue;
  _LIST_ENTRY LargeMessageQueue;
  _EX_PUSH_LOCK PendingQueueLock;
  _LIST_ENTRY PendingQueue;
  _EX_PUSH_LOCK DirectQueueLock;
  _LIST_ENTRY DirectQueue;
  _EX_PUSH_LOCK WaitQueueLock;
  _LIST_ENTRY WaitQueue;
  $B263C080E3D8F1943C82B6516BBD60D4 ___u17;
  _ALPC_PORT_ATTRIBUTES PortAttributes;
  _EX_PUSH_LOCK ResourceListLock;
  _LIST_ENTRY ResourceListHead;
  _EX_PUSH_LOCK PortObjectLock;
  _ALPC_COMPLETION_LIST *CompletionList;
  struct _CALLBACK_OBJECT *CallbackObject;
  void *CallbackContext;
  _LIST_ENTRY CanceledQueue;
  int SequenceNo;
  int ReferenceNo;
  _PALPC_PORT_REFERENCE_WAIT_BLOCK *ReferenceNoWait;
  $12E0D935A00FED4D10D99C540FF10A5C u1;
  _ALPC_PORT *TargetQueuePort;
  _ALPC_PORT *TargetSequencePort;
  _KALPC_MESSAGE *CachedMessage;
  unsigned int MainQueueLength;
  unsigned int LargeMessageQueueLength;
  unsigned int PendingQueueLength;
  unsigned int DirectQueueLength;
  unsigned int CanceledQueueLength;
  unsigned int WaitQueueLength;
};

/* 1241 */
struct _ALPC_COMMUNICATION_INFO
{
  _ALPC_PORT *ConnectionPort;
  _ALPC_PORT *ServerCommunicationPort;
  _ALPC_PORT *ClientCommunicationPort;
  _LIST_ENTRY CommunicationList;
  _ALPC_HANDLE_TABLE HandleTable;
  _KALPC_MESSAGE *CloseMessage;
};

/* 1244 */
struct _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY
{
  _SINGLE_LIST_ENTRY ListEntry;
  _IO_MINI_COMPLETION_PACKET_USER *Packet;
  _ALPC_COMPLETION_PACKET_LOOKASIDE *Lookaside;
};

/* 1243 */
struct _ALPC_COMPLETION_PACKET_LOOKASIDE
{
  unsigned int Lock;
  unsigned int Size;
  unsigned int ActiveCount;
  unsigned int PendingNullCount;
  unsigned int PendingCheckCompletionListCount;
  unsigned int PendingDelete;
  _SINGLE_LIST_ENTRY FreeListHead;
  void *CompletionPort;
  void *CompletionKey;
  _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY Entry[1];
};

/* 1251 */
struct _ALPC_COMPLETION_LIST
{
  _LIST_ENTRY Entry;
  _EPROCESS *OwnerProcess;
  _EX_PUSH_LOCK CompletionListLock;
  _MDL *Mdl;
  void *UserVa;
  void *UserLimit;
  void *DataUserVa;
  void *SystemVa;
  unsigned int TotalSize;
  _ALPC_COMPLETION_LIST_HEADER *Header;
  void *List;
  unsigned int ListSize;
  void *Bitmap;
  unsigned int BitmapSize;
  void *Data;
  unsigned int DataSize;
  unsigned int BitmapLimit;
  unsigned int BitmapNextHint;
  unsigned int ConcurrencyCount;
  unsigned int AttributeFlags;
  unsigned int AttributeSize;
};

/* 1252 */
struct _PALPC_PORT_REFERENCE_WAIT_BLOCK
{
  _KEVENT DesiredReferenceNoEvent;
  int DesiredReferenceNo;
};

/* 1219 */
struct $40D38832C2761F9E4FAAB4DBAA54BD10
{
  unsigned __int32 QueueType : 3;
  unsigned __int32 QueuePortType : 4;
  unsigned __int32 Canceled : 1;
  unsigned __int32 Ready : 1;
  unsigned __int32 ReleaseMessage : 1;
  unsigned __int32 SharedQuota : 1;
  unsigned __int32 ReplyWaitReply : 1;
  unsigned __int32 OwnerPortReference : 1;
  unsigned __int32 ReserveReference : 1;
  unsigned __int32 ReceiverReference : 1;
  unsigned __int32 ViewAttributeRetrieved : 1;
  unsigned __int32 InDispatch : 1;
};

/* 1220 */
union $3604C3E8CFE7B0CA29F5BE68A5DE28AB
{
  $40D38832C2761F9E4FAAB4DBAA54BD10 s1;
  unsigned int State;
};

/* 1242 */
union $611407BF34A978EDD73A7E567864AF0D
{
  _EPROCESS *QuotaProcess;
  void *QuotaBlock;
};

/* 1238 */
struct $4D527ECE92544168B5228C7BC3E57A97
{
  unsigned __int32 Referenced : 1;
  unsigned __int32 Reserved : 31;
};

/* 1239 */
union _KALPC_DIRECT_EVENT
{
  unsigned int Event;
  $4D527ECE92544168B5228C7BC3E57A97 __s1;
};

/* 1240 */
struct _KALPC_MESSAGE_ATTRIBUTES
{
  void *ClientContext;
  void *ServerContext;
  void *PortContext;
  void *CancelPortContext;
  _KALPC_SECURITY_DATA *SecurityData;
  _KALPC_VIEW *View;
  _KALPC_HANDLE_DATA *HandleData;
  _KALPC_DIRECT_EVENT DirectEvent;
};

/* 1221 */
struct _KALPC_MESSAGE
{
  _LIST_ENTRY Entry;
  _ALPC_PORT *PortQueue;
  _ALPC_PORT *OwnerPort;
  _ETHREAD *WaitingThread;
  $3604C3E8CFE7B0CA29F5BE68A5DE28AB u1;
  int SequenceNo;
  $611407BF34A978EDD73A7E567864AF0D ___u6;
  _ALPC_PORT *CancelSequencePort;
  _ALPC_PORT *CancelQueuePort;
  int CancelSequenceNo;
  _LIST_ENTRY CancelListEntry;
  _KALPC_RESERVE *Reserve;
  _KALPC_MESSAGE_ATTRIBUTES MessageAttributes;
  void *DataUserVa;
  _ALPC_COMMUNICATION_INFO *CommunicationInfo;
  _ALPC_PORT *ConnectionPort;
  _ETHREAD *ServerThread;
  void *WakeReference;
  void *ExtensionBuffer;
  unsigned int ExtensionBufferSize;
  _PORT_MESSAGE PortMessage;
};

/* 1246 */
struct $4E72BEF561229C205E949B0F7BD0A0C9
{
  unsigned __int64 Head : 24;
  unsigned __int64 Tail : 24;
  unsigned __int64 ActiveThreadCount : 16;
};

/* 1247 */
union $48EED61B3752BE59438697770D6C59F9
{
  $4E72BEF561229C205E949B0F7BD0A0C9 s1;
  __int64 Value;
};

/* 1248 */
volatile struct _ALPC_COMPLETION_LIST_STATE
{
  $48EED61B3752BE59438697770D6C59F9 u1;
};

/* 1249 */
struct _RTL_SRWLOCK
{
  $C5CA3D2C36A743F60A4393EA34168544 ___u0;
};

/* 1250 */
struct _ALPC_COMPLETION_LIST_HEADER
{
  unsigned __int64 StartMagic;
  unsigned int TotalSize;
  unsigned int ListOffset;
  unsigned int ListSize;
  unsigned int BitmapOffset;
  unsigned int BitmapSize;
  unsigned int DataOffset;
  unsigned int DataSize;
  unsigned int AttributeFlags;
  unsigned int AttributeSize;
  __declspec(align(128)) volatile _ALPC_COMPLETION_LIST_STATE State;
  volatile unsigned int LastMessageId;
  volatile unsigned int LastCallbackId;
  __declspec(align(128)) volatile unsigned int PostCount;
  __declspec(align(128)) volatile unsigned int ReturnCount;
  __declspec(align(128)) volatile unsigned int LogSequenceNumber;
  __declspec(align(128)) _RTL_SRWLOCK UserLock;
  unsigned __int64 EndMagic;
};

/* 1222 */
struct _KALPC_RESERVE
{
  _ALPC_PORT *OwnerPort;
  _ALPC_HANDLE_TABLE *HandleTable;
  void *Handle;
  _KALPC_MESSAGE *Message;
  int Active;
};

/* 1226 */
struct $99894FC7ACB62B7221A02214860D76E3
{
  unsigned __int32 Revoked : 1;
  unsigned __int32 Impersonated : 1;
};

/* 1227 */
union $CA9628148DBB8C34046E9A165C6AFE7B
{
  $99894FC7ACB62B7221A02214860D76E3 s1;
};

/* 1228 */
struct _KALPC_SECURITY_DATA
{
  _ALPC_HANDLE_TABLE *HandleTable;
  void *ContextHandle;
  _EPROCESS *OwningProcess;
  _ALPC_PORT *OwnerPort;
  _SECURITY_CLIENT_CONTEXT DynamicSecurity;
  $CA9628148DBB8C34046E9A165C6AFE7B u1;
};

/* 1234 */
struct $49E2A68F4066A26D27C87EF997AC7534
{
  unsigned __int32 WriteAccess : 1;
  unsigned __int32 AutoRelease : 1;
  unsigned __int32 ForceUnlink : 1;
};

/* 1235 */
union $EAD1ED98D5D6A349500493D6BDFB9C7A
{
  $49E2A68F4066A26D27C87EF997AC7534 s1;
};

/* 1232 */
struct _KALPC_VIEW
{
  _LIST_ENTRY ViewListEntry;
  _KALPC_REGION *Region;
  _ALPC_PORT *OwnerPort;
  _EPROCESS *OwnerProcess;
  void *Address;
  unsigned int Size;
  void *SecureViewHandle;
  void *WriteAccessHandle;
  $EAD1ED98D5D6A349500493D6BDFB9C7A u1;
  unsigned int NumberOfOwnerMessages;
  _LIST_ENTRY ProcessViewListEntry;
};

/* 1236 */
struct _OB_DUPLICATE_OBJECT_STATE
{
  _EPROCESS *SourceProcess;
  void *SourceHandle;
  void *Object;
  unsigned int TargetAccess;
  _HANDLE_TABLE_ENTRY_INFO ObjectInfo;
  unsigned int HandleAttributes;
};

/* 1237 */
struct _KALPC_HANDLE_DATA
{
  unsigned int Flags;
  unsigned int ObjectType;
  _OB_DUPLICATE_OBJECT_STATE DuplicateContext;
};

/* 1230 */
struct $F014C0A758420810DE3C33759D3E14FE
{
  unsigned __int32 Secure : 1;
};

/* 1231 */
union $5923F3C8090FB92259810A4CC35B9353
{
  $F014C0A758420810DE3C33759D3E14FE s1;
};

/* 1233 */
struct _KALPC_REGION
{
  _LIST_ENTRY RegionListEntry;
  _KALPC_SECTION *Section;
  unsigned int Offset;
  unsigned int Size;
  unsigned int ViewSize;
  $5923F3C8090FB92259810A4CC35B9353 u1;
  unsigned int NumberOfViews;
  _LIST_ENTRY ViewListHead;
  _KALPC_VIEW *ReadOnlyView;
  _KALPC_VIEW *ReadWriteView;
};

/* 1256 */
struct $26D485470A8E48904702AF74AFEB8690
{
  unsigned __int32 Internal : 1;
  unsigned __int32 Secure : 1;
};

/* 1257 */
union $4D0CCB5A55FF635BB26A5660E93458E5
{
  $26D485470A8E48904702AF74AFEB8690 s1;
};

/* 1229 */
struct _KALPC_SECTION
{
  void *SectionObject;
  unsigned int Size;
  _ALPC_HANDLE_TABLE *HandleTable;
  void *SectionHandle;
  _EPROCESS *OwnerProcess;
  _ALPC_PORT *OwnerPort;
  $4D0CCB5A55FF635BB26A5660E93458E5 u1;
  unsigned int NumberOfRegions;
  _LIST_ENTRY RegionListHead;
};

/* 1258 */
struct _OBJECT_ATTRIBUTES
{
  unsigned int Length;
  void *RootDirectory;
  _UNICODE_STRING *ObjectName;
  unsigned int Attributes;
  void *SecurityDescriptor;
  void *SecurityQualityOfService;
};

/* 1259 */
struct _ALPC_DISPATCH_CONTEXT
{
  _ALPC_PORT *PortObject;
  _KALPC_MESSAGE *Message;
  _ALPC_COMMUNICATION_INFO *CommunicationInfo;
  _ETHREAD *TargetThread;
  _ALPC_PORT *TargetPort;
  _KALPC_DIRECT_EVENT DirectEvent;
  unsigned int Flags;
  unsigned __int16 TotalLength;
  unsigned __int16 Type;
  unsigned __int16 DataInfoOffset;
  unsigned __int8 SignalCompletion;
  unsigned __int8 PostedToCompletionList;
};

/* 1260 */
struct _REMOTE_PORT_VIEW
{
  unsigned int Length;
  unsigned int ViewSize;
  void *ViewBase;
};

/* 1261 */
struct _IO_IRP_EXT_TRACK_OFFSET_HEADER
{
  unsigned __int16 Validation;
  unsigned __int16 Flags;
  void (__cdecl *TrackedOffsetCallback)(_IO_IRP_EXT_TRACK_OFFSET_HEADER *, _IO_IRP_EXT_TRACK_OFFSET_HEADER *, __int64);
};

/* 1262 */
struct $5B4038C5EEBE24C34B7A412037402389
{
  unsigned __int16 Allocated : 1;
  unsigned __int16 PropagateId : 1;
  unsigned __int16 SpareBits : 14;
};

/* 1263 */
union $15813D13AAC62250C67D509C9EF81F66
{
  unsigned __int16 ExtensionFlags;
  $5B4038C5EEBE24C34B7A412037402389 __s1;
};

/* 1264 */
struct __unaligned __declspec(align(4)) $6B29E85D6E87A2217D57D5FB73097885
{
  unsigned int ZeroingOffset;
  __int64 FsTrackedOffset;
};

/* 1265 */
union __unaligned __declspec(align(4)) $EB2E36EDA7F9F0F390A1E400DA668DC3
{
  _LARGE_INTEGER Timestamp;
  $6B29E85D6E87A2217D57D5FB73097885 __s1;
  _IO_IRP_EXT_TRACK_OFFSET_HEADER *FsTrackOffsetBlob;
};

/* 1266 */
struct _IOP_IRP_EXTENSION
{
  $15813D13AAC62250C67D509C9EF81F66 ___u0;
  unsigned __int16 TypesAllocated;
  unsigned __int8 GenericExtension[4];
  void *VerifierContext;
  _GUID ActivityId;
  $EB2E36EDA7F9F0F390A1E400DA668DC3 ___u5;
};

/* 1267 */
union _FILE_SEGMENT_ELEMENT
{
  void *__ptr64 Buffer;
  unsigned __int64 Alignment;
};

/* 1268 */
struct _RELATIVE_SYMLINK_INFO
{
  unsigned __int16 ExposedNamespaceLength;
  unsigned __int16 Flags;
  unsigned __int16 DeviceNameLength;
  unsigned __int16 Reserved;
  _RELATIVE_SYMLINK_INFO *InteriorMountPoint;
  _UNICODE_STRING OpenedName;
};

/* 1269 */
struct _IOP_FILE_OBJECT_EXTENSION
{
  unsigned int FoExtFlags;
  void *FoExtPerTypeExtension[7];
  _IOP_PRIORITY_HINT FoIoPriorityHint;
};

/* 1270 */
struct _OBJECT_CREATE_INFORMATION
{
  unsigned int Attributes;
  void *RootDirectory;
  char ProbeMode;
  unsigned int PagedPoolCharge;
  unsigned int NonPagedPoolCharge;
  unsigned int SecurityDescriptorCharge;
  void *SecurityDescriptor;
  _SECURITY_QUALITY_OF_SERVICE *SecurityQos;
  _SECURITY_QUALITY_OF_SERVICE SecurityQualityOfService;
};

/* 1271 */
union $1D71AD3461092E2E03446280A17E8F0A
{
  int HandleCount;
  void *NextToFree;
};

/* 1272 */
struct $8AE9EB3BE2ECB76399DCF342697D4C4D
{
  unsigned __int8 DbgRefTrace : 1;
  unsigned __int8 DbgTracePermanent : 1;
};

/* 1273 */
union $87C7BB94148B329E89EEA13C25DCD65D
{
  unsigned __int8 TraceFlags;
  $8AE9EB3BE2ECB76399DCF342697D4C4D __s1;
};

/* 1274 */
struct $5F79A16B150EF6C429E0F679E4EEC0A2
{
  unsigned __int8 NewObject : 1;
  unsigned __int8 KernelObject : 1;
  unsigned __int8 KernelOnlyAccess : 1;
  unsigned __int8 ExclusiveObject : 1;
  unsigned __int8 PermanentObject : 1;
  unsigned __int8 DefaultSecurityQuota : 1;
  unsigned __int8 SingleHandleEntry : 1;
  unsigned __int8 DeletedInline : 1;
};

/* 1275 */
union $5A15452A4628AC4DFF957B2D8DBB4A36
{
  unsigned __int8 Flags;
  $5F79A16B150EF6C429E0F679E4EEC0A2 __s1;
};

/* 1276 */
union $44D6E0F3279E2576BB2BDDC3FA321CEE
{
  _OBJECT_CREATE_INFORMATION *ObjectCreateInfo;
  void *QuotaBlockCharged;
};

/* 1277 */
struct _OBJECT_HEADER
{
  int PointerCount;
  $1D71AD3461092E2E03446280A17E8F0A ___u1;
  _EX_PUSH_LOCK Lock;
  unsigned __int8 TypeIndex;
  $87C7BB94148B329E89EEA13C25DCD65D ___u4;
  unsigned __int8 InfoMask;
  $5A15452A4628AC4DFF957B2D8DBB4A36 ___u6;
  $44D6E0F3279E2576BB2BDDC3FA321CEE ___u7;
  void *SecurityDescriptor;
  _QUAD Body;
};

/* 1278 */
struct _DUMMY_FILE_OBJECT
{
  _OBJECT_HEADER ObjectHeader;
  char FileObjectBody[128];
};

/* 1279 */
union $C2076B9967AB465B5D9F78BC98574FA4
{
  _FILE_OBJECT *RelatedFileObject;
  _DEVICE_OBJECT *ReferencedDeviceObject;
};

/* 1280 */
struct _OPEN_PACKET
{
  __int16 Type;
  __int16 Size;
  _FILE_OBJECT *FileObject;
  int FinalStatus;
  unsigned int Information;
  unsigned int ParseCheck;
  $C2076B9967AB465B5D9F78BC98574FA4 ___u6;
  _OBJECT_ATTRIBUTES *OriginalAttributes;
  _LARGE_INTEGER AllocationSize;
  unsigned int CreateOptions;
  unsigned __int16 FileAttributes;
  unsigned __int16 ShareAccess;
  void *EaBuffer;
  unsigned int EaLength;
  unsigned int Options;
  unsigned int Disposition;
  _FILE_BASIC_INFORMATION *BasicInformation;
  _FILE_NETWORK_OPEN_INFORMATION *NetworkInformation;
  _CREATE_FILE_TYPE CreateFileType;
  void *MailslotOrPipeParameters;
  unsigned __int8 Override;
  unsigned __int8 QueryOnly;
  unsigned __int8 DeleteOnly;
  unsigned __int8 FullAttributes;
  _DUMMY_FILE_OBJECT *LocalFileObject;
  unsigned int InternalFlags;
  char AccessMode;
  _IO_DRIVER_CREATE_CONTEXT DriverCreateContext;
};

/* 1281 */
struct _ETW_SYSTEMTIME
{
  unsigned __int16 Year;
  unsigned __int16 Month;
  unsigned __int16 DayOfWeek;
  unsigned __int16 Day;
  unsigned __int16 Hour;
  unsigned __int16 Minute;
  unsigned __int16 Second;
  unsigned __int16 Milliseconds;
};

/* 1282 */
struct _TIME_FIELDS
{
  __int16 Year;
  __int16 Month;
  __int16 Day;
  __int16 Hour;
  __int16 Minute;
  __int16 Second;
  __int16 Milliseconds;
  __int16 Weekday;
};

/* 1283 */
struct $596CA5848357B65CC5DE9664364249F4
{
  unsigned __int8 MajorVersion;
  unsigned __int8 MinorVersion;
  unsigned __int8 SubVersion;
  unsigned __int8 SubMinorVersion;
};

/* 1284 */
struct __unaligned __declspec(align(4)) _RTL_TIME_ZONE_INFORMATION
{
  int Bias;
  wchar_t StandardName[32];
  _TIME_FIELDS StandardStart;
  int StandardBias;
  wchar_t DaylightName[32];
  _TIME_FIELDS DaylightStart;
  int DaylightBias;
};

/* 1285 */
union $6B5513F5AB0FAC204BBDE8F09ADFB971
{
  unsigned int Version;
  $596CA5848357B65CC5DE9664364249F4 VersionDetail;
};

/* 1286 */
struct $620F6C590A4E7F1524E2A53A25173F98
{
  unsigned int StartBuffers;
  unsigned int PointerSize;
  unsigned int EventsLost;
  unsigned int CpuSpeedInMHz;
};

/* 1287 */
union $B9553CDA701A5D9DAA9BAC136AAECD3D
{
  _GUID LogInstanceGuid;
  $620F6C590A4E7F1524E2A53A25173F98 __s1;
};

/* 1288 */
struct _TRACE_LOGFILE_HEADER
{
  unsigned int BufferSize;
  $6B5513F5AB0FAC204BBDE8F09ADFB971 ___u1;
  unsigned int ProviderVersion;
  unsigned int NumberOfProcessors;
  _LARGE_INTEGER EndTime;
  unsigned int TimerResolution;
  unsigned int MaximumFileSize;
  unsigned int LogFileMode;
  unsigned int BuffersWritten;
  $B9553CDA701A5D9DAA9BAC136AAECD3D ___u9;
  unsigned __int16 *LoggerName;
  unsigned __int16 *LogFileName;
  _RTL_TIME_ZONE_INFORMATION TimeZone;
  _LARGE_INTEGER BootTime;
  _LARGE_INTEGER PerfFreq;
  _LARGE_INTEGER StartTime;
  unsigned int ReservedFlags;
  unsigned int BuffersLost;
};

/* 1289 */
struct _ETW_BUFFER_QUEUE
{
  _SINGLE_LIST_ENTRY *QueueHead;
  _SINGLE_LIST_ENTRY *QueueTail;
  _SINGLE_LIST_ENTRY QueueEntry;
};

/* 1292 */
struct $CE5421AAA17F992240E21CD59A4E8E5E
{
  unsigned __int64 ClockType : 3;
  unsigned __int64 Frequency : 61;
};

/* 1293 */
union $A624E85CCFB2AF8612093F543D642BE9
{
  $CE5421AAA17F992240E21CD59A4E8E5E __s0;
  _SINGLE_LIST_ENTRY SlistEntry;
  _WMI_BUFFER_HEADER *NextBuffer;
};

/* 1291 */
struct _ETW_REF_CLOCK
{
  _LARGE_INTEGER StartTime;
  _LARGE_INTEGER StartPerfClock;
};

/* 1294 */
struct $A66567E97BAAFCB9B6D33D4D0E9F3DF3
{
  void *Pointer0;
  void *Pointer1;
};

/* 1295 */
union $E488674058860F84185FF75E885271C6
{
  unsigned int Padding1[4];
  _ETW_REF_CLOCK ReferenceTime;
  _LIST_ENTRY GlobalEntry;
  $A66567E97BAAFCB9B6D33D4D0E9F3DF3 __s3;
};

/* 1290 */
struct _WMI_BUFFER_HEADER
{
  unsigned int BufferSize;
  unsigned int SavedOffset;
  volatile unsigned int CurrentOffset;
  volatile int ReferenceCount;
  _LARGE_INTEGER TimeStamp;
  __int64 SequenceNumber;
  $A624E85CCFB2AF8612093F543D642BE9 ___u6;
  _ETW_BUFFER_CONTEXT ClientContext;
  _ETW_BUFFER_STATE State;
  unsigned int Offset;
  unsigned __int16 BufferFlag;
  unsigned __int16 BufferType;
  $E488674058860F84185FF75E885271C6 ___u12;
};

/* 1296 */
struct $03676B78D3AE339137CC6C645D696417
{
  unsigned __int8 ShutDownRequested : 1;
  unsigned __int8 NewBuffersLost : 1;
  unsigned __int8 Disconnected : 1;
  unsigned __int8 Notified : 1;
};

/* 1297 */
union $2EF3124706DF0171D092B6CE36F74C7A
{
  unsigned __int8 Flags;
  $03676B78D3AE339137CC6C645D696417 __s1;
};

/* 1298 */
struct _ETW_REALTIME_CONSUMER
{
  _LIST_ENTRY Links;
  void *ProcessHandle;
  _EPROCESS *ProcessObject;
  void *NextNotDelivered;
  void *RealtimeConnectContext;
  _KEVENT *DisconnectEvent;
  _KEVENT *DataAvailableEvent;
  unsigned int *UserBufferCount;
  _SINGLE_LIST_ENTRY *UserBufferListHead;
  unsigned int BuffersLost;
  unsigned int EmptyBuffersCount;
  unsigned __int16 LoggerId;
  $2EF3124706DF0171D092B6CE36F74C7A ___u12;
  _RTL_BITMAP ReservedBufferSpaceBitMap;
  unsigned __int8 *ReservedBufferSpace;
  unsigned int ReservedBufferSpaceSize;
  unsigned int UserPagesAllocated;
  unsigned int UserPagesReused;
  unsigned int *EventsLostCount;
  unsigned int *BuffersLostCount;
};

/* 1299 */
struct __declspec(align(4)) _KMUTANT
{
  _DISPATCHER_HEADER Header;
  _LIST_ENTRY MutantListEntry;
  _KTHREAD *OwnerThread;
  unsigned __int8 Abandoned;
  unsigned __int8 ApcDisable;
};

/* 1300 */
struct _SID_AND_ATTRIBUTES
{
  void *Sid;
  unsigned int Attributes;
};

/* 1301 */
struct _SID_AND_ATTRIBUTES_HASH
{
  unsigned int SidCount;
  _SID_AND_ATTRIBUTES *SidAttr;
  unsigned int Hash[32];
};

/* 1302 */
struct _TOKEN_PRIVILEGES
{
  unsigned int PrivilegeCount;
  _LUID_AND_ATTRIBUTES Privileges[1];
};

/* 1303 */
struct _TOKEN_MANDATORY_POLICY
{
  unsigned int Policy;
};

/* 1304 */
struct _TOKEN_ACCESS_INFORMATION
{
  _SID_AND_ATTRIBUTES_HASH *SidHash;
  _SID_AND_ATTRIBUTES_HASH *RestrictedSidHash;
  _TOKEN_PRIVILEGES *Privileges;
  _LUID AuthenticationId;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  unsigned int Flags;
  unsigned int AppContainerNumber;
  void *PackageSid;
  _SID_AND_ATTRIBUTES_HASH *CapabilitiesHash;
  void *TrustLevelSid;
  void *SecurityAttributes;
};

/* 1305 */
struct _ETW_PMC_SUPPORT
{
  _KPROFILE_SOURCE Source[4];
  volatile unsigned int HookIdCount;
  unsigned __int16 HookId[4];
  volatile unsigned int CountersCount;
  struct _HAL_PMC_COUNTERS *ProcessorCtrs[1];
};

/* 1306 */
struct _DISALLOWED_GUIDS
{
  unsigned __int16 Count;
  _GUID *Guids;
};

/* 1307 */
union $0B335040AE2A92C699D5A82B5E925D65
{
  _WMI_BUFFER_HEADER *BatchedBufferList;
  _EX_FAST_REF CurrentBuffer;
};

/* 1308 */
union $EB7A604849E41ECF6452249D2730BF2B
{
  unsigned int BufferListSpinLock;
  _EX_PUSH_LOCK BufferListPushLock;
};

/* 1309 */
struct $2AF65274B7DCBEC3818109A306490F2E
{
  unsigned __int32 Persistent : 1;
  unsigned __int32 AutoLogger : 1;
  unsigned __int32 FsReady : 1;
  unsigned __int32 RealTime : 1;
  unsigned __int32 Wow : 1;
  unsigned __int32 KernelTrace : 1;
  unsigned __int32 NoMoreEnable : 1;
  unsigned __int32 StackTracing : 1;
  unsigned __int32 ErrorLogged : 1;
  unsigned __int32 RealtimeLoggerContextFreed : 1;
  unsigned __int32 PebsTracing : 1;
  unsigned __int32 PmcCounters : 1;
  unsigned __int32 PageAlignBuffers : 1;
  unsigned __int32 StackLookasideListAllocated : 1;
  unsigned __int32 SecurityTrace : 1;
  unsigned __int32 SpareFlags1 : 1;
  unsigned __int32 SystemLoggerIndex : 8;
  unsigned __int32 StackCaching : 1;
  unsigned __int32 SpareFlags2 : 7;
};

/* 1310 */
union $3F98A709047F9387A0CD6FF4D0ABF9B2
{
  unsigned int Flags;
  $2AF65274B7DCBEC3818109A306490F2E __s1;
};

/* 1311 */
struct $0FF59C51F1799B9B876DCB1926B61079
{
  unsigned __int32 DbgRequestNewFile : 1;
  unsigned __int32 DbgRequestUpdateFile : 1;
  unsigned __int32 DbgRequestFlush : 1;
  unsigned __int32 DbgRequestDisableRealtime : 1;
  unsigned __int32 DbgRequestDisconnectConsumer : 1;
  unsigned __int32 DbgRequestConnectConsumer : 1;
  unsigned __int32 DbgRequestNotifyConsumer : 1;
  unsigned __int32 DbgRequestUpdateHeader : 1;
  unsigned __int32 DbgRequestDeferredFlush : 1;
  unsigned __int32 DbgRequestDeferredFlushTimer : 1;
  unsigned __int32 DbgRequestFlushTimer : 1;
  unsigned __int32 DbgRequestUpdateDebugger : 1;
  unsigned __int32 DbgSpareRequestFlags : 20;
};

/* 1312 */
union $1499890EFF5379A9AAD0A12DBC68A8C4
{
  volatile unsigned int RequestFlag;
  $0FF59C51F1799B9B876DCB1926B61079 __s1;
};

/* 1313 */
struct _WMI_LOGGER_CONTEXT
{
  unsigned int LoggerId;
  unsigned int BufferSize;
  unsigned int MaximumEventSize;
  unsigned int LoggerMode;
  int AcceptNewEvents;
  unsigned int EventMarker[1];
  unsigned int ErrorMarker;
  unsigned int SizeMask;
  __int64 (__cdecl *GetCpuClock)();
  _ETHREAD *LoggerThread;
  int LoggerStatus;
  unsigned int FailureReason;
  _ETW_BUFFER_QUEUE BufferQueue;
  _ETW_BUFFER_QUEUE OverflowQueue;
  _LIST_ENTRY GlobalList;
  _LIST_ENTRY ProviderBinaryList;
  $0B335040AE2A92C699D5A82B5E925D65 ___u16;
  _UNICODE_STRING LoggerName;
  _UNICODE_STRING LogFileName;
  _UNICODE_STRING LogFilePattern;
  _UNICODE_STRING NewLogFileName;
  unsigned int ClockType;
  unsigned int LastFlushedBuffer;
  unsigned int FlushTimer;
  unsigned int FlushThreshold;
  _LARGE_INTEGER ByteOffset;
  unsigned int MinimumBuffers;
  volatile int BuffersAvailable;
  volatile int NumberOfBuffers;
  unsigned int MaximumBuffers;
  volatile unsigned int EventsLost;
  volatile int PeakBuffersCount;
  unsigned int BuffersWritten;
  unsigned int LogBuffersLost;
  unsigned int RealTimeBuffersDelivered;
  unsigned int RealTimeBuffersLost;
  int *SequencePtr;
  unsigned int LocalSequence;
  _GUID InstanceGuid;
  unsigned int MaximumFileSize;
  int FileCounter;
  _POOL_TYPE PoolType;
  _ETW_REF_CLOCK ReferenceTime;
  int CollectionOn;
  unsigned int ProviderInfoSize;
  _LIST_ENTRY Consumers;
  unsigned int NumConsumers;
  _ETW_REALTIME_CONSUMER *TransitionConsumer;
  void *RealtimeLogfileHandle;
  _UNICODE_STRING RealtimeLogfileName;
  _LARGE_INTEGER RealtimeWriteOffset;
  _LARGE_INTEGER RealtimeReadOffset;
  _LARGE_INTEGER RealtimeLogfileSize;
  unsigned __int64 RealtimeLogfileUsage;
  unsigned __int64 RealtimeMaximumFileSize;
  unsigned int RealtimeBuffersSaved;
  _ETW_REF_CLOCK RealtimeReferenceTime;
  _ETW_RT_EVENT_LOSS NewRTEventsLost;
  _KEVENT LoggerEvent;
  _KEVENT FlushEvent;
  _KTIMER FlushTimeOutTimer;
  _KDPC LoggerDpc;
  _KMUTANT LoggerMutex;
  _EX_PUSH_LOCK LoggerLock;
  $EB7A604849E41ECF6452249D2730BF2B ___u64;
  _SECURITY_CLIENT_CONTEXT ClientSecurityContext;
  _TOKEN_ACCESS_INFORMATION *TokenAccessInformation;
  _EX_FAST_REF SecurityDescriptor;
  _LARGE_INTEGER StartTime;
  void *LogFileHandle;
  __int64 BufferSequenceNumber;
  $3F98A709047F9387A0CD6FF4D0ABF9B2 ___u71;
  $1499890EFF5379A9AAD0A12DBC68A8C4 ___u72;
  _RTL_BITMAP HookIdMap;
  struct _ETW_STACK_CACHE *StackCache;
  _ETW_PMC_SUPPORT *PmcData;
  _LIST_ENTRY WinRtProviderBinaryList;
  _WMI_BUFFER_HEADER **ScratchArray;
  _DISALLOWED_GUIDS DisallowedGuids;
  struct _ESILO *ServerSilo;
};

/* 1314 */
struct _ETW_LOGGER_HANDLE
{
  unsigned __int8 DereferenceAndLeave;
};

/* 1315 */
struct __declspec(align(8)) _ETW_LAST_ENABLE_INFO
{
  _LARGE_INTEGER EnableFlags;
  unsigned __int16 LoggerId;
  unsigned __int8 Level;
  unsigned __int8 Enabled : 1;
  unsigned __int8 InternalFlag : 7;
};

/* 1316 */
struct _TRACE_ENABLE_INFO
{
  unsigned int IsEnabled;
  unsigned __int8 Level;
  unsigned __int8 Reserved1;
  unsigned __int16 LoggerId;
  unsigned int EnableProperty;
  unsigned int Reserved2;
  unsigned __int64 MatchAnyKeyword;
  unsigned __int64 MatchAllKeyword;
};

/* 1317 */
struct _ETW_FILTER_PID
{
  unsigned int Count;
  unsigned int Pids[8];
};

/* 1318 */
struct _ETW_FILTER_STRING_TOKEN_ELEMENT
{
  unsigned __int16 Length;
  unsigned __int16 *String;
};

/* 1319 */
struct _ETW_FILTER_STRING_TOKEN
{
  unsigned __int16 Count;
  _ETW_FILTER_STRING_TOKEN_ELEMENT Tokens[1];
};

/* 1320 */
struct _EVENT_PAYLOAD_PREDICATE
{
  unsigned __int16 FieldIndex;
  unsigned __int16 CompareOp;
  unsigned __int64 Value[2];
};

/* 1321 */
struct _AGGREGATED_PAYLOAD_FILTER
{
  unsigned __int16 MagicValue : 12;
  unsigned __int16 DescriptorVersion : 4;
  unsigned __int16 Size;
  unsigned __int16 PredicateCount;
  unsigned __int16 Reserved;
  unsigned __int64 HashedEventIdBitmap;
  _GUID ProviderGuid;
  unsigned __int16 EachEventTableOffset;
  unsigned __int16 EachEventTableLength;
  unsigned __int16 PayloadDecoderTableOffset;
  unsigned __int16 PayloadDecoderTableLength;
  unsigned __int16 EventFilterTableOffset;
  unsigned __int16 EventFilterTableLength;
  unsigned __int16 UNICODEStringTableOffset;
  unsigned __int16 UNICODEStringTableLength;
  unsigned __int16 ANSIStringTableOffset;
  unsigned __int16 ANSIStringTableLength;
  _EVENT_PAYLOAD_PREDICATE PredicateTable[1];
};

/* 1322 */
struct _ETW_PAYLOAD_FILTER
{
  int RefCount;
  _AGGREGATED_PAYLOAD_FILTER PayloadFilter;
};

/* 1323 */
struct _EVENT_FILTER_HEADER
{
  unsigned __int16 Id;
  unsigned __int8 Version;
  unsigned __int8 Reserved[5];
  unsigned __int64 InstanceId;
  unsigned int Size;
  unsigned int NextOffset;
};

/* 1324 */
struct _ETW_FILTER_HEADER
{
  int FilterFlags;
  _ETW_FILTER_PID *PidFilter;
  _ETW_FILTER_STRING_TOKEN *ExeFilter;
  _ETW_FILTER_STRING_TOKEN *PkgIdFilter;
  _ETW_FILTER_STRING_TOKEN *PkgAppIdFilter;
  struct _ETW_PERFECT_HASH_FUNCTION *StackWalkFilter;
  struct _ETW_PERFECT_HASH_FUNCTION *EventIdFilter;
  _ETW_PAYLOAD_FILTER *PayloadFilter;
  _EVENT_FILTER_HEADER *ProviderSideFilter;
};

/* 1325 */
union $475BD992C2963CFEB74B727811FAE39B
{
  _ETW_LAST_ENABLE_INFO LastEnable;
  unsigned __int64 MatchId;
};

/* 1326 */
struct _ETW_GUID_ENTRY
{
  _LIST_ENTRY GuidList;
  volatile int RefCount;
  _GUID Guid;
  _LIST_ENTRY RegListHead;
  void *SecurityDescriptor;
  $475BD992C2963CFEB74B727811FAE39B ___u5;
  _TRACE_ENABLE_INFO ProviderEnableInfo;
  _TRACE_ENABLE_INFO EnableInfo[8];
  _ETW_FILTER_HEADER *FilterData;
  struct _ESILO *ServerSilo;
};

/* 1327 */
struct __declspec(align(8)) _ETW_SILODRIVERSTATE
{
  unsigned int EtwpSecurityProviderPID;
  _ETW_GUID_ENTRY EtwpSecurityProviderGuidEntry;
  unsigned int AuditLoggerId;
  unsigned __int64 EtwPsProvRegHandle;
  unsigned __int16 EtwpSecurityLoggers[8];
  unsigned __int8 EtwpSecurityProviderEnableMask;
  unsigned __int8 EtwpShutdownInProgress;
};

/* 1328 */
struct _SEP_TOKEN_PRIVILEGES
{
  unsigned __int64 Present;
  unsigned __int64 Enabled;
  unsigned __int64 EnabledByDefault;
};

/* 1329 */
struct _TOKEN_AUDIT_POLICY
{
  unsigned __int8 PerUserPolicy[30];
};

/* 1330 */
struct _SEP_AUDIT_POLICY
{
  _TOKEN_AUDIT_POLICY AdtTokenPolicy;
  unsigned __int8 PolicySetStatus;
};

/* 1331 */
struct _ACL
{
  unsigned __int8 AclRevision;
  unsigned __int8 Sbz1;
  unsigned __int16 AclSize;
  unsigned __int16 AceCount;
  unsigned __int16 Sbz2;
};

/* 1336 */
struct _SEP_LOWBOX_HANDLES_TABLE
{
  _EX_PUSH_LOCK Lock;
  _RTL_DYNAMIC_HASH_TABLE *HashTable;
};

/* 1340 */
struct _OB_HANDLE_REVOCATION_BLOCK
{
  _LIST_ENTRY RevocationInfos;
  _EX_PUSH_LOCK Lock;
  _EX_RUNDOWN_REF Rundown;
};

/* 1332 */
struct _SEP_LOGON_SESSION_REFERENCES
{
  _SEP_LOGON_SESSION_REFERENCES *Next;
  _LUID LogonId;
  _LUID BuddyLogonId;
  int ReferenceCount;
  unsigned int Flags;
  _DEVICE_MAP *pDeviceMap;
  void *Token;
  _UNICODE_STRING AccountName;
  _UNICODE_STRING AuthorityName;
  _SEP_LOWBOX_HANDLES_TABLE LowBoxHandlesTable;
  _EX_PUSH_LOCK SharedDataLock;
  _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION *SharedClaimAttributes;
  _SEP_SID_VALUES_BLOCK *SharedSidValues;
  _OB_HANDLE_REVOCATION_BLOCK RevocationBlock;
  struct _ESILO *ServerSilo;
};

/* 1334 */
struct _DEVICE_MAP
{
  _OBJECT_DIRECTORY *DosDevicesDirectory;
  _OBJECT_DIRECTORY *GlobalDosDevicesDirectory;
  void *DosDevicesDirectoryHandle;
  volatile int ReferenceCount;
  unsigned int DriveMap;
  unsigned __int8 DriveType[32];
};

/* 1338 */
struct _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION
{
  unsigned int DeviceGroupsCount;
  _SID_AND_ATTRIBUTES *pDeviceGroups;
  unsigned int RestrictedDeviceGroupsCount;
  _SID_AND_ATTRIBUTES *pRestrictedDeviceGroups;
  _SID_AND_ATTRIBUTES_HASH DeviceGroupsHash;
  _SID_AND_ATTRIBUTES_HASH RestrictedDeviceGroupsHash;
  _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION *pUserSecurityAttributes;
  _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION *pDeviceSecurityAttributes;
  _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION *pRestrictedUserSecurityAttributes;
  _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION *pRestrictedDeviceSecurityAttributes;
};

/* 1339 */
struct _SEP_SID_VALUES_BLOCK
{
  unsigned int BlockLength;
  int ReferenceCount;
  unsigned int SidCount;
  unsigned int SidValuesStart;
};

/* 1335 */
struct _OBJECT_DIRECTORY
{
  _OBJECT_DIRECTORY_ENTRY *HashBuckets[37];
  _EX_PUSH_LOCK Lock;
  _DEVICE_MAP *DeviceMap;
  _OBJECT_DIRECTORY *ShadowDirectory;
  unsigned int SessionId;
  void *NamespaceEntry;
  unsigned int Flags;
};

/* 1337 */
struct _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION
{
  unsigned int SecurityAttributeCount;
  _LIST_ENTRY SecurityAttributesList;
  unsigned int WorkingSecurityAttributeCount;
  _LIST_ENTRY WorkingSecurityAttributesList;
};

/* 1333 */
struct _OBJECT_DIRECTORY_ENTRY
{
  _OBJECT_DIRECTORY_ENTRY *ChainLink;
  void *Object;
  unsigned int HashValue;
};

/* 1341 */
struct _SEP_LOWBOX_NUMBER_ENTRY
{
  _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  int ReferenceCount;
  void *PackageSid;
  unsigned int LowboxNumber;
  void *AtomTable;
};

/* 1342 */
struct _SEP_LOWBOX_HANDLES_ENTRY
{
  _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  int ReferenceCount;
  void *PackageSid;
  unsigned int HandleCount;
  void **Handles;
};

/* 1343 */
struct __declspec(align(8)) _TOKEN
{
  _TOKEN_SOURCE TokenSource;
  _LUID TokenId;
  _LUID AuthenticationId;
  _LUID ParentTokenId;
  _LARGE_INTEGER ExpirationTime;
  _ERESOURCE *TokenLock;
  _LUID ModifiedId;
  _SEP_TOKEN_PRIVILEGES Privileges;
  _SEP_AUDIT_POLICY AuditPolicy;
  unsigned int SessionId;
  unsigned int UserAndGroupCount;
  unsigned int RestrictedSidCount;
  unsigned int VariableLength;
  unsigned int DynamicCharged;
  unsigned int DynamicAvailable;
  unsigned int DefaultOwnerIndex;
  _SID_AND_ATTRIBUTES *UserAndGroups;
  _SID_AND_ATTRIBUTES *RestrictedSids;
  void *PrimaryGroup;
  unsigned int *DynamicPart;
  _ACL *DefaultDacl;
  _TOKEN_TYPE TokenType;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned int TokenFlags;
  unsigned __int8 TokenInUse;
  unsigned int IntegrityLevelIndex;
  unsigned int MandatoryPolicy;
  _SEP_LOGON_SESSION_REFERENCES *LogonSession;
  _LUID OriginatingLogonSession;
  _SID_AND_ATTRIBUTES_HASH SidHash;
  _SID_AND_ATTRIBUTES_HASH RestrictedSidHash;
  _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION *pSecurityAttributes;
  void *Package;
  _SID_AND_ATTRIBUTES *Capabilities;
  unsigned int CapabilityCount;
  _SID_AND_ATTRIBUTES_HASH CapabilitiesHash;
  _SEP_LOWBOX_NUMBER_ENTRY *LowboxNumberEntry;
  _SEP_LOWBOX_HANDLES_ENTRY *LowboxHandlesEntry;
  _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION *pClaimAttributes;
  void *TrustLevelSid;
  _TOKEN *TrustLinkedToken;
  void *IntegrityLevelSidValue;
  _SEP_SID_VALUES_BLOCK *TokenSidValues;
  unsigned int VariablePart;
};

/* 1344 */
struct _OBJECT_HEADER_QUOTA_INFO
{
  unsigned int PagedPoolCharge;
  unsigned int NonPagedPoolCharge;
  unsigned int SecurityDescriptorCharge;
  void *SecurityDescriptorQuotaBlock;
};

/* 1345 */
struct _OBJECT_HEADER_PROCESS_INFO
{
  _EPROCESS *ExclusiveProcess;
  unsigned int Reserved;
};

/* 1346 */
struct _OBJECT_HANDLE_COUNT_ENTRY
{
  _EPROCESS *Process;
  unsigned __int32 HandleCount : 24;
  unsigned __int32 LockCount : 8;
};

/* 1347 */
struct _OBJECT_HANDLE_COUNT_DATABASE
{
  unsigned int CountEntries;
  _OBJECT_HANDLE_COUNT_ENTRY HandleCountEntries[1];
};

/* 1348 */
union $976CC150AA43DD0BA8C47D700AF80ED1
{
  _OBJECT_HANDLE_COUNT_DATABASE *HandleCountDataBase;
  _OBJECT_HANDLE_COUNT_ENTRY SingleEntry;
};

/* 1349 */
struct _OBJECT_HEADER_HANDLE_INFO
{
  $976CC150AA43DD0BA8C47D700AF80ED1 ___u0;
};

/* 1350 */
struct _OBJECT_HEADER_NAME_INFO
{
  _OBJECT_DIRECTORY *Directory;
  _UNICODE_STRING Name;
  int ReferenceCount;
};

/* 1351 */
struct _OBJECT_HEADER_CREATOR_INFO
{
  _LIST_ENTRY TypeList;
  void *CreatorUniqueProcess;
  unsigned __int16 CreatorBackTraceIndex;
  unsigned __int16 Reserved;
};

/* 1352 */
struct _OBJECT_HEADER_AUDIT_INFO
{
  void *SecurityDescriptor;
  unsigned int Reserved;
};

/* 1353 */
struct _OBJECT_HEADER_HANDLE_REVOCATION_INFO
{
  _LIST_ENTRY ListEntry;
  _OB_HANDLE_REVOCATION_BLOCK *RevocationBlock;
  unsigned __int8 Padding1[4];
};

/* 1354 */
struct _OBP_LOOKUP_CONTEXT
{
  _OBJECT_DIRECTORY *Directory;
  void *Object;
  _OBJECT_DIRECTORY_ENTRY **EntryLink;
  unsigned int HashValue;
  unsigned __int16 HashIndex;
  unsigned __int8 DirectoryLocked;
  unsigned __int8 LockedExclusive;
  unsigned int LockStateSignature;
};

/* 1355 */
struct _OBP_SYSTEM_DOS_DEVICE_STATE
{
  unsigned int GlobalDeviceMap;
  unsigned int LocalDeviceCount[26];
};

/* 1356 */
struct _OBP_SILODRIVERSTATE
{
  _DEVICE_MAP *SystemDeviceMap;
  _OBP_SYSTEM_DOS_DEVICE_STATE SystemDosDeviceState;
  _EX_PUSH_LOCK DeviceMapLock;
};

/* 1357 */
struct _WHEAP_ERROR_SOURCE_TABLE
{
  unsigned int Signature;
  int Count;
  _LIST_ENTRY Items;
  _KEVENT InsertLock;
};

/* 1358 */
struct _WHEAP_WORK_QUEUE
{
  _LIST_ENTRY ListHead;
  unsigned int ListLock;
  volatile int ItemCount;
  _KDPC Dpc;
  _WORK_QUEUE_ITEM WorkItem;
  void (__cdecl *WorkRoutine)(_WHEAP_WORK_QUEUE *, _LIST_ENTRY *);
};

/* 1359 */
struct _WHEAP_INFO_BLOCK
{
  unsigned int ErrorSourceCount;
  _WHEAP_ERROR_SOURCE_TABLE *ErrorSourceTable;
  _WHEAP_WORK_QUEUE *WorkQueue;
};

/* 1360 */
struct $978CB274F65821CF87196E7A5560085B
{
  unsigned __int32 Preallocated : 1;
  unsigned __int32 FromPersistentStore : 1;
  unsigned __int32 PlatformPfaControl : 1;
  unsigned __int32 PlatformDirectedOffline : 1;
  unsigned __int32 Reserved : 28;
};

/* 1361 */
union _WHEAP_ERROR_RECORD_WRAPPER_FLAGS
{
  $978CB274F65821CF87196E7A5560085B __s0;
  unsigned int AsULONG;
};

/* 1364 */
struct $BEDAFFCF8B2FE2B464F6E114319CEB5E
{
  unsigned __int32 MCG_CapabilityRW : 1;
  unsigned __int32 MCG_GlobalControlRW : 1;
  unsigned __int32 Reserved : 30;
};

/* 1365 */
union _XPF_MCE_FLAGS
{
  $BEDAFFCF8B2FE2B464F6E114319CEB5E __s0;
  unsigned int AsULONG;
};

/* 1366 */
struct $DD3EFD26B55353E648024B9E0E8957B6
{
  unsigned __int8 ClearOnInitializationRW : 1;
  unsigned __int8 ControlDataRW : 1;
  unsigned __int8 Reserved : 6;
};

/* 1367 */
union _XPF_MC_BANK_FLAGS
{
  $DD3EFD26B55353E648024B9E0E8957B6 __s0;
  unsigned __int8 AsUCHAR;
};

/* 1368 */
struct __unaligned __declspec(align(4)) _WHEA_XPF_MC_BANK_DESCRIPTOR
{
  unsigned __int8 BankNumber;
  unsigned __int8 ClearOnInitialization;
  unsigned __int8 StatusDataFormat;
  _XPF_MC_BANK_FLAGS Flags;
  unsigned int ControlMsr;
  unsigned int StatusMsr;
  unsigned int AddressMsr;
  unsigned int MiscMsr;
  unsigned __int64 ControlData;
};

/* 1369 */
struct _WHEA_XPF_MCE_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 NumberOfBanks;
  _XPF_MCE_FLAGS Flags;
  unsigned __int64 MCG_Capability;
  unsigned __int64 MCG_GlobalControl;
  _WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];
};

/* 1370 */
struct $D9F8BA727F02FA7D5CD681B2EFB762AC
{
  unsigned __int16 PollIntervalRW : 1;
  unsigned __int16 SwitchToPollingThresholdRW : 1;
  unsigned __int16 SwitchToPollingWindowRW : 1;
  unsigned __int16 ErrorThresholdRW : 1;
  unsigned __int16 ErrorThresholdWindowRW : 1;
  unsigned __int16 Reserved : 11;
};

/* 1371 */
union _WHEA_NOTIFICATION_FLAGS
{
  $D9F8BA727F02FA7D5CD681B2EFB762AC __s0;
  unsigned __int16 AsUSHORT;
};

/* 1372 */
struct $87B1EB75E3F8B7E7A5154BA9A750B013
{
  unsigned int PollInterval;
};

/* 1373 */
struct $14FDC6AF8D27250B1B67344E0F6A0113
{
  unsigned int PollInterval;
  unsigned int Vector;
  unsigned int SwitchToPollingThreshold;
  unsigned int SwitchToPollingWindow;
  unsigned int ErrorThreshold;
  unsigned int ErrorThresholdWindow;
};

/* 1374 */
union $9432111A36EE77A0F5A71806E7EBCA4E
{
  $87B1EB75E3F8B7E7A5154BA9A750B013 Polled;
  $14FDC6AF8D27250B1B67344E0F6A0113 Interrupt;
  $14FDC6AF8D27250B1B67344E0F6A0113 LocalInterrupt;
  $14FDC6AF8D27250B1B67344E0F6A0113 Sci;
  $14FDC6AF8D27250B1B67344E0F6A0113 Nmi;
};

/* 1375 */
struct _WHEA_NOTIFICATION_DESCRIPTOR
{
  unsigned __int8 Type;
  unsigned __int8 Length;
  _WHEA_NOTIFICATION_FLAGS Flags;
  $9432111A36EE77A0F5A71806E7EBCA4E u;
};

/* 1376 */
struct _WHEA_XPF_CMC_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 NumberOfBanks;
  unsigned int Reserved;
  _WHEA_NOTIFICATION_DESCRIPTOR Notify;
  _WHEA_XPF_MC_BANK_DESCRIPTOR Banks[32];
};

/* 1377 */
struct __unaligned __declspec(align(1)) _WHEA_XPF_NMI_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
};

/* 1378 */
struct _WHEA_IPF_MCA_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
};

/* 1379 */
struct _WHEA_IPF_CMC_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
};

/* 1380 */
struct _WHEA_IPF_CPE_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
};

/* 1381 */
struct $A9FC48894F8D14019CAF4D8F08A526D6
{
  unsigned __int32 DeviceNumber : 5;
  unsigned __int32 FunctionNumber : 3;
  unsigned __int32 Reserved : 24;
};

/* 1382 */
union $16621E9B6C324DDC94D506B5623FD4FD
{
  $A9FC48894F8D14019CAF4D8F08A526D6 bits;
  unsigned int AsULONG;
};

/* 1383 */
struct _WHEA_PCI_SLOT_NUMBER
{
  $16621E9B6C324DDC94D506B5623FD4FD u;
};

/* 1384 */
struct $EFF43A9EAE4B7B62E532E338439EC9F9
{
  unsigned __int16 UncorrectableErrorMaskRW : 1;
  unsigned __int16 UncorrectableErrorSeverityRW : 1;
  unsigned __int16 CorrectableErrorMaskRW : 1;
  unsigned __int16 AdvancedCapsAndControlRW : 1;
  unsigned __int16 RootErrorCommandRW : 1;
  unsigned __int16 Reserved : 11;
};

/* 1385 */
union _AER_ROOTPORT_DESCRIPTOR_FLAGS
{
  $EFF43A9EAE4B7B62E532E338439EC9F9 __s0;
  unsigned __int16 AsUSHORT;
};

/* 1386 */
struct _WHEA_AER_ROOTPORT_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
  unsigned int BusNumber;
  _WHEA_PCI_SLOT_NUMBER Slot;
  unsigned __int16 DeviceControl;
  _AER_ROOTPORT_DESCRIPTOR_FLAGS Flags;
  unsigned int UncorrectableErrorMask;
  unsigned int UncorrectableErrorSeverity;
  unsigned int CorrectableErrorMask;
  unsigned int AdvancedCapsAndControl;
  unsigned int RootErrorCommand;
};

/* 1387 */
struct $644EF056A6BCD34BEB130C59ECDD245F
{
  unsigned __int16 UncorrectableErrorMaskRW : 1;
  unsigned __int16 UncorrectableErrorSeverityRW : 1;
  unsigned __int16 CorrectableErrorMaskRW : 1;
  unsigned __int16 AdvancedCapsAndControlRW : 1;
  unsigned __int16 Reserved : 12;
};

/* 1388 */
union _AER_ENDPOINT_DESCRIPTOR_FLAGS
{
  $644EF056A6BCD34BEB130C59ECDD245F __s0;
  unsigned __int16 AsUSHORT;
};

/* 1389 */
struct _WHEA_AER_ENDPOINT_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
  unsigned int BusNumber;
  _WHEA_PCI_SLOT_NUMBER Slot;
  unsigned __int16 DeviceControl;
  _AER_ENDPOINT_DESCRIPTOR_FLAGS Flags;
  unsigned int UncorrectableErrorMask;
  unsigned int UncorrectableErrorSeverity;
  unsigned int CorrectableErrorMask;
  unsigned int AdvancedCapsAndControl;
};

/* 1390 */
struct $DA323376D87A17572D4BAAC59ACA696A
{
  unsigned __int16 UncorrectableErrorMaskRW : 1;
  unsigned __int16 UncorrectableErrorSeverityRW : 1;
  unsigned __int16 CorrectableErrorMaskRW : 1;
  unsigned __int16 AdvancedCapsAndControlRW : 1;
  unsigned __int16 SecondaryUncorrectableErrorMaskRW : 1;
  unsigned __int16 SecondaryUncorrectableErrorSevRW : 1;
  unsigned __int16 SecondaryCapsAndControlRW : 1;
  unsigned __int16 Reserved : 9;
};

/* 1391 */
union _AER_BRIDGE_DESCRIPTOR_FLAGS
{
  $DA323376D87A17572D4BAAC59ACA696A __s0;
  unsigned __int16 AsUSHORT;
};

/* 1392 */
struct _WHEA_AER_BRIDGE_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Enabled;
  unsigned __int8 Reserved;
  unsigned int BusNumber;
  _WHEA_PCI_SLOT_NUMBER Slot;
  unsigned __int16 DeviceControl;
  _AER_BRIDGE_DESCRIPTOR_FLAGS Flags;
  unsigned int UncorrectableErrorMask;
  unsigned int UncorrectableErrorSeverity;
  unsigned int CorrectableErrorMask;
  unsigned int AdvancedCapsAndControl;
  unsigned int SecondaryUncorrectableErrorMask;
  unsigned int SecondaryUncorrectableErrorSev;
  unsigned int SecondaryCapsAndControl;
};

/* 1393 */
struct __unaligned __declspec(align(4)) _WHEA_GENERIC_ERROR_DESCRIPTOR
{
  unsigned __int16 Type;
  unsigned __int8 Reserved;
  unsigned __int8 Enabled;
  unsigned int ErrStatusBlockLength;
  unsigned int RelatedErrorSourceId;
  unsigned __int8 ErrStatusAddressSpaceID;
  unsigned __int8 ErrStatusAddressBitWidth;
  unsigned __int8 ErrStatusAddressBitOffset;
  unsigned __int8 ErrStatusAddressAccessSize;
  _LARGE_INTEGER ErrStatusAddress;
  _WHEA_NOTIFICATION_DESCRIPTOR Notify;
};

/* 1394 */
union __unaligned __declspec(align(4)) $21B8BF7F076ADAD6722505A17C87FF6E
{
  _WHEA_XPF_MCE_DESCRIPTOR XpfMceDescriptor;
  _WHEA_XPF_CMC_DESCRIPTOR XpfCmcDescriptor;
  _WHEA_XPF_NMI_DESCRIPTOR XpfNmiDescriptor;
  _WHEA_IPF_MCA_DESCRIPTOR IpfMcaDescriptor;
  _WHEA_IPF_CMC_DESCRIPTOR IpfCmcDescriptor;
  _WHEA_IPF_CPE_DESCRIPTOR IpfCpeDescriptor;
  _WHEA_AER_ROOTPORT_DESCRIPTOR AerRootportDescriptor;
  _WHEA_AER_ENDPOINT_DESCRIPTOR AerEndpointDescriptor;
  _WHEA_AER_BRIDGE_DESCRIPTOR AerBridgeDescriptor;
  _WHEA_GENERIC_ERROR_DESCRIPTOR GenErrDescriptor;
};

/* 1395 */
struct _WHEA_ERROR_SOURCE_DESCRIPTOR
{
  unsigned int Length;
  unsigned int Version;
  _WHEA_ERROR_SOURCE_TYPE Type;
  _WHEA_ERROR_SOURCE_STATE State;
  unsigned int MaxRawDataLength;
  unsigned int NumRecordsToPreallocate;
  unsigned int MaxSectionsPerRecord;
  unsigned int ErrorSourceId;
  unsigned int PlatformErrorSourceId;
  unsigned int Flags;
  $21B8BF7F076ADAD6722505A17C87FF6E Info;
};

/* 1362 */
struct __declspec(align(4)) _WHEAP_ERROR_SOURCE
{
  _LIST_ENTRY ListEntry;
  unsigned int FailedAllocations;
  unsigned int PlatformErrorSourceId;
  int ErrorCount;
  unsigned int RecordCount;
  unsigned int RecordLength;
  unsigned int PoolTag;
  _WHEA_ERROR_SOURCE_TYPE Type;
  _WHEAP_ERROR_RECORD_WRAPPER *Records;
  void *Context;
  unsigned int SectionCount;
  unsigned int SectionLength;
  _LARGE_INTEGER TickCountAtLastError;
  unsigned int AccumulatedErrors;
  unsigned int TotalErrors;
  unsigned __int8 Deferred;
  __unaligned __declspec(align(1)) _WHEA_ERROR_SOURCE_DESCRIPTOR Descriptor;
};

/* 1363 */
struct __unaligned __declspec(align(4)) _WHEAP_ERROR_RECORD_WRAPPER
{
  _LIST_ENTRY WorkEntry;
  unsigned int Length;
  unsigned int ProcessorNumber;
  _WHEAP_ERROR_RECORD_WRAPPER_FLAGS Flags;
  volatile int InUse;
  _WHEAP_ERROR_SOURCE *ErrorSource;
  _WHEA_ERROR_RECORD ErrorRecord;
};

/* 1412 */
struct _ISRDPCSTATS
{
  unsigned __int64 IsrTime;
  unsigned __int64 IsrTimeStart;
  unsigned __int64 IsrCount;
  unsigned __int64 DpcTime;
  unsigned __int64 DpcTimeStart;
  unsigned __int64 DpcCount;
  unsigned __int8 IsrActive;
  unsigned __int8 Reserved[15];
};

/* 1396 */
struct __declspec(align(8)) _KINTERRUPT
{
  __int16 Type;
  __int16 Size;
  _LIST_ENTRY InterruptListEntry;
  unsigned __int8 (__cdecl *ServiceRoutine)(_KINTERRUPT *, void *);
  unsigned __int8 (__cdecl *MessageServiceRoutine)(_KINTERRUPT *, void *, unsigned int);
  unsigned int MessageIndex;
  void *ServiceContext;
  unsigned int SpinLock;
  unsigned int TickCount;
  unsigned int *ActualLock;
  void (__cdecl *DispatchAddress)();
  unsigned int Vector;
  unsigned __int8 Irql;
  unsigned __int8 SynchronizeIrql;
  unsigned __int8 FloatingSave;
  unsigned __int8 Connected;
  unsigned int Number;
  unsigned __int8 ShareVector;
  unsigned __int8 EmulateActiveBoth;
  unsigned __int16 ActiveCount;
  int InternalState;
  _KINTERRUPT_MODE Mode;
  _KINTERRUPT_POLARITY Polarity;
  unsigned int ServiceCount;
  unsigned int DispatchCount;
  _KEVENT *PassiveEvent;
  _KTRAP_FRAME *TrapFrame;
  void *DisconnectData;
  _KTHREAD *volatile ServiceThread;
  _INTERRUPT_CONNECTION_DATA *ConnectionData;
  void *IntTrackEntry;
  _ISRDPCSTATS IsrDpcStats;
  void *RedirectObject;
};

/* 1397 */
struct $2E2EAE941D6F4065A6CB614B2DE82121
{
  unsigned int MessageAddressLow;
  unsigned __int16 MessageData;
  unsigned __int16 Reserved;
};

/* 1398 */
union $38F60A843C1F8B936ED36B0BE4250847
{
  _ULARGE_INTEGER RemappedFormat;
  $2E2EAE941D6F4065A6CB614B2DE82121 Msi;
};

/* 1399 */
struct _INTERRUPT_REMAPPING_INFO
{
  unsigned __int32 IrtIndex : 30;
  unsigned __int32 FlagHalInternal : 1;
  unsigned __int32 FlagTranslated : 1;
  $38F60A843C1F8B936ED36B0BE4250847 u;
};

/* 1400 */
struct $9C4F338B70295F7B2047FA8931243165
{
  unsigned int Gsiv;
  unsigned __int32 WakeInterrupt : 1;
  unsigned __int32 ReservedFlags : 31;
};

/* 1401 */
struct __declspec(align(8)) $C923A7D0B7B3CF6972294148A8EBC9EC
{
  _LARGE_INTEGER Address;
  unsigned int DataPayload;
};

/* 1402 */
struct $3C1E9E4708EBAE61D43932A7869951A5
{
  unsigned __int32 Mask : 1;
  unsigned __int32 Polarity : 1;
  unsigned __int32 MessageType : 3;
  unsigned __int32 RequestEOI : 1;
  unsigned __int32 DestinationMode : 1;
  unsigned __int32 MessageType3 : 1;
  unsigned __int32 Destination : 8;
  unsigned __int32 Vector : 8;
  unsigned __int32 ExtendedAddress : 8;
};

/* 1403 */
union $4AEF123D07335907D9DACB8A28474897
{
  $3C1E9E4708EBAE61D43932A7869951A5 bits;
  unsigned int AsULONG;
};

/* 1404 */
struct $11B5995CD74C8881485839146C6A8D8D
{
  unsigned __int32 ExtendedDestination : 24;
  unsigned __int32 Reserved : 6;
  unsigned __int32 PassPW : 1;
  unsigned __int32 WaitingForEOI : 1;
};

/* 1405 */
union $2AA6CC93F39A0540C8B29CF49D055DE8
{
  $11B5995CD74C8881485839146C6A8D8D bits;
  unsigned int AsULONG;
};

/* 1406 */
struct _INTERRUPT_HT_INTR_INFO
{
  $4AEF123D07335907D9DACB8A28474897 LowPart;
  $2AA6CC93F39A0540C8B29CF49D055DE8 HighPart;
};

/* 1407 */
struct $DC79F7162341FA13781A9A25157BE1C6
{
  _INTERRUPT_HT_INTR_INFO IntrInfo;
};

/* 1408 */
struct $B79743A30AF84E36BB17AC2314D39F6D
{
  HAL_APIC_DESTINATION_MODE DestinationMode;
};

/* 1409 */
union $EE2B73A9E269698E2FB7FF730D045D29
{
  $C923A7D0B7B3CF6972294148A8EBC9EC XapicMessage;
  $DC79F7162341FA13781A9A25157BE1C6 Hypertransport;
  $C923A7D0B7B3CF6972294148A8EBC9EC GenericMessage;
  $B79743A30AF84E36BB17AC2314D39F6D MessageRequest;
};

/* 1410 */
struct _INTERRUPT_VECTOR_DATA
{
  INTERRUPT_CONNECTION_TYPE Type;
  unsigned int Vector;
  unsigned __int8 Irql;
  _KINTERRUPT_POLARITY Polarity;
  _KINTERRUPT_MODE Mode;
  _GROUP_AFFINITY TargetProcessors;
  _INTERRUPT_REMAPPING_INFO IntRemapInfo;
  $9C4F338B70295F7B2047FA8931243165 ControllerInput;
  $EE2B73A9E269698E2FB7FF730D045D29 ___u8;
};

/* 1411 */
struct _INTERRUPT_CONNECTION_DATA
{
  unsigned int Count;
  _INTERRUPT_VECTOR_DATA Vectors[1];
};

/* 1413 */
struct _KSECONDARY_IDT_ENTRY
{
  unsigned int SpinLock;
  _KEVENT ConnectLock;
  unsigned __int8 LineMasked;
  _KINTERRUPT *InterruptList;
};

/* 1414 */
struct _VI_POOL_PAGE_HEADER
{
  _SINGLE_LIST_ENTRY *NextPage;
  void *VerifierEntry;
  unsigned int Signature;
};

/* 1415 */
struct _VI_POOL_ENTRY_INUSE
{
  void *VirtualAddress;
  void *CallingAddress;
  unsigned int NumberOfBytes;
  unsigned int Tag;
};

/* 1416 */
union $9D23989E10832CA2232AA4604C77D935
{
  _VI_POOL_PAGE_HEADER PageHeader;
  _VI_POOL_ENTRY_INUSE InUse;
  _SINGLE_LIST_ENTRY *NextFree;
};

/* 1417 */
struct _VI_POOL_ENTRY
{
  $9D23989E10832CA2232AA4604C77D935 ___u0;
};

/* 1418 */
struct _MI_VERIFIER_POOL_HEADER
{
  _VI_POOL_ENTRY *VerifierPoolEntry;
};

/* 1419 */
struct $98ECDBB4E55AE3E0DD8ADCCB783452BE
{
  _SINGLE_LIST_ENTRY FreeEntry;
  unsigned int Reserved0;
};

/* 1420 */
union $EC17B2346E28280FC825806BC2476F71
{
  _LIST_ENTRY Entry;
  $98ECDBB4E55AE3E0DD8ADCCB783452BE __s1;
};

/* 1421 */
struct _LPCP_MESSAGE
{
  $EC17B2346E28280FC825806BC2476F71 ___u0;
  void *SenderPort;
  _ETHREAD *RepliedToThread;
  void *PortContext;
  _PORT_MESSAGE Request;
};

/* 1422 */
struct _TraceLoggingMetadata_t
{
  unsigned int Signature;
  unsigned __int16 Size;
  unsigned __int8 Version;
  unsigned __int8 Flags;
  unsigned __int64 Magic;
};

/* 1423 */
struct _SYSPTES_HEADER
{
  _LIST_ENTRY ListHead[16];
  unsigned int Count;
  unsigned int NumberOfEntries;
  unsigned int NumberOfEntriesPeak;
};

/* 1424 */
struct _POOL_TRACKER_BIG_PAGES
{
  volatile unsigned int Va;
  unsigned int Key;
  unsigned __int32 Pattern : 8;
  unsigned __int32 PoolType : 12;
  unsigned __int32 SlushSize : 12;
  unsigned int NumberOfBytes;
};

/* 1425 */
struct _CM_KEY_HASH
{
  unsigned int ConvKey;
  _CM_KEY_HASH *NextHash;
  _HHIVE *KeyHive;
  unsigned int KeyCell;
};

/* 1472 */
struct $05688C56D9EDD358D71C9E1ABDC7FBE7
{
  unsigned int ConvKey;
  _CM_KEY_HASH *NextHash;
  _HHIVE *KeyHive;
  unsigned int KeyCell;
};

/* 1473 */
union $B69CB6133EB364ACF09EC2478B9BC7E4
{
  _CM_KEY_HASH KeyHash;
  $05688C56D9EDD358D71C9E1ABDC7FBE7 __s1;
};

/* 1474 */
union $35A40CFF4C0A34A932194C81E50485B2
{
  _KTHREAD *Owner;
  int SharedCount;
};

/* 1432 */
union $DDA66B11C919A1295A94259C8BD2593F
{
  unsigned int ValueList;
  _CM_KEY_CONTROL_BLOCK *RealKcb;
};

/* 1433 */
struct _CACHED_CHILD_LIST
{
  unsigned int Count;
  $DDA66B11C919A1295A94259C8BD2593F ___u1;
};

/* 1475 */
union $3A9DE5601AF199F0E45D74E8125AB0C2
{
  _CM_INDEX_HINT_BLOCK *IndexHint;
  unsigned int HashKey;
  unsigned int SubKeyCount;
};

/* 1476 */
union $F41F4CBDEBD54283006967BD2DA15131
{
  _LIST_ENTRY KeyBodyListHead;
  _LIST_ENTRY FreeListEntry;
};

/* 1477 */
union $8E24682DF5F57B0AFB6734C8D97ED56D
{
  _LIST_ENTRY DelayQueueEntry;
  volatile unsigned __int8 *Stolen;
};

/* 1466 */
struct _CM_INTENT_LOCK
{
  unsigned int OwnerCount;
  _CM_KCB_UOW **OwnerTable;
};

/* 1426 */
struct _CM_KEY_CONTROL_BLOCK
{
  unsigned int RefCount;
  unsigned __int32 ExtFlags : 16;
  unsigned __int32 PrivateAlloc : 1;
  unsigned __int32 Delete : 1;
  unsigned __int32 HiveUnloaded : 1;
  unsigned __int32 Decommissioned : 1;
  unsigned __int32 LockTablePresent : 1;
  unsigned __int32 TotalLevels : 10;
  unsigned __int32 : 1;
  unsigned __int32 DelayedDeref : 1;
  unsigned __int32 DelayedClose : 1;
  unsigned __int32 Parking : 1;
  $B69CB6133EB364ACF09EC2478B9BC7E4 ___u11;
  _EX_PUSH_LOCK KcbPushlock;
  $35A40CFF4C0A34A932194C81E50485B2 ___u13;
  unsigned int SlotHint;
  _CM_KEY_CONTROL_BLOCK *ParentKcb;
  _CM_NAME_CONTROL_BLOCK *NameBlock;
  _CM_KEY_SECURITY_CACHE *CachedSecurity;
  _CACHED_CHILD_LIST ValueCache;
  $3A9DE5601AF199F0E45D74E8125AB0C2 ___u19;
  $F41F4CBDEBD54283006967BD2DA15131 ___u20;
  _CM_KEY_BODY *KeyBodyArray[4];
  _LARGE_INTEGER KcbLastWriteTime;
  unsigned __int16 KcbMaxNameLen;
  unsigned __int16 KcbMaxValueNameLen;
  unsigned int KcbMaxValueDataLen;
  unsigned __int32 KcbUserFlags : 4;
  unsigned __int32 KcbVirtControlFlags : 4;
  unsigned __int32 KcbDebug : 8;
  unsigned __int32 Flags : 16;
  _LIST_ENTRY KCBUoWListHead;
  $8E24682DF5F57B0AFB6734C8D97ED56D ___u31;
  _CM_TRANS *TransKCBOwner;
  _CM_INTENT_LOCK KCBLock;
  _CM_INTENT_LOCK KeyLock;
  _CHILD_LIST TransValueCache;
  _CM_TRANS *TransValueListOwner;
  _UNICODE_STRING *FullKCBName;
};

/* 1427 */
struct _CM_NAME_HASH
{
  unsigned int ConvKey;
  _CM_NAME_HASH *NextHash;
  unsigned __int16 NameLength;
  wchar_t Name[1];
};

/* 1428 */
struct $D3B1EB9117A05EEBF3C8EA87873A1B77
{
  unsigned int ConvKey;
  _CM_KEY_HASH *NextHash;
  unsigned __int16 NameLength;
  wchar_t Name[1];
};

/* 1429 */
union __unaligned __declspec(align(4)) $D0D5075AE9F980C940A609A59E0ABB85
{
  _CM_NAME_HASH NameHash;
  $D3B1EB9117A05EEBF3C8EA87873A1B77 __s1;
};

/* 1430 */
struct _CM_NAME_CONTROL_BLOCK
{
  unsigned __int32 Compressed : 1;
  unsigned __int32 RefCount : 31;
  __unaligned __declspec(align(1)) $D0D5075AE9F980C940A609A59E0ABB85 ___u2;
};

/* 1431 */
struct _CM_KEY_SECURITY_CACHE
{
  unsigned int Cell;
  unsigned int ConvKey;
  _LIST_ENTRY List;
  unsigned int DescriptorLength;
  unsigned int RealRefCount;
  _SECURITY_DESCRIPTOR_RELATIVE Descriptor;
};

/* 1434 */
struct _CM_INDEX_HINT_BLOCK
{
  unsigned int Count;
  unsigned int HashKey[1];
};

/* 1435 */
struct _CM_KEY_BODY
{
  unsigned int Type;
  _CM_KEY_CONTROL_BLOCK *KeyControlBlock;
  _CM_NOTIFY_BLOCK *NotifyBlock;
  void *ProcessID;
  _LIST_ENTRY KeyBodyList;
  unsigned __int32 Flags : 16;
  unsigned __int32 HandleTags : 16;
  void *KtmTrans;
  _GUID *KtmUow;
  _LIST_ENTRY ContextListHead;
};

/* 1465 */
struct __declspec(align(8)) _CM_TRANS
{
  _LIST_ENTRY TransactionListEntry;
  _LIST_ENTRY KCBUoWListHead;
  _LIST_ENTRY LazyCommitListEntry;
  void *KtmTrans;
  _CM_RM *CmRm;
  _KENLISTMENT *KtmEnlistmentObject;
  void *KtmEnlistmentHandle;
  _GUID KtmUow;
  unsigned __int64 StartLsn;
  unsigned int TransState;
  unsigned int HiveCount;
  _CMHIVE *HiveArray[7];
};

/* 1467 */
struct $1231F60671E835D6A95E500850B7547A
{
  _CM_KEY_CONTROL_BLOCK *ChildKCB;
  unsigned int NewValueCell;
};

/* 1468 */
struct $0E66FB96A0CF35D81672DAE5FAFAF28D
{
  unsigned int VolatileKeyCell;
  _CM_KEY_CONTROL_BLOCK *NewChildKCB;
};

/* 1469 */
struct $2C3713C99DC66358FC4F4F7CB2A438BF
{
  unsigned int OldValueCell;
  unsigned int ThisVolatileKeyCell;
};

/* 1470 */
union $FBF42D448BBDEE464E34417970C581B1
{
  $1231F60671E835D6A95E500850B7547A __s0;
  $0E66FB96A0CF35D81672DAE5FAFAF28D __s1;
  $2C3713C99DC66358FC4F4F7CB2A438BF __s2;
  unsigned int UserFlags;
  _LARGE_INTEGER LastWriteTime;
  unsigned int TxSecurityCell;
  _CM_KEY_CONTROL_BLOCK *OldChildKCB;
  _CM_KEY_CONTROL_BLOCK *OtherChildKCB;
};

/* 1471 */
struct _CM_KCB_UOW
{
  _LIST_ENTRY TransactionListEntry;
  _CM_INTENT_LOCK *KCBLock;
  _CM_INTENT_LOCK *KeyLock;
  _LIST_ENTRY KCBListEntry;
  _CM_KEY_CONTROL_BLOCK *KeyControlBlock;
  _CM_TRANS *Transaction;
  unsigned int UoWState;
  UoWActionType ActionType;
  HSTORAGE_TYPE StorageType;
  $FBF42D448BBDEE464E34417970C581B1 ___u9;
};

/* 1478 */
struct _CM_NOTIFY_BLOCK
{
  _LIST_ENTRY HiveList;
  _LIST_ENTRY PostList;
  _CM_KEY_CONTROL_BLOCK *KeyControlBlock;
  _CM_KEY_BODY *KeyBody;
  unsigned __int32 Filter : 30;
  unsigned __int32 WatchTree : 1;
  unsigned __int32 NotifyPending : 1;
  _SECURITY_SUBJECT_CONTEXT SubjectContext;
};

/* 1446 */
struct __declspec(align(8)) _CM_RM
{
  _LIST_ENTRY RmListEntry;
  _LIST_ENTRY TransactionListHead;
  void *TmHandle;
  void *Tm;
  void *RmHandle;
  void *KtmRm;
  unsigned int RefCount;
  unsigned int ContainerNum;
  unsigned __int64 ContainerSize;
  _CMHIVE *CmHive;
  void *LogFileObject;
  void *MarshallingContext;
  unsigned int RmFlags;
  int LogStartStatus1;
  int LogStartStatus2;
  unsigned __int64 BaseLsn;
  _ERESOURCE *RmLock;
};

/* 1452 */
struct _RTL_BALANCED_LINKS
{
  _RTL_BALANCED_LINKS *Parent;
  _RTL_BALANCED_LINKS *LeftChild;
  _RTL_BALANCED_LINKS *RightChild;
  char Balance;
  unsigned __int8 Reserved[3];
};

/* 1453 */
struct __declspec(align(4)) _KTMOBJECT_NAMESPACE_LINK
{
  _RTL_BALANCED_LINKS Links;
  unsigned __int8 Expired;
};

/* 1464 */
struct _KENLISTMENT_HISTORY
{
  unsigned int Notification;
  _KENLISTMENT_STATE NewState;
};

/* 1454 */
struct _KENLISTMENT
{
  unsigned int cookie;
  _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  _GUID EnlistmentId;
  _KMUTANT Mutex;
  _LIST_ENTRY NextSameTx;
  _LIST_ENTRY NextSameRm;
  _KRESOURCEMANAGER *ResourceManager;
  _KTRANSACTION *Transaction;
  _KENLISTMENT_STATE State;
  unsigned int Flags;
  unsigned int NotificationMask;
  void *Key;
  unsigned int KeyRefCount;
  void *RecoveryInformation;
  unsigned int RecoveryInformationLength;
  void *DynamicNameInformation;
  unsigned int DynamicNameInformationLength;
  struct _KTMNOTIFICATION_PACKET *FinalNotification;
  _KENLISTMENT *SupSubEnlistment;
  void *SupSubEnlHandle;
  void *SubordinateTxHandle;
  _GUID CrmEnlistmentEnId;
  _GUID CrmEnlistmentTmId;
  _GUID CrmEnlistmentRmId;
  unsigned int NextHistory;
  _KENLISTMENT_HISTORY History[20];
};

/* 1438 */
struct _CM_WORKITEM
{
  _LIST_ENTRY ListEntry;
  unsigned int Private;
  void (__cdecl *WorkerRoutine)(void *);
  void *Parameter;
};

/* 1440 */
struct $B9D11C0317DE8A01D6BEDA98E11700C0
{
  unsigned int Start;
  unsigned int Length;
};

/* 1441 */
struct $45A67EA7A2217AF5C299D9F2863337C4
{
  unsigned int RangeCount;
  unsigned int SetBitCount;
};

/* 1442 */
struct $DF1271349A96DDEB7B2A3C1760A81213
{
  unsigned int Context1;
  unsigned int Context2;
};

/* 1443 */
union $43CE84D09D3A4229CA5D3BE0A21F64EB
{
  $B9D11C0317DE8A01D6BEDA98E11700C0 DirtyVectorModifiedContext;
  $45A67EA7A2217AF5C299D9F2863337C4 DirtyDataCaptureContext;
  $DF1271349A96DDEB7B2A3C1760A81213 Raw;
};

/* 1444 */
struct _CM_DIRTY_VECTOR_LOG_ENTRY
{
  _ETHREAD *Thread;
  _CM_DIRTY_VECTOR_OPERATION Operation;
  $43CE84D09D3A4229CA5D3BE0A21F64EB Data;
  void *Stack[6];
};

/* 1445 */
struct _CM_DIRTY_VECTOR_LOG
{
  volatile unsigned int Next;
  unsigned int Size;
  _CM_DIRTY_VECTOR_LOG_ENTRY Log[16];
};

/* 1448 */
struct _HIVE_WRITE_WAIT_QUEUE
{
  _ETHREAD *ActiveThread;
  _HIVE_WAIT_PACKET *WaitList;
  volatile unsigned int OwnerBoosted;
};

/* 1449 */
struct $262F8E27AD94141CDC35FB07551B9645
{
  unsigned __int32 FlushActive : 1;
  unsigned __int32 ReconcileActive : 1;
  unsigned __int32 PrimaryFilePurged : 1;
  unsigned __int32 DiskFileBad : 1;
};

/* 1450 */
union $F85D757B55E2B97A3CBCD91906C865AC
{
  unsigned int FlushFlags;
  $262F8E27AD94141CDC35FB07551B9645 __s1;
};

/* 1451 */
struct __declspec(align(8)) _CMHIVE
{
  _HHIVE Hive;
  void *FileHandles[6];
  _LIST_ENTRY NotifyList;
  _LIST_ENTRY HiveList;
  _LIST_ENTRY PreloadedHiveList;
  _LIST_ENTRY FailedUnloadList;
  _EX_RUNDOWN_REF HiveRundown;
  _LIST_ENTRY ParseCacheEntries;
  _CM_KEY_HASH_TABLE_ENTRY *KcbCacheTable;
  unsigned int KcbCacheTableSize;
  _CM_KEY_HASH_TABLE_ENTRY *DeletedKcbTable;
  unsigned int DeletedKcbTableSize;
  unsigned int Identity;
  _FAST_MUTEX *HiveLock;
  _FAST_MUTEX *WriterLock;
  _ERESOURCE *FlusherLock;
  _RTL_BITMAP FlushDirtyVector;
  unsigned int FlushDirtyVectorSize;
  unsigned __int8 *FlushLogEntry;
  unsigned int FlushLogEntrySize;
  unsigned int FlushHiveTruncated;
  unsigned __int8 FlushBaseBlockDirty;
  _RTL_BITMAP CapturedUnreconciledVector;
  unsigned int CapturedUnreconciledVectorSize;
  CMP_OFFSET_ARRAY *UnreconciledOffsetArray;
  unsigned int UnreconciledOffsetArrayCount;
  _HBASE_BLOCK *UnreconciledBaseBlock;
  _EX_PUSH_LOCK SecurityLock;
  unsigned int UseCount;
  unsigned int LastShrinkHiveSize;
  _LARGE_INTEGER ActualFileSize;
  _LARGE_INTEGER LogFileSizes[2];
  _UNICODE_STRING FileFullPath;
  _UNICODE_STRING FileUserName;
  _UNICODE_STRING HiveRootPath;
  unsigned int SecurityCount;
  unsigned int SecurityCacheSize;
  int SecurityHitHint;
  _CM_KEY_SECURITY_CACHE_ENTRY *SecurityCache;
  _LIST_ENTRY SecurityHash[64];
  unsigned int UnloadEventCount;
  _KEVENT **UnloadEventArray;
  _CM_KEY_CONTROL_BLOCK *RootKcb;
  unsigned __int8 Frozen;
  _CM_WORKITEM *UnloadWorkItem;
  _CM_WORKITEM UnloadWorkItemHolder;
  unsigned __int8 GrowOnlyMode;
  unsigned int GrowOffset;
  _LIST_ENTRY KcbConvertListHead;
  _CM_CELL_REMAP_BLOCK *CellRemapArray;
  _CM_DIRTY_VECTOR_LOG DirtyVectorLog;
  unsigned int Flags;
  _LIST_ENTRY TrustClassEntry;
  unsigned __int64 DirtyTime;
  unsigned __int64 UnreconciledTime;
  _CM_RM *CmRm;
  unsigned int CmRmInitFailPoint;
  int CmRmInitFailStatus;
  _KTHREAD *CreatorOwner;
  _KTHREAD *RundownThread;
  _LARGE_INTEGER LastWriteTime;
  _HIVE_WRITE_WAIT_QUEUE FlushQueue;
  _HIVE_WRITE_WAIT_QUEUE ReconcileQueue;
  $F85D757B55E2B97A3CBCD91906C865AC ___u63;
  unsigned int PrimaryFileSizeBeforeLastFlush;
  volatile int ReferenceCount;
  int UnloadHistoryIndex;
  unsigned int UnloadHistory[128];
  unsigned int BootStart;
  unsigned int UnaccessedStart;
  unsigned int UnaccessedEnd;
  unsigned int LoadedKeyCount;
  volatile unsigned int HandleClosePending;
  _EX_PUSH_LOCK HandleClosePendingEvent;
  unsigned __int8 FinalFlushSucceeded;
  unsigned __int8 FailedUnload;
};

/* 1455 */
struct _RTL_AVL_TABLE
{
  _RTL_BALANCED_LINKS BalancedRoot;
  void *OrderedPointer;
  unsigned int WhichOrderedElement;
  unsigned int NumberGenericTableElements;
  unsigned int DepthOfTree;
  _RTL_BALANCED_LINKS *RestartKey;
  unsigned int DeleteCount;
  _RTL_GENERIC_COMPARE_RESULTS (__cdecl *CompareRoutine)(_RTL_AVL_TABLE *, void *, void *);
  void *(__cdecl *AllocateRoutine)(_RTL_AVL_TABLE *, unsigned int);
  void (__cdecl *FreeRoutine)(_RTL_AVL_TABLE *, void *);
  void *TableContext;
};

/* 1456 */
struct __declspec(align(4)) _KTMOBJECT_NAMESPACE
{
  _RTL_AVL_TABLE Table;
  _KMUTANT Mutex;
  unsigned __int16 LinksOffset;
  unsigned __int16 GuidOffset;
  unsigned __int8 Expired;
};

/* 1461 */
struct _KRESOURCEMANAGER_COMPLETION_BINDING
{
  _LIST_ENTRY NotificationListHead;
  void *Port;
  unsigned int Key;
  _EPROCESS *BindingProcess;
};

/* 1459 */
struct _KRESOURCEMANAGER
{
  _KEVENT NotificationAvailable;
  unsigned int cookie;
  _KRESOURCEMANAGER_STATE State;
  unsigned int Flags;
  _KMUTANT Mutex;
  _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  _GUID RmId;
  _KQUEUE NotificationQueue;
  _KMUTANT NotificationMutex;
  _LIST_ENTRY EnlistmentHead;
  unsigned int EnlistmentCount;
  int (__cdecl *NotificationRoutine)(_KENLISTMENT *, void *, void *, unsigned int, _LARGE_INTEGER *, unsigned int, void *);
  void *Key;
  _LIST_ENTRY ProtocolListHead;
  _LIST_ENTRY PendingPropReqListHead;
  _LIST_ENTRY CRMListEntry;
  _KTM *Tm;
  _UNICODE_STRING Description;
  _KTMOBJECT_NAMESPACE Enlistments;
  _KRESOURCEMANAGER_COMPLETION_BINDING CompletionBinding;
};

/* 1457 */
struct $EFBE57641E4B47C85D1EEC6588DBDF0B
{
  unsigned int idxRecord;
  unsigned int cidContainer;
};

/* 1458 */
union _CLS_LSN
{
  $EFBE57641E4B47C85D1EEC6588DBDF0B offset;
  unsigned __int64 ullOffset;
};

/* 1463 */
struct _KTRANSACTION_HISTORY
{
  $E629E57EB416A4DD55ADB1883CE94280 RecordType;
  unsigned int Payload;
};

/* 1462 */
struct __declspec(align(8)) _KTRANSACTION
{
  _KEVENT OutcomeEvent;
  unsigned int cookie;
  _KMUTANT Mutex;
  _KTRANSACTION *TreeTx;
  _KTMOBJECT_NAMESPACE_LINK GlobalNamespaceLink;
  _KTMOBJECT_NAMESPACE_LINK TmNamespaceLink;
  _GUID UOW;
  _KTRANSACTION_STATE State;
  unsigned int Flags;
  _LIST_ENTRY EnlistmentHead;
  unsigned int EnlistmentCount;
  unsigned int RecoverableEnlistmentCount;
  unsigned int PrePrepareRequiredEnlistmentCount;
  unsigned int PrepareRequiredEnlistmentCount;
  unsigned int OutcomeRequiredEnlistmentCount;
  unsigned int PendingResponses;
  _KENLISTMENT *SuperiorEnlistment;
  _CLS_LSN LastLsn;
  _LIST_ENTRY PromotedEntry;
  _KTRANSACTION *PromoterTransaction;
  void *PromotePropagation;
  unsigned int IsolationLevel;
  unsigned int IsolationFlags;
  _LARGE_INTEGER Timeout;
  _UNICODE_STRING Description;
  _KTHREAD *RollbackThread;
  _WORK_QUEUE_ITEM RollbackWorkItem;
  _KDPC RollbackDpc;
  _KTIMER RollbackTimer;
  _LIST_ENTRY LsnOrderedEntry;
  _KTRANSACTION_OUTCOME Outcome;
  _KTM *Tm;
  __int64 CommitReservation;
  _KTRANSACTION_HISTORY TransactionHistory[10];
  unsigned int TransactionHistoryCount;
  void *DTCPrivateInformation;
  unsigned int DTCPrivateInformationLength;
  _KMUTANT DTCPrivateInformationMutex;
  void *PromotedTxSelfHandle;
  unsigned int PendingPromotionCount;
  _KEVENT PromotionCompletedEvent;
};

/* 1436 */
struct _CM_KEY_HASH_TABLE_ENTRY
{
  _EX_PUSH_LOCK Lock;
  _KTHREAD *Owner;
  _CM_KEY_HASH *Entry;
};

/* 1437 */
struct _CM_KEY_SECURITY_CACHE_ENTRY
{
  unsigned int Cell;
  _CM_KEY_SECURITY_CACHE *CachedSecurity;
};

/* 1439 */
struct _CM_CELL_REMAP_BLOCK
{
  unsigned int OldCell;
  unsigned int NewCell;
};

/* 1447 */
struct _HIVE_WAIT_PACKET
{
  _KEVENT WakeEvent;
  int Status;
  _HIVE_WAIT_PACKET *Next;
};

/* 1460 */
struct _KTM
{
  unsigned int cookie;
  _KMUTANT Mutex;
  KTM_STATE State;
  _KTMOBJECT_NAMESPACE_LINK NamespaceLink;
  _GUID TmIdentity;
  unsigned int Flags;
  unsigned int VolatileFlags;
  _UNICODE_STRING LogFileName;
  _FILE_OBJECT *LogFileObject;
  void *MarshallingContext;
  void *LogManagementContext;
  _KTMOBJECT_NAMESPACE Transactions;
  _KTMOBJECT_NAMESPACE ResourceManagers;
  _KMUTANT LsnOrderedMutex;
  _LIST_ENTRY LsnOrderedList;
  _LARGE_INTEGER CommitVirtualClock;
  _FAST_MUTEX CommitVirtualClockMutex;
  _CLS_LSN BaseLsn;
  _CLS_LSN CurrentReadLsn;
  _CLS_LSN LastRecoveredLsn;
  void *TmRmHandle;
  _KRESOURCEMANAGER *TmRm;
  _KEVENT LogFullNotifyEvent;
  _WORK_QUEUE_ITEM CheckpointWorkItem;
  _CLS_LSN CheckpointTargetLsn;
  _WORK_QUEUE_ITEM LogFullCompletedWorkItem;
  _ERESOURCE LogWriteResource;
  unsigned int LogFlags;
  int LogFullStatus;
  int RecoveryStatus;
  _CLS_LSN LastCheckBaseLsn;
  _LIST_ENTRY RestartOrderedList;
  _WORK_QUEUE_ITEM OfflineWorkItem;
};

/* 1479 */
struct _THERMAL_INFORMATION_EX
{
  unsigned int ThermalStamp;
  unsigned int ThermalConstant1;
  unsigned int ThermalConstant2;
  unsigned int SamplingPeriod;
  unsigned int CurrentTemperature;
  unsigned int PassiveTripPoint;
  unsigned int ThermalStandbyTripPoint;
  unsigned int CriticalTripPoint;
  unsigned __int8 ActiveTripPointCount;
  unsigned int ActiveTripPoint[10];
  unsigned int S4TransitionTripPoint;
  unsigned int MinimumThrottle;
  unsigned int OverThrottleThreshold;
};

/* 1481 */
union $FD11A6C81CBFAD534C6D8DE7E88109EE
{
  _RTL_BALANCED_NODE RbNodes[2];
  _LIST_ENTRY ListEntry;
};

/* 1482 */
struct $C3240B829489BABFFFEE294BBC2AD6A2
{
  unsigned __int8 Plain : 1;
  unsigned __int8 IdleResilient : 1;
  unsigned __int8 HighResolution : 1;
  unsigned __int8 NoWake : 1;
  unsigned __int8 NoWakeFinite : 1;
  unsigned __int8 Unused : 3;
};

/* 1483 */
union $EEC67364BE3FBC0B779E047779941346
{
  unsigned __int8 TypeFlags;
  $C3240B829489BABFFFEE294BBC2AD6A2 __s1;
};

/* 1480 */
struct __declspec(align(8)) _KTIMER2
{
  _DISPATCHER_HEADER Header;
  $FD11A6C81CBFAD534C6D8DE7E88109EE ___u1;
  unsigned __int64 DueTime;
  unsigned __int64 MaximumDueTime;
  __int64 Period;
  void (__cdecl *Callback)(_KTIMER2 *, void *);
  void *CallbackContext;
  void (__cdecl *DisableCallback)(void *);
  void *DisableContext;
  unsigned __int8 AbsoluteSystemTime;
  $EEC67364BE3FBC0B779E047779941346 ___u10;
};

/* 1484 */
struct _VI_VERIFIER_ISSUE
{
  unsigned int IssueType;
  void *Address;
  unsigned int Parameters[2];
};

/* 1485 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 1486 */
struct _OBJECT_REF_STACK_INFO
{
  unsigned int Sequence;
  unsigned __int16 Index;
  unsigned __int16 NumTraces;
  unsigned int Tag;
};

/* 1487 */
struct _OBJECT_REF_INFO
{
  _OBJECT_HEADER *ObjectHeader;
  void *NextRef;
  unsigned __int8 ImageFileName[16];
  unsigned __int16 NextPos;
  unsigned __int16 MaxStacks;
  _OBJECT_REF_STACK_INFO StackInfo[];
};

/* 1488 */
struct __declspec(align(4)) _LEARNING_MODE_DATA
{
  unsigned int Settings;
  unsigned __int8 Enabled;
  unsigned __int8 PermissiveModeEnabled;
};

/* 1489 */
struct _HEAP_UCR_DESCRIPTOR
{
  _LIST_ENTRY ListEntry;
  _LIST_ENTRY SegmentEntry;
  void *Address;
  unsigned int Size;
};

/* 1490 */
union $CFBA458BD1B9EBA84D24B6CF1088294F
{
  _FAST_MUTEX PagedLock;
  unsigned int NonPagedLock;
};

/* 1491 */
struct _POOL_DESCRIPTOR
{
  _POOL_TYPE PoolType;
  $CFBA458BD1B9EBA84D24B6CF1088294F ___u1;
  __declspec(align(128)) volatile int RunningAllocs;
  volatile int RunningDeAllocs;
  volatile int TotalBigPages;
  volatile int ThreadsProcessingDeferrals;
  volatile unsigned int TotalBytes;
  __declspec(align(128)) unsigned int PoolIndex;
  __declspec(align(128)) volatile int TotalPages;
  __declspec(align(128)) volatile _SINGLE_LIST_ENTRY PendingFrees;
  volatile int PendingFreeDepth;
  __declspec(align(128)) _LIST_ENTRY ListHeads[512];
};

/* 1492 */
struct _HIVE_LIST_ENTRY
{
  unsigned __int16 *FileName;
  unsigned __int16 *BaseName;
  unsigned __int16 *RegRootName;
  _CMHIVE *CmHive;
  unsigned int HHiveFlags;
  unsigned int CmHiveFlags;
  unsigned int CmKcbCacheSize;
  _CMHIVE *CmHive2;
  unsigned __int8 HiveMounted;
  unsigned __int8 ThreadFinished;
  unsigned __int8 ThreadStarted;
  unsigned __int8 Allocate;
  unsigned __int8 WinPERequired;
  _KEVENT StartEvent;
  _KEVENT FinishedEvent;
  _KEVENT MountLock;
  _UNICODE_STRING FilePath;
};

/* 1493 */
struct _IOV_FORCED_PENDING_TRACE
{
  _IRP *Irp;
  _ETHREAD *Thread;
  void *StackTrace[62];
};

/* 1494 */
struct _IOP_IRP_EXTENSION_STATUS
{
  unsigned int Flags;
  unsigned int ActivityId;
  unsigned int IoTracking;
};

/* 1495 */
struct __declspec(align(2)) _LAZY_WRITER
{
  _KDPC ScanDpc;
  _KTIMER ScanTimer;
  unsigned __int8 ScanActive;
  unsigned __int8 OtherWork;
  unsigned __int8 PendingTeardownScan;
  unsigned __int8 PendingPeriodicScan;
  unsigned __int8 PendingLowMemoryScan;
  unsigned __int8 PendingPowerScan;
  unsigned __int8 PendingCoalescingFlushScan;
};

/* 1496 */
struct _PI_BUS_EXTENSION
{
  unsigned int Flags;
  unsigned __int8 NumberCSNs;
  unsigned __int8 *ReadDataPort;
  unsigned __int8 DataPortMapped;
  unsigned __int8 *AddressPort;
  unsigned __int8 AddrPortMapped;
  unsigned __int8 *CommandPort;
  unsigned __int8 CmdPortMapped;
  unsigned int NextSlotNumber;
  _SINGLE_LIST_ENTRY DeviceList;
  _SINGLE_LIST_ENTRY CardList;
  _DEVICE_OBJECT *PhysicalBusDevice;
  _DEVICE_OBJECT *FunctionalBusDevice;
  _DEVICE_OBJECT *AttachedDevice;
  unsigned int BusNumber;
  _SYSTEM_POWER_STATE SystemPowerState;
  _DEVICE_POWER_STATE DevicePowerState;
};

/* 1497 */
struct _DEVICE_DESCRIPTION
{
  unsigned int Version;
  unsigned __int8 Master;
  unsigned __int8 ScatterGather;
  unsigned __int8 DemandMode;
  unsigned __int8 AutoInitialize;
  unsigned __int8 Dma32BitAddresses;
  unsigned __int8 IgnoreCount;
  unsigned __int8 Reserved1;
  unsigned __int8 Dma64BitAddresses;
  unsigned int BusNumber;
  unsigned int DmaChannel;
  _INTERFACE_TYPE InterfaceType;
  _DMA_WIDTH DmaWidth;
  _DMA_SPEED DmaSpeed;
  unsigned int MaximumLength;
  unsigned int DmaPort;
  unsigned int DmaAddressWidth;
  unsigned int DmaControllerInstance;
  unsigned int DmaRequestLine;
  _LARGE_INTEGER DeviceAddress;
};

/* 1498 */
struct _IO_WORKITEM
{
  _WORK_QUEUE_ITEM WorkItem;
  void (__cdecl *Routine)(void *, void *, _IO_WORKITEM *);
  void *IoObject;
  void *Context;
  void *WorkingOnBehalfClient;
  unsigned int Type;
  _GUID ActivityId;
};

/* 1499 */
struct $B0C7228810FFA281E36A0BBA481AA7B8
{
  unsigned __int16 TagIndex;
  unsigned __int16 HeapIndex;
};

/* 1500 */
union $AC3E8E1D84FED1FD9E2E6C347A3A2271
{
  unsigned int HeapAndTagIndex;
  $B0C7228810FFA281E36A0BBA481AA7B8 __s1;
};

/* 1501 */
struct _HEAP_STOP_ON_TAG
{
  $AC3E8E1D84FED1FD9E2E6C347A3A2271 ___u0;
};

/* 1502 */
struct _HEAP_STOP_ON_VALUES
{
  unsigned int AllocAddress;
  _HEAP_STOP_ON_TAG AllocTag;
  unsigned int ReAllocAddress;
  _HEAP_STOP_ON_TAG ReAllocTag;
  unsigned int FreeAddress;
  _HEAP_STOP_ON_TAG FreeTag;
};

/* 1503 */
struct _CALL_HASH_ENTRY
{
  _LIST_ENTRY ListEntry;
  void *CallersAddress;
  void *CallersCaller;
  unsigned int CallCount;
};

/* 1504 */
struct _KTIMER2_COLLECTION
{
  _RTL_RB_TREE Tree;
  unsigned __int64 NextDueTime;
};

/* 1505 */
struct _VF_TRACKER_STAMP
{
  void *Thread;
  unsigned __int8 Flags : 8;
  unsigned __int8 OldIrql : 8;
  unsigned __int8 NewIrql : 8;
  unsigned __int8 Processor : 8;
};

/* 1506 */
struct _VI_TRACK_IRQL
{
  void *Thread;
  unsigned __int8 OldIrql;
  unsigned __int8 NewIrql;
  unsigned __int16 Processor;
  unsigned int TickCount;
  void *StackTrace[5];
};

/* 1507 */
struct __declspec(align(4)) _SEP_LOWBOX_NUMBER_MAPPING
{
  _EX_PUSH_LOCK Lock;
  _RTL_BITMAP Bitmap;
  _RTL_DYNAMIC_HASH_TABLE *HashTable;
  unsigned __int8 Active;
};

/* 1508 */
struct _SESSION_LOWBOX_MAP
{
  _LIST_ENTRY ListEntry;
  unsigned int SessionId;
  _SEP_LOWBOX_NUMBER_MAPPING LowboxMap;
};

/* 1509 */
struct _RH_OP_CONTEXT
{
  _LIST_ENTRY Links;
  _IRP *OplockRequestIrp;
  _FILE_OBJECT *OplockRequestFileObject;
  _EPROCESS *OplockRequestProcess;
  _ETHREAD *OplockOwnerThread;
  unsigned int Flags;
  _LIST_ENTRY AtomicLinks;
};

/* 1510 */
struct _POOL_TRACKER_TABLE
{
  volatile int Key;
  unsigned int NonPagedAllocs;
  unsigned int NonPagedFrees;
  unsigned int NonPagedBytes;
  unsigned int PagedAllocs;
  unsigned int PagedFrees;
  unsigned int PagedBytes;
};

/* 1511 */
struct _SEGMENT_OBJECT
{
  void *BaseAddress;
  unsigned int TotalNumberOfPtes;
  _LARGE_INTEGER SizeOfSegment;
  unsigned int NonExtendedPtes;
  unsigned int ImageCommitment;
  _CONTROL_AREA *ControlArea;
  _SUBSECTION *Subsection;
  _MMSECTION_FLAGS *MmSectionFlags;
  _MMSUBSECTION_FLAGS *MmSubSectionFlags;
};

/* 1512 */
struct _MEMORY_ALLOCATION_DESCRIPTOR
{
  _LIST_ENTRY ListEntry;
  _TYPE_OF_MEMORY MemoryType;
  unsigned int BasePage;
  unsigned int PageCount;
};

/* 1513 */
struct _THERMAL_INFORMATION
{
  unsigned int ThermalStamp;
  unsigned int ThermalConstant1;
  unsigned int ThermalConstant2;
  unsigned int Processors;
  unsigned int SamplingPeriod;
  unsigned int CurrentTemperature;
  unsigned int PassiveTripPoint;
  unsigned int CriticalTripPoint;
  unsigned __int8 ActiveTripPointCount;
  unsigned int ActiveTripPoint[10];
};

/* 1514 */
struct _MAPPED_FILE_SEGMENT
{
  _CONTROL_AREA *ControlArea;
  unsigned int TotalNumberOfPtes;
  _SEGMENT_FLAGS SegmentFlags;
  unsigned int NumberOfCommittedPages;
  unsigned __int64 SizeOfSegment;
  $055C3BA92E25F8980B48285F42FEFA6C ___u5;
  _EX_PUSH_LOCK SegmentLock;
};

/* 1515 */
struct _MM_DRIVER_VERIFIER_DATA
{
  unsigned int Level;
  volatile unsigned int RaiseIrqls;
  volatile unsigned int AcquireSpinLocks;
  volatile unsigned int SynchronizeExecutions;
  volatile unsigned int AllocationsAttempted;
  volatile unsigned int AllocationsSucceeded;
  volatile unsigned int AllocationsSucceededSpecialPool;
  unsigned int AllocationsWithNoTag;
  unsigned int TrimRequests;
  unsigned int Trims;
  unsigned int AllocationsFailed;
  volatile unsigned int AllocationsFailedDeliberately;
  volatile unsigned int Loads;
  volatile unsigned int Unloads;
  unsigned int UnTrackedPool;
  unsigned int UserTrims;
  volatile unsigned int CurrentPagedPoolAllocations;
  volatile unsigned int CurrentNonPagedPoolAllocations;
  unsigned int PeakPagedPoolAllocations;
  unsigned int PeakNonPagedPoolAllocations;
  volatile unsigned int PagedBytes;
  volatile unsigned int NonPagedBytes;
  unsigned int PeakPagedBytes;
  unsigned int PeakNonPagedBytes;
  volatile unsigned int BurstAllocationsFailedDeliberately;
  unsigned int SessionTrims;
  volatile unsigned int OptionChanges;
  volatile unsigned int VerifyMode;
  _UNICODE_STRING PreviousBucketName;
  volatile unsigned int ExecutePoolTypes;
  volatile unsigned int ExecutePageProtections;
  volatile unsigned int ExecutePageMappings;
  volatile unsigned int ExecuteWriteSections;
  volatile unsigned int SectionAlignmentFailures;
};

/* 1516 */
struct _VF_DRIVER_IO_CALLBACKS
{
  int (__cdecl *DriverInit)(_DRIVER_OBJECT *, _UNICODE_STRING *);
  void (__cdecl *DriverStartIo)(_DEVICE_OBJECT *, _IRP *);
  void (__cdecl *DriverUnload)(_DRIVER_OBJECT *);
  int (__cdecl *AddDevice)(_DRIVER_OBJECT *, _DEVICE_OBJECT *);
  int (__cdecl *MajorFunction[28])(_DEVICE_OBJECT *, _IRP *);
};

/* 1517 */
struct _VI_FAULT_TRACE
{
  _ETHREAD *Thread;
  void *StackTrace[8];
};

/* 1518 */
struct _TRIAGE_PNP_DEVICE_COMPLETION_QUEUE
{
  _LIST_ENTRY DispatchedList;
};

/* 1519 */
union $0D8BF52BFA3D3F22B56C11FDD5E94166
{
  _EPROCESS *Process;
  _DEVICE_OBJECT *DeviceObject;
};

/* 1520 */
struct _DIAGNOSTIC_CONTEXT
{
  _REQUESTER_TYPE CallerType;
  $0D8BF52BFA3D3F22B56C11FDD5E94166 ___u1;
  unsigned int ServiceTag;
  unsigned int ReasonSize;
};

/* 1521 */
struct $1C0B831105FBF9FD7D7436CA9EBE94EB
{
  unsigned __int8 ApcAssociated : 1;
  unsigned __int8 FlushDpcs : 1;
  unsigned __int8 Paused : 1;
  unsigned __int8 Spare1 : 5;
};

/* 1522 */
union $227BFDB6DCCD3F95EBCB58D9E21D2BC0
{
  char TimerFlags;
  $1C0B831105FBF9FD7D7436CA9EBE94EB __s1;
};

/* 1523 */
struct __declspec(align(8)) _ETIMER
{
  _KTIMER KeTimer;
  unsigned int Lock;
  _KAPC TimerApc;
  _KDPC TimerDpc;
  _LIST_ENTRY ActiveTimerListEntry;
  unsigned int Period;
  $227BFDB6DCCD3F95EBCB58D9E21D2BC0 ___u6;
  unsigned __int8 DueTimeType;
  unsigned __int16 Spare2;
  _DIAGNOSTIC_CONTEXT *volatile WakeReason;
  _LIST_ENTRY WakeTimerListEntry;
  void *VirtualizedTimerCookie;
  _LIST_ENTRY VirtualizedTimerLinks;
  unsigned __int64 DueTime;
  unsigned int CoalescingWindow;
};

/* 1524 */
struct _LOCK_TRACKER
{
  _RTL_BALANCED_NODE LockTrackerNode;
  _MDL *Mdl;
  void *StartVa;
  unsigned int Count;
  unsigned int Offset;
  unsigned int Length;
  unsigned int Page;
  void *StackTrace[8];
  unsigned int Who;
  _EPROCESS *Process;
};

/* 1525 */
struct $7126022F02CE882761E21D7AB6C4B912
{
  unsigned __int16 PreviousSize : 9;
  unsigned __int16 PoolIndex : 7;
  unsigned __int16 BlockSize : 9;
  unsigned __int16 PoolType : 7;
};

/* 1526 */
union $A087F7150F9FEC722C45A9C67A729955
{
  $7126022F02CE882761E21D7AB6C4B912 __s0;
  unsigned int Ulong1;
};

/* 1527 */
struct $26E45A6339AB0FB2EF605EF2D18774DE
{
  unsigned __int16 AllocatorBackTraceIndex;
  unsigned __int16 PoolTagHash;
};

/* 1528 */
union $B3C6C1EC9A2871F70152599DC5F1D172
{
  unsigned int PoolTag;
  $26E45A6339AB0FB2EF605EF2D18774DE __s1;
};

/* 1529 */
struct _POOL_HEADER
{
  $A087F7150F9FEC722C45A9C67A729955 ___u0;
  $B3C6C1EC9A2871F70152599DC5F1D172 ___u1;
};

/* 1530 */
struct _POOL_BLOCK_HEAD
{
  _POOL_HEADER Header;
  _LIST_ENTRY List;
};

/* 1531 */
struct _RTL_RANGE_LIST
{
  _LIST_ENTRY ListHead;
  unsigned int Flags;
  unsigned int Count;
  unsigned int Stamp;
};

/* 1532 */
struct _ARBITER_ORDERING
{
  unsigned __int64 Start;
  unsigned __int64 End;
};

/* 1533 */
struct _ARBITER_ORDERING_LIST
{
  unsigned __int16 Count;
  unsigned __int16 Maximum;
  _ARBITER_ORDERING *Orderings;
};

/* 1534 */
struct _ARBITER_TEST_ALLOCATION_PARAMETERS
{
  _LIST_ENTRY *ArbitrationList;
  unsigned int AllocateFromCount;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR *AllocateFrom;
};

/* 1535 */
struct _ARBITER_RETEST_ALLOCATION_PARAMETERS
{
  _LIST_ENTRY *ArbitrationList;
  unsigned int AllocateFromCount;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR *AllocateFrom;
};

/* 1536 */
struct _ARBITER_BOOT_ALLOCATION_PARAMETERS
{
  _LIST_ENTRY *ArbitrationList;
};

/* 1537 */
struct _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS
{
  _CM_PARTIAL_RESOURCE_LIST **AllocatedResources;
};

/* 1538 */
struct _ARBITER_CONFLICT_INFO
{
  _DEVICE_OBJECT *OwningObject;
  unsigned __int64 Start;
  unsigned __int64 End;
};

/* 1539 */
struct _ARBITER_QUERY_CONFLICT_PARAMETERS
{
  _DEVICE_OBJECT *PhysicalDeviceObject;
  _IO_RESOURCE_DESCRIPTOR *ConflictingResource;
  unsigned int *ConflictCount;
  _ARBITER_CONFLICT_INFO **Conflicts;
};

/* 1540 */
struct _ARBITER_QUERY_ARBITRATE_PARAMETERS
{
  _LIST_ENTRY *ArbitrationList;
};

/* 1541 */
struct _ARBITER_ADD_RESERVED_PARAMETERS
{
  _DEVICE_OBJECT *ReserveDevice;
};

/* 1542 */
union $FB0ADCE70AB232C2F290851DFEC11121
{
  _ARBITER_TEST_ALLOCATION_PARAMETERS TestAllocation;
  _ARBITER_RETEST_ALLOCATION_PARAMETERS RetestAllocation;
  _ARBITER_BOOT_ALLOCATION_PARAMETERS BootAllocation;
  _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS QueryAllocatedResources;
  _ARBITER_QUERY_CONFLICT_PARAMETERS QueryConflict;
  _ARBITER_QUERY_ARBITRATE_PARAMETERS QueryArbitrate;
  _ARBITER_ADD_RESERVED_PARAMETERS AddReserved;
};

/* 1543 */
struct _ARBITER_PARAMETERS
{
  $FB0ADCE70AB232C2F290851DFEC11121 Parameters;
};

/* 1544 */
struct _ARBITER_INTERFACE
{
  unsigned __int16 Size;
  unsigned __int16 Version;
  void *Context;
  void (__cdecl *InterfaceReference)(void *);
  void (__cdecl *InterfaceDereference)(void *);
  int (__cdecl *ArbiterHandler)(void *, _ARBITER_ACTION, _ARBITER_PARAMETERS *);
  unsigned int Flags;
};

/* 1545 */
struct _ARBITER_LIST_ENTRY
{
  _LIST_ENTRY ListEntry;
  unsigned int AlternativeCount;
  _IO_RESOURCE_DESCRIPTOR *Alternatives;
  _DEVICE_OBJECT *PhysicalDeviceObject;
  _ARBITER_REQUEST_SOURCE RequestSource;
  unsigned int Flags;
  int WorkSpace;
  _INTERFACE_TYPE InterfaceType;
  unsigned int SlotNumber;
  unsigned int BusNumber;
  _CM_PARTIAL_RESOURCE_DESCRIPTOR *Assignment;
  _IO_RESOURCE_DESCRIPTOR *SelectedAlternative;
  _ARBITER_RESULT Result;
};

/* 1546 */
struct _ARBITER_ALTERNATIVE
{
  unsigned __int64 Minimum;
  unsigned __int64 Maximum;
  unsigned __int64 Length;
  unsigned __int64 Alignment;
  int Priority;
  unsigned int Flags;
  _IO_RESOURCE_DESCRIPTOR *Descriptor;
  unsigned int Reserved[3];
};

/* 1547 */
struct _ARBITER_ALLOCATION_STATE
{
  unsigned __int64 Start;
  unsigned __int64 End;
  unsigned __int64 CurrentMinimum;
  unsigned __int64 CurrentMaximum;
  _ARBITER_LIST_ENTRY *Entry;
  _ARBITER_ALTERNATIVE *CurrentAlternative;
  unsigned int AlternativeCount;
  _ARBITER_ALTERNATIVE *Alternatives;
  unsigned __int16 Flags;
  unsigned __int8 RangeAttributes;
  unsigned __int8 RangeAvailableAttributes;
  unsigned int WorkSpace;
};

/* 1548 */
struct _ARBITER_INSTANCE
{
  unsigned int Signature;
  _KEVENT *MutexEvent;
  unsigned __int16 *Name;
  unsigned __int16 *OrderingName;
  int ResourceType;
  _RTL_RANGE_LIST *Allocation;
  _RTL_RANGE_LIST *PossibleAllocation;
  _ARBITER_ORDERING_LIST OrderingList;
  _ARBITER_ORDERING_LIST ReservedList;
  int ReferenceCount;
  _ARBITER_INTERFACE *Interface;
  unsigned int AllocationStackMaxSize;
  _ARBITER_ALLOCATION_STATE *AllocationStack;
  int (__cdecl *UnpackRequirement)(_IO_RESOURCE_DESCRIPTOR *, unsigned __int64 *, unsigned __int64 *, unsigned __int64 *, unsigned __int64 *);
  int (__cdecl *PackResource)(_IO_RESOURCE_DESCRIPTOR *, unsigned __int64, _CM_PARTIAL_RESOURCE_DESCRIPTOR *);
  int (__cdecl *UnpackResource)(_CM_PARTIAL_RESOURCE_DESCRIPTOR *, unsigned __int64 *, unsigned __int64 *);
  int (__cdecl *ScoreRequirement)(_IO_RESOURCE_DESCRIPTOR *);
  int (__cdecl *TestAllocation)(_ARBITER_INSTANCE *, _ARBITER_TEST_ALLOCATION_PARAMETERS *);
  int (__cdecl *RetestAllocation)(_ARBITER_INSTANCE *, _ARBITER_RETEST_ALLOCATION_PARAMETERS *);
  int (__cdecl *CommitAllocation)(_ARBITER_INSTANCE *);
  int (__cdecl *RollbackAllocation)(_ARBITER_INSTANCE *);
  int (__cdecl *BootAllocation)(_ARBITER_INSTANCE *, _ARBITER_BOOT_ALLOCATION_PARAMETERS *);
  int (__cdecl *QueryArbitrate)(_ARBITER_INSTANCE *, _ARBITER_QUERY_ARBITRATE_PARAMETERS *);
  int (__cdecl *QueryConflict)(_ARBITER_INSTANCE *, _ARBITER_QUERY_CONFLICT_PARAMETERS *);
  int (__cdecl *AddReserved)(_ARBITER_INSTANCE *, _ARBITER_ADD_RESERVED_PARAMETERS *);
  int (__cdecl *StartArbiter)(_ARBITER_INSTANCE *, _CM_RESOURCE_LIST *);
  int (__cdecl *PreprocessEntry)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  int (__cdecl *AllocateEntry)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  unsigned __int8 (__cdecl *GetNextAllocationRange)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  unsigned __int8 (__cdecl *FindSuitableRange)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  void (__cdecl *AddAllocation)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  void (__cdecl *BacktrackAllocation)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  unsigned __int8 (__cdecl *OverrideConflict)(_ARBITER_INSTANCE *, _ARBITER_ALLOCATION_STATE *);
  int (__cdecl *InitializeRangeList)(_ARBITER_INSTANCE *, unsigned int, _CM_PARTIAL_RESOURCE_DESCRIPTOR *, _RTL_RANGE_LIST *);
  unsigned __int8 TransactionInProgress;
  _KEVENT *TransactionEvent;
  void *Extension;
  _DEVICE_OBJECT *BusDeviceObject;
  void *ConflictCallbackContext;
  unsigned __int8 (__cdecl *ConflictCallback)(void *, _RTL_RANGE *);
};

/* 1549 */
struct __declspec(align(8)) _RTL_RANGE
{
  unsigned __int64 Start;
  unsigned __int64 End;
  void *UserData;
  void *Owner;
  unsigned __int8 Attributes;
  unsigned __int8 Flags;
};

/* 1550 */
struct _MM_PAGED_POOL_INFO
{
  _EX_PUSH_LOCK Lock;
  _RTL_BITMAP PagedPoolAllocationMap;
  _MMPTE *FirstPteForPagedPool;
  unsigned int MaximumSize;
  unsigned int PagedPoolHint;
  unsigned int AllocatedPagedPool;
};

/* 1551 */
struct _MI_POOL_STATE
{
  unsigned int MaximumNonPagedPoolThreshold;
  unsigned int NonPagedPoolSListMaximum[3];
  volatile unsigned int AllocatedNonPagedPool;
  _SINGLE_LIST_ENTRY BadPoolHead;
  unsigned int PoolFailures[3][3];
  unsigned int PoolFailureReasons[11];
  unsigned int LowPagedPoolThreshold;
  unsigned int HighPagedPoolThreshold;
  int SpecialPoolPdesMax;
  unsigned __int8 NonPagedPoolNodes[512];
  _MM_PAGED_POOL_INFO PagedProtoPoolInfo;
  unsigned int PagedPoolSListMaximum;
  unsigned int PreemptiveTrims[4];
  unsigned int SpecialPagesInUsePeak;
  unsigned int SpecialPoolRejected[9];
  volatile unsigned int SpecialPagesNonPaged;
  volatile int SpecialPoolPdes;
  unsigned int SessionSpecialPoolPdesMax;
  unsigned int TotalPagedPoolQuota;
  unsigned int TotalNonPagedPoolQuota;
};

/* 1552 */
struct _MSUBSECTION
{
  _SUBSECTION Core;
  _RTL_BALANCED_NODE SubsectionNode;
  _LIST_ENTRY DereferenceList;
  unsigned int NumberOfMappedViews;
  unsigned int NumberOfPfnReferences;
};

/* 1553 */
struct $5DCE7AA0B6123074DA32723BE3DCE1F3
{
  unsigned __int32 RemoteImageFileObject : 1;
  unsigned __int32 RemoteDataFileObject : 1;
};

/* 1554 */
union $B59BC4A09EBB0453483A09E64B489B87
{
  _CONTROL_AREA *ControlArea;
  _FILE_OBJECT *FileObject;
  $5DCE7AA0B6123074DA32723BE3DCE1F3 __s2;
};

/* 1555 */
struct _SECTION
{
  _RTL_BALANCED_NODE SectionNode;
  unsigned int StartingVpn;
  unsigned int EndingVpn;
  $B59BC4A09EBB0453483A09E64B489B87 u1;
  unsigned __int64 SizeOfSection;
  $60CDD7FF021EE3E269D5308DF7E51BF2 u;
  unsigned __int32 InitialPageProtection : 12;
  unsigned __int32 SessionId : 19;
  unsigned __int32 NoValidationNeeded : 1;
};

/* 1556 */
struct _MI_SECTION_STATE
{
  volatile int SegmentListLock;
  __declspec(align(128)) volatile int SectionObjectPointersLock;
  _EX_PUSH_LOCK SectionExtendLock;
  _EX_PUSH_LOCK SectionExtendSetLock;
  _RTL_AVL_TREE SectionBasedRoot;
  _EX_PUSH_LOCK SectionBasedLock;
  unsigned int UnusedSubsectionPagedPool;
  unsigned int UnusedSegmentForceFree;
  unsigned int DataSectionProtectionMask;
  void *HighSectionBase;
  _MSUBSECTION PhysicalSubsection;
  _CONTROL_AREA PhysicalControlArea;
  _RTL_AVL_TREE PageFileSectionHead;
  volatile int PageFileSectionListSpinLock;
  unsigned int ImageBias;
  _EX_PUSH_LOCK RelocateBitmapsLock;
  _RTL_BITMAP ImageBitMap;
  void *ApiSetSection;
  void *ApiSetSchema;
  unsigned int ApiSetSchemaSize;
  unsigned int LostDataFiles;
  unsigned int LostDataPages;
  unsigned int ImageFailureReason;
  _SECTION *CfgBitMapSection32;
  _CONTROL_AREA *CfgBitMapControlArea32;
  unsigned int ImageCfgFailure;
  volatile int ImageValidationFailed;
};

/* 1557 */
struct _NON_PAGED_DEBUG_INFO
{
  unsigned __int16 Signature;
  unsigned __int16 Flags;
  unsigned int Size;
  unsigned __int16 Machine;
  unsigned __int16 Characteristics;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int SizeOfImage;
  unsigned __int64 ImageBase;
};

/* 1558 */
struct $1E2A795FFD7D7084A69DFCF07622B245
{
  unsigned __int16 SignatureLevel : 4;
  unsigned __int16 SignatureType : 3;
  unsigned __int16 Unused : 9;
};

/* 1559 */
union $C721B32B1D982AE1FBAE3B5232B67E5C
{
  $1E2A795FFD7D7084A69DFCF07622B245 __s0;
  unsigned __int16 EntireField;
};

/* 1560 */
struct _KLDR_DATA_TABLE_ENTRY
{
  _LIST_ENTRY InLoadOrderLinks;
  void *ExceptionTable;
  unsigned int ExceptionTableSize;
  void *GpValue;
  _NON_PAGED_DEBUG_INFO *NonPagedDebugInfo;
  void *DllBase;
  void *EntryPoint;
  unsigned int SizeOfImage;
  _UNICODE_STRING FullDllName;
  _UNICODE_STRING BaseDllName;
  unsigned int Flags;
  unsigned __int16 LoadCount;
  $C721B32B1D982AE1FBAE3B5232B67E5C u1;
  void *SectionPointer;
  unsigned int CheckSum;
  unsigned int CoverageSectionSize;
  void *CoverageSection;
  void *LoadedImports;
  void *Spare;
  unsigned int SizeOfImageNotRounded;
  unsigned int TimeDateStamp;
};

/* 1561 */
struct _MI_DRIVER_VA
{
  _MI_DRIVER_VA *Next;
  _MMPTE *PointerPte;
  _RTL_BITMAP BitMap;
  unsigned int Hint;
};

/* 1562 */
struct _MM_SYSTEM_PAGE_COUNTS
{
  unsigned int SystemCodePage;
  unsigned int SystemDriverPage;
  int TotalSystemCodePages;
  int TotalSystemDriverPages;
};

/* 1563 */
struct _MI_SYSTEM_IMAGE_STATE
{
  volatile int FixupLock;
  _LIST_ENTRY FixupList;
  _KMUTANT LoadLock;
  unsigned __int8 FirstLoadEver;
  unsigned __int8 LargePageAll;
  unsigned int LastPage;
  _LIST_ENTRY LargePageList;
  _KLDR_DATA_TABLE_ENTRY *BeingDeleted;
  _EX_PUSH_LOCK MappingRangesPushLock;
  _MI_DRIVER_VA *MappingRanges[2];
  unsigned int PageCount;
  _MM_SYSTEM_PAGE_COUNTS PageCounts;
  _EX_PUSH_LOCK CollidedLock;
};

/* 1564 */
struct _MMSESSION
{
  _EX_PUSH_LOCK SystemSpaceViewLock;
  _EX_PUSH_LOCK *SystemSpaceViewLockPointer;
  _RTL_AVL_TREE ViewRoot;
  unsigned int ViewCount;
  unsigned int BitmapFailures;
};

/* 1565 */
struct _MI_SESSION_STATE
{
  _MMSESSION SystemSession;
  unsigned __int8 CodePageEdited;
  int VaReferenceCount[512];
  unsigned int *DynamicPtesBitBuffer;
  _EX_PUSH_LOCK IdLock;
  unsigned int DetachTimeStamp;
  _EPROCESS *LeaderProcess;
  _EX_PUSH_LOCK InitializeLock;
  _MMWSL *WorkingSetList;
  _MMWSLE_HASH *WsHashStart;
  _MMWSLE_HASH *WsHashEnd;
};

/* 1566 */
struct __declspec(align(8)) _MI_PROCESS_STATE
{
  unsigned int ColorSeed;
  _KEVENT CloneDereferenceEvent;
  _SLIST_HEADER CloneProtosSListHead;
  void *SystemDllBase;
  _LARGE_INTEGER CriticalSectionTimeout;
  _LIST_ENTRY ProcessList;
  _MMPTE *SharedUserDataPte;
};

/* 1567 */
struct _CACHED_KSTACK_LIST
{
  _SLIST_HEADER SListHead;
  int MinimumFree;
  unsigned int Misses;
  unsigned int MissesLast;
  unsigned int AllStacksInUse;
};

/* 1568 */
struct _MI_SYSTEM_NODE_INFORMATION
{
  _SLIST_HEADER PagedPoolSListHead;
  _SLIST_HEADER NonPagedPoolSListHead[3];
  _SLIST_HEADER NonPagedPoolSListHeadNx[3];
  _CACHED_KSTACK_LIST CachedKernelStacks[2];
  unsigned int NonPagedPoolLowestPage;
  unsigned int NonPagedPoolHighestPage;
  unsigned int AllocatedNonPagedPool;
  unsigned int PartialLargePoolRegions;
  unsigned int PagesInPartialLargePoolRegions;
  unsigned int CachedNonPagedPoolCount;
  unsigned int NonPagedPoolSpinLock;
  _MMPFN *CachedNonPagedPool;
  void *NonPagedPoolFirstVa;
  void *NonPagedPoolLastVa;
  _RTL_BITMAP NonPagedBitMap[3];
  unsigned int NonPagedHint[2];
};

/* 1569 */
struct _HAL_NODE_RANGE
{
  unsigned int PageFrameIndex;
  unsigned int Node;
};

/* 1570 */
struct _HAL_CHANNEL_MEMORY_RANGES
{
  unsigned int PageFrameIndex;
  unsigned __int16 MpnId;
  unsigned __int16 Node;
  unsigned __int16 Channel;
  unsigned __int8 IsPowerManageable;
  unsigned __int8 DeepPowerState;
};

/* 1571 */
struct _MI_ZERO_COST_COUNTS
{
  unsigned __int64 NativeSum;
  unsigned __int64 CachedSum;
};

/* 1572 */
struct __declspec(align(8)) _MI_HARDWARE_STATE
{
  unsigned int NodeMask;
  unsigned __int16 *NodeGraph;
  _MI_SYSTEM_NODE_INFORMATION *SystemNodeInformation;
  unsigned int NumaLastRangeIndex;
  _HAL_NODE_RANGE *NumaMemoryRanges;
  unsigned __int8 NumaTableCaptured;
  unsigned __int8 NodeShift;
  _HAL_CHANNEL_MEMORY_RANGES *ChannelMemoryRanges;
  unsigned __int8 ChannelShift;
  unsigned int SecondLevelCacheSize;
  unsigned int FirstLevelCacheSize;
  unsigned int PhysicalAddressBits;
  unsigned __int8 WriteCombiningPtes;
  unsigned __int8 AllMainMemoryMustBeCached;
  unsigned int TotalPagesAllowed;
  unsigned int SecondaryColorMask;
  unsigned int SecondaryColors;
  unsigned int FlushTbForAttributeChange;
  unsigned int FlushCacheForAttributeChange;
  unsigned int FlushCacheForPageAttributeChange;
  unsigned int CacheFlushPromoteThreshold;
  unsigned int FlushTbThreshold;
  _MI_ZERO_COST_COUNTS ZeroCostCounts[2];
  unsigned int HighestPossiblePhysicalPage;
};

/* 1573 */
struct _MI_PTE_CHAIN_HEAD
{
  _MMPTE Flink;
  _MMPTE Blink;
  _MMPTE *PteBase;
};

/* 1574 */
struct __declspec(align(8)) _MI_SYSTEM_VA_STATE
{
  unsigned int SystemTablesLock;
  unsigned int SystemVaBias;
  unsigned int SystemAvailableVaLow;
  unsigned int VirtualBias;
  unsigned int SystemAvailableRestrictedVa;
  void *HyperSpaceEnd;
  _MMPTE *HyperSpaceEndPte;
  void *SystemRangeStart;
  unsigned __int8 SystemCachePdeCount[512];
  void *SystemCacheReverseMaps[512];
  _MMWSLE_HASH *WorkingSetListHashStart;
  _MMWSLE_HASH *WorkingSetListHashEnd;
  _MMWSLE_NONDIRECT_HASH *WorkingSetListIndirectHashStart;
  _KEVENT FreeSystemCacheVa;
  unsigned int SystemVaLock;
  volatile int DeleteKvaLock;
  _MI_PTE_CHAIN_HEAD FreeSystemCache;
  unsigned int SystemCacheViewLock;
  unsigned int UnusableWsles[5];
  unsigned int PossibleWsles[5];
};

/* 1575 */
struct _MI_COMBINE_STATE
{
  volatile int ActiveSpinLock;
  unsigned int CombiningThreadCount;
  _RTL_AVL_TREE ActiveThreadTree;
  unsigned __int64 ZeroPageHashValue;
};

/* 1576 */
struct _MI_PARTITION_STATE
{
  unsigned int PartitionLock;
  _EX_PUSH_LOCK PartitionIdLock;
  unsigned __int64 InitialPartitionIdBits;
  _LIST_ENTRY PartitionList;
  _RTL_BITMAP *PartitionIdBitmap;
  _RTL_BITMAP InitialPartitionIdBitmap;
  _MI_PARTITION *TempPartitionPointers[1];
  _MI_PARTITION **Partition;
  unsigned int TotalPagesInChildPartitions;
};

/* 1577 */
struct _MI_RESUME_WORKITEM
{
  _KEVENT ResumeCompleteEvent;
  _WORK_QUEUE_ITEM WorkItem;
};

/* 1578 */
struct _MI_SHUTDOWN_STATE
{
  unsigned int StandbyListDiscard;
  unsigned __int8 CrashDumpInitialized;
  unsigned __int8 ConnectedStandbyActive;
  unsigned int SystemShutdown;
  int ShutdownFlushInProgress;
  _MI_RESUME_WORKITEM ResumeItem;
  unsigned __int8 FreeListDiscard;
  _ETHREAD *MirrorHoldsPfn;
  unsigned int MirroringActive;
  _RTL_BITMAP *MirrorBitMap;
  _RTL_BITMAP *MirrorBitMapInterlocked;
  void *MirrorListLocks;
  _MMPTE *CrashDumpPte;
};

/* 1579 */
struct _MI_BAD_MEMORY_EVENT_ENTRY
{
  unsigned int BugCheckCode;
  int Active;
  unsigned int Data;
  _LARGE_INTEGER PhysicalAddress;
  _WORK_QUEUE_ITEM WorkItem;
};

/* 1580 */
struct _MI_PROBE_RAISE_TRACKER
{
  unsigned int UserRangeInKernel;
  unsigned int FaultFailed;
  unsigned int WriteFaultFailed;
  unsigned int LargePageFailed;
  unsigned int UserAccessToKernelPte;
  unsigned int BadPageLocation;
  unsigned int InsufficientCharge;
  unsigned int PageTableCharge;
  unsigned int NoPhysicalMapping;
  unsigned int NoIoReference;
  unsigned int ProbeFailed;
  unsigned int PteIsZero;
  unsigned int StrongCodeWrite;
  unsigned int ReducedCloneCommitChargeFailed;
  unsigned int CopyOnWriteAtDispatchNoPages;
};

/* 1581 */
struct _MI_FORCED_COMMITS
{
  unsigned int Regular;
  unsigned int Wrap;
};

/* 1582 */
struct __declspec(align(8)) _MI_ERROR_STATE
{
  _MI_BAD_MEMORY_EVENT_ENTRY BadMemoryEventEntry;
  _MI_PROBE_RAISE_TRACKER ProbeRaises;
  _MI_FORCED_COMMITS ForcedCommits;
  unsigned int WsleFailures[2];
  unsigned int WsLinear;
  unsigned int PageHashErrors;
  unsigned int CheckZeroCount;
  volatile int ZeroedPageSingleBitErrorsDetected;
  volatile int BadPagesDetected;
  int ScrubPasses;
  int ScrubBadPagesFound;
  unsigned __int8 PendingBadPages;
  unsigned __int8 InitFailure;
  unsigned __int8 StopBadMaps;
};

/* 1583 */
struct _MI_ACCESS_LOG_STATE
{
  _MM_PAGE_ACCESS_INFO_HEADER *volatile CcAccessLog;
  unsigned int Enabled;
  _WORK_QUEUE_ITEM DisableAccessLogging;
  unsigned int MinLoggingPriority;
  __declspec(align(128)) unsigned int AccessLoggingLock;
};

/* 1584 */
struct _MI_DEBUGGER_STATE
{
  unsigned __int8 TransientWrite;
  unsigned __int8 CodePageEdited;
  _MMPTE *DebugPte;
  unsigned int PoisonedTb;
  volatile int InDebugger;
  void *volatile Pfns[32];
};

/* 1585 */
struct __declspec(align(64)) _MI_STANDBY_STATE
{
  volatile unsigned int TransitionSharedPages;
  unsigned int TransitionSharedPagesPeak[3];
  unsigned int FirstDecayPage;
  _SLIST_HEADER PfnDecayFreeSList;
  _MM_PAGE_ACCESS_INFO_HEADER *PfnRepurposeLog;
  _KDPC AllocatePfnRepurposeDpc;
};

/* 1586 */
struct _MI_QUEUED_DEADSTACK_WORKITEM
{
  _WORK_QUEUE_ITEM WorkItem;
  volatile int Active;
};

/* 1587 */
struct _MI_SYSTEM_PTE_STATE
{
  _SLIST_HEADER DeadPteTrackerSListHead;
  unsigned int PteTrackerLock;
  __declspec(align(128)) _NPAGED_LOOKASIDE_LIST MdlTrackerLookaside;
  _RTL_BITMAP PteTrackingBitmap;
  volatile _MI_CACHED_PTES *CachedPteHeads;
  _MI_SYSTEM_PTE_TYPE SystemViewPteInfo;
  unsigned __int8 KernelStackPages;
  _SLIST_HEADER QueuedStacks;
  unsigned int StackGrowthFailures;
  unsigned __int8 TrackPtesAborted;
  unsigned __int8 AdjustCounter;
  _MI_QUEUED_DEADSTACK_WORKITEM QueuedStacksWorkItem;
};

/* 1588 */
struct _MI_IO_CACHE_STATS
{
  unsigned int UnusedBlocks;
  unsigned int ActiveCacheMatch;
  unsigned int ActiveCacheOverride;
  unsigned int UnmappedCacheFlush;
  unsigned int UnmappedCacheMatch;
  unsigned int UnmappedCacheConflict;
};

/* 1589 */
struct _MI_IO_PAGE_STATE
{
  unsigned int IoPfnLock;
  _RTL_AVL_TREE IoPfnRoot[3];
  _LIST_ENTRY UnusedCachedMaps;
  unsigned int OldestCacheFlushTimeStamp;
  _MI_IO_CACHE_STATS IoCacheStats;
};

/* 1590 */
struct __declspec(align(8)) _MI_PAGING_IO_STATE
{
  _RTL_AVL_TREE PageFileHead;
  volatile int PageFileHeadSpinLock;
  int PrefetchSeekThreshold;
  _SLIST_HEADER InPageSupportSListHead[2];
  unsigned __int8 InPageSupportSListMinimum[2];
  unsigned int InPageSinglePages;
  volatile int DelayPageFaults;
  unsigned int FileCompressionBoundary;
  unsigned __int8 MdlsAdjusted;
};

/* 1591 */
struct _MI_COMMON_PAGE_STATE
{
  _MMPFN *PageOfOnesPfn;
  unsigned int PageOfOnes;
  _MMPFN *DummyPagePfn;
  unsigned int DummyPage;
  unsigned int PageOfZeroes;
  void *ZeroMapping;
  void *OnesMapping;
  unsigned int BitmapGapFrames[2];
  unsigned int PfnGapFrames[2];
};

/* 1592 */
struct __declspec(align(128)) _MI_SYSTEM_TRIM_STATE
{
  unsigned int ExpansionLock;
  volatile int TrimInProgressCount;
  _KEVENT PeriodicWorkingSetEvent;
  unsigned int TrimAllPageFaultCount[3];
};

/* 1593 */
struct _MI_RESAVAIL_TRACKER
{
  unsigned int AllocateKernelStack;
  unsigned int AllocateGrowKernelStack;
  unsigned int FreeKernelStack;
  unsigned int FreeKernelStackError;
  unsigned int FreeGrowKernelStackError;
  unsigned int AllocateCreateProcess;
  unsigned int FreeCreateProcessError;
  unsigned int FreeDeleteProcess;
  unsigned int FreeCleanProcess;
  unsigned int FreeCleanProcessError;
  unsigned int AllocateAddProcessWsMetaPage;
  unsigned int AllocateWsIncrease;
  unsigned int FreeWsIncreaseError;
  unsigned int FreeWsIncreaseErrorMax;
  unsigned int FreeWsDecrease;
  unsigned int AllocateWorkingSetPage;
  unsigned int FreeWorkingSetPageError;
  unsigned int FreeDeletePteRange;
  unsigned int AllocatePageTablesForProcessMetadata;
  unsigned int FreePageTablesForProcessMetadataError2;
  unsigned int AllocatePageTablesForSystem;
  unsigned int FreePageTablesExcess;
  unsigned int FreeSystemVaPageTables;
  unsigned int FreeSessionVaPageTables;
  unsigned int AllocateCreateSession;
  unsigned int FreeSessionWsDereference;
  unsigned int FreeSessionDereference;
  unsigned int AllocateLockedSessionImage;
  unsigned int FreeLockedSessionImage;
  unsigned int FreeSessionImageConversion;
  unsigned int AllocateWsAdjustPageTable;
  unsigned int FreeWsAdjustPageTable;
  unsigned int FreeWsAdjustPageTableError;
  unsigned int AllocateNoLowMemory;
  unsigned int AllocatePagedPoolLockedDown;
  unsigned int FreePagedPoolLockedDown;
  unsigned int AllocateSystemBitmaps;
  unsigned int FreeSystemBitmapsError;
  unsigned int AllocateForMdl;
  unsigned int FreeFromMdl;
  unsigned int AllocateForMdlPartition;
  unsigned int FreeFromMdlPartition;
  unsigned int FreeMdlExcess;
  unsigned int AllocateExpansionNonPagedPool;
  unsigned int FreeExpansionNonPagedPool;
  unsigned int AllocateVad;
  unsigned int RemoveVad;
  unsigned int FreeVad;
  unsigned int AllocateContiguous;
  unsigned int FreeContiguousPages;
  unsigned int FreeContiguousError;
  unsigned int FreeLargePageMemory;
  unsigned int AllocateSystemWsles;
  unsigned int FreeSystemWsles;
  unsigned int AllocateSystemInitWs;
  unsigned int AllocateSessionInitWs;
  unsigned int FreeSessionInitWsError;
  unsigned int AllocateSystemImage;
  unsigned int AllocateSystemImageLoad;
  unsigned int AllocateSessionSharedImage;
  unsigned int FreeSystemImageInitCode;
  unsigned int FreeSystemImageLargePageConversion;
  unsigned int FreeSystemImageError;
  unsigned int FreeSystemImageLoadExcess;
  unsigned int FreeUnloadSystemImage;
  unsigned int FreeReloadBootImageLarge;
  unsigned int FreeIndependent;
  unsigned int AllocateHotAdd;
  unsigned int AllocateHotRemove;
  unsigned int FreeHotAdd;
  unsigned int FreeHotAddEcc;
  unsigned int FreeHotAddError;
  unsigned int FreeHotAddUnmap;
  unsigned int AllocateBoot;
  unsigned int FreeLoaderBlock;
  unsigned int AllocateNonPagedSpecialPool;
  unsigned int FreeNonPagedSpecialPoolError;
  unsigned int FreeNonPagedSpecialPool;
  unsigned int AllocateSharedSegmentPage;
  unsigned int FreeSharedSegmentPage;
  unsigned int AllocateZeroPage;
  unsigned int FreeZeroPage;
  unsigned int AllocateForPo;
  unsigned int AllocateForPoForce;
  unsigned int FreeForPo;
  unsigned int AllocateThreadHardFaultBehavior;
  unsigned int FreeThreadHardFaultBehavior;
  unsigned int ObtainFaultCharges;
  unsigned int FreeFaultCharges;
  unsigned int AllocateStoreCharges;
  unsigned int FreeStoreCharges;
  __declspec(align(32)) unsigned int ObtainLockedPageCharge;
  __declspec(align(128)) unsigned int FreeLockedPageCharge;
  unsigned int AllocateStore;
  unsigned int FreeStore;
  unsigned int AllocateSystemImageProtos;
  unsigned int FreeSystemImageProtos;
  unsigned int AllocateModWriterCharge;
  unsigned int FreeModWriterCharge;
  unsigned int AllocateMappedWriterCharge;
  unsigned int FreeMappedWriterCharge;
  unsigned int AllocateRegistryCharges;
  unsigned int FreeRegistryCharges;
};

/* 1594 */
struct _MI_SPECIAL_POOL
{
  unsigned int Lock;
  _MI_PTE_CHAIN_HEAD Paged;
  _MI_PTE_CHAIN_HEAD NonPaged;
  volatile unsigned int PagesInUse;
  _RTL_BITMAP SpecialPoolPdes;
};

/* 1595 */
struct _UNLOADED_DRIVERS
{
  _UNICODE_STRING Name;
  void *StartAddress;
  void *EndAddress;
  _LARGE_INTEGER CurrentTime;
};

/* 1596 */
struct _MI_VISIBLE_STATE
{
  _MI_SPECIAL_POOL SpecialPool;
  _LIST_ENTRY SessionWsList;
  _RTL_BITMAP *SessionIdBitmap;
  _MM_PAGED_POOL_INFO PagedPoolInfo;
  unsigned int MaximumNonPagedPoolInPages;
  unsigned int SizeOfPagedPoolInPages;
  _MI_SYSTEM_PTE_TYPE SystemPteInfo;
  volatile unsigned int NonPagedPoolCommit;
  volatile unsigned int BootCommit;
  volatile unsigned int MdlPagesAllocated;
  volatile unsigned int SystemPageTableCommit;
  volatile unsigned int SpecialPagesInUse;
  volatile unsigned int WsOverheadPages;
  volatile unsigned int VadBitmapPages;
  volatile unsigned int ProcessCommit;
  volatile unsigned int SharedCommit;
  volatile int DriverCommit;
  __declspec(align(128)) _MMSUPPORT SystemWs[3];
  unsigned int MapCacheFailures;
  unsigned int LastUnloadedDriver;
  _UNLOADED_DRIVERS *UnloadedDrivers;
  unsigned int PagefileHashPages;
  _SYSPTES_HEADER PteHeader;
  _MI_SPECIAL_POOL *SessionSpecialPool;
  unsigned int SystemVaTypeCount[15];
  unsigned __int8 SystemVaType[512];
  unsigned int SystemVaTypeCountFailures[15];
  unsigned int SystemVaTypeCountLimit[15];
  unsigned int SystemVaTypeCountPeak[15];
  unsigned int SystemAvailableVa;
};

/* 1597 */
struct _MI_SYSTEM_INFORMATION
{
  _MI_POOL_STATE Pools;
  _MI_SECTION_STATE Sections;
  _MI_SYSTEM_IMAGE_STATE SystemImages;
  _MI_SESSION_STATE Sessions;
  _MI_PROCESS_STATE Processes;
  _MI_HARDWARE_STATE Hardware;
  __declspec(align(64)) _MI_SYSTEM_VA_STATE SystemVa;
  _MI_COMBINE_STATE PageCombines;
  _MI_PARTITION_STATE Partitions;
  _MI_SHUTDOWN_STATE Shutdowns;
  _MI_ERROR_STATE Errors;
  _MI_ACCESS_LOG_STATE AccessLog;
  _MI_DEBUGGER_STATE Debugger;
  __declspec(align(128)) _MI_STANDBY_STATE Standby;
  _MI_SYSTEM_PTE_STATE SystemPtes;
  _MI_IO_PAGE_STATE IoPages;
  _MI_PAGING_IO_STATE PagingIo;
  _MI_COMMON_PAGE_STATE CommonPages;
  _MI_SYSTEM_TRIM_STATE Trims;
  _MI_RESAVAIL_TRACKER ResTrack;
  unsigned int Cookie;
  volatile int ZeroingDisabled;
  void *volatile *BootRegistryRuns;
  unsigned __int8 FullyInitialized;
  unsigned __int8 SafeBooted;
  _RTL_BITMAP LargePfnBitMap;
  _RTL_BITMAP PfnBitMap;
  const _TlgProvider_t *TraceLogging;
  _MI_VISIBLE_STATE Vs;
};

/* 1598 */
struct _POP_POLICY_DEVICE
{
  _LIST_ENTRY Link;
  POWER_POLICY_DEVICE_TYPE DeviceType;
  void *Notification;
  _UNICODE_STRING Name;
  _DEVICE_OBJECT *Device;
  _IRP *Irp;
};

/* 1599 */
struct __declspec(align(4)) _THERMAL_POLICY
{
  unsigned int Version;
  unsigned __int8 WaitForUpdate;
  unsigned __int8 Hibernate;
  unsigned __int8 Critical;
  unsigned __int8 ThermalStandby;
  unsigned int ActivationReasons;
  unsigned int PassiveLimit;
  unsigned int ActiveLevel;
  unsigned __int8 OverThrottled;
};

/* 1600 */
struct _POP_THERMAL_TELEMETRY_TRACKER
{
  unsigned __int8 AccountingDisabled;
  unsigned __int64 LastPassiveUpdateTime;
  unsigned __int64 TotalPassiveTime[20];
  unsigned __int64 PassiveTimeSnap[20];
};

/* 1601 */
struct $23198F200E16F3C646260C311AEEC796
{
  _LIST_ENTRY Link;
  POWER_POLICY_DEVICE_TYPE DeviceType;
  void *Notification;
  _UNICODE_STRING Name;
  _DEVICE_OBJECT *Device;
  _IRP *Irp;
};

/* 1602 */
union $2F15E3FB2C079CB762DDCF0A5DEF85B1
{
  _POP_POLICY_DEVICE PolicyDevice;
  $23198F200E16F3C646260C311AEEC796 __s1;
};

/* 1603 */
struct _POP_THERMAL_ZONE
{
  $2F15E3FB2C079CB762DDCF0A5DEF85B1 ___u0;
  unsigned __int8 State;
  unsigned __int8 Flags;
  unsigned __int8 Removing;
  unsigned __int8 Mode;
  unsigned __int8 PendingMode;
  unsigned __int8 ActivePoint;
  unsigned __int8 PendingActivePoint;
  unsigned __int8 Critical;
  unsigned __int8 ThermalStandby;
  unsigned __int8 OverThrottled;
  int HighPrecisionThrottle;
  int Throttle;
  int PendingThrottle;
  unsigned int ThrottleReasons;
  unsigned __int64 LastTime;
  unsigned int SampleRate;
  unsigned int LastTemp;
  _KTIMER PassiveTimer;
  _KDPC PassiveDpc;
  _THERMAL_INFORMATION_EX Info;
  _LARGE_INTEGER InfoLastUpdateTime;
  _THERMAL_POLICY Policy;
  unsigned __int8 PolicyDriver;
  unsigned __int64 LastActiveStartTime;
  unsigned __int64 LastPassiveStartTime;
  _WORK_QUEUE_ITEM WorkItem;
  _POP_RW_LOCK Lock;
  _KEVENT ZoneStopped;
  _KEVENT TemperatureUpdated;
  unsigned int InstanceId;
  _POP_THERMAL_TELEMETRY_TRACKER TelemetryTracker;
};

/* 1604 */
struct _POOL_HACKER
{
  _POOL_HEADER Header;
  unsigned int Contents[8];
};

/* 1605 */
struct _VF_AVL_TREE_NODE
{
  void *p;
  unsigned int RangeSize;
};

/* 1606 */
struct _VF_TARGET_ALL_SHARED_EXPORT_THUNKS
{
  struct _VERIFIER_SHARED_EXPORT_THUNK *SharedExportThunks;
  struct _VERIFIER_SHARED_EXPORT_THUNK *PoolSharedExportThunks;
  struct _VERIFIER_SHARED_EXPORT_THUNK *OrderDependentSharedExportThunks;
  struct _VERIFIER_SHARED_EXPORT_THUNK *XdvSharedExportThunks;
};

/* 1607 */
struct $E085C0399EF3E0800BAD4CE237EA6BFD
{
  unsigned __int32 SnapSharedExportsFailed : 1;
  unsigned __int32 Spare : 31;
};

/* 1608 */
union $E67EE595FB54D1A2EFEB29396179A3E2
{
  _VF_TARGET_ALL_SHARED_EXPORT_THUNKS AllSharedExportThunks;
  $E085C0399EF3E0800BAD4CE237EA6BFD Flags;
};

/* 1609 */
struct _VF_SUSPECT_DRIVER_ENTRY
{
  _LIST_ENTRY Links;
  unsigned int Loads;
  unsigned int Unloads;
  _UNICODE_STRING BaseName;
};

/* 1610 */
struct $A71C282693F4480598505E7B15B4264A
{
  unsigned __int32 MissedEtwRegistration : 1;
  unsigned __int32 Spare : 31;
};

/* 1611 */
union $47C69FC0E4D470A993533376196AF367
{
  $A71C282693F4480598505E7B15B4264A Flags;
  unsigned int Whole;
};

/* 1612 */
struct __declspec(align(8)) _VF_TARGET_VERIFIED_DRIVER_DATA
{
  _VF_SUSPECT_DRIVER_ENTRY *SuspectDriverEntry;
  void *WMICallback;
  _LIST_ENTRY EtwHandlesListHead;
  $47C69FC0E4D470A993533376196AF367 u1;
  unsigned int Signature;
  _SLIST_HEADER PoolPageHeaders;
  _SLIST_HEADER PoolTrackers;
  volatile unsigned int CurrentPagedPoolAllocations;
  volatile unsigned int CurrentNonPagedPoolAllocations;
  unsigned int PeakPagedPoolAllocations;
  unsigned int PeakNonPagedPoolAllocations;
  volatile unsigned int PagedBytes;
  volatile unsigned int NonPagedBytes;
  unsigned int PeakPagedBytes;
  unsigned int PeakNonPagedBytes;
  unsigned int RaiseIrqls;
  unsigned int AcquireSpinLocks;
  unsigned int SynchronizeExecutions;
  unsigned int AllocationsWithNoTag;
  unsigned int AllocationsFailed;
  unsigned int AllocationsFailedDeliberately;
  unsigned int LockedBytes;
  unsigned int PeakLockedBytes;
  unsigned int MappedLockedBytes;
  unsigned int PeakMappedLockedBytes;
  unsigned int MappedIoSpaceBytes;
  unsigned int PeakMappedIoSpaceBytes;
  unsigned int PagesForMdlBytes;
  unsigned int PeakPagesForMdlBytes;
  unsigned int ContiguousMemoryBytes;
  unsigned int PeakContiguousMemoryBytes;
  _LIST_ENTRY ContiguousMemoryListHead;
  volatile unsigned int ExecutePoolTypes;
  volatile unsigned int ExecutePageProtections;
  volatile unsigned int ExecutePageMappings;
  volatile unsigned int ExecuteWriteSections;
  volatile unsigned int SectionAlignmentFailures;
};

/* 1613 */
struct _VF_TARGET_DRIVER
{
  _VF_AVL_TREE_NODE TreeNode;
  $E67EE595FB54D1A2EFEB29396179A3E2 u1;
  _VF_TARGET_VERIFIED_DRIVER_DATA *VerifiedData;
};

/* 1614 */
struct $006192E8E41FD8F2EA1B27D51D7CA475
{
  unsigned __int8 NoDomainAccounting : 1;
  unsigned __int8 IncreasePolicy : 2;
  unsigned __int8 DecreasePolicy : 2;
  unsigned __int8 Reserved : 3;
};

/* 1615 */
union $21463D61DAE13AA57FB187BA43387CBD
{
  unsigned __int8 AsUCHAR;
  $006192E8E41FD8F2EA1B27D51D7CA475 __s1;
};

/* 1616 */
union $262A64CD08661E0BDBBF21BF4B71E534
{
  unsigned __int8 Spare;
  $21463D61DAE13AA57FB187BA43387CBD Flags;
};

/* 1617 */
struct PROCESSOR_PERFSTATE_POLICY
{
  unsigned int Revision;
  unsigned __int8 MaxThrottle;
  unsigned __int8 MinThrottle;
  unsigned __int8 BusyAdjThreshold;
  $262A64CD08661E0BDBBF21BF4B71E534 ___u4;
  unsigned int TimeCheck;
  unsigned int IncreaseTime;
  unsigned int DecreaseTime;
  unsigned int IncreasePercent;
  unsigned int DecreasePercent;
};

/* 1618 */
struct _BUS_EXTENSION_LIST
{
  void *Next;
  _PI_BUS_EXTENSION *BusExtension;
};

/* 1619 */
struct _TRIAGE_DEVICE_NODE
{
  _TRIAGE_DEVICE_NODE *Sibling;
  _TRIAGE_DEVICE_NODE *Child;
  _TRIAGE_DEVICE_NODE *Parent;
  _TRIAGE_DEVICE_NODE *LastChild;
  _DEVICE_OBJECT *PhysicalDeviceObject;
  _UNICODE_STRING InstancePath;
  _UNICODE_STRING ServiceName;
  _IRP *PendingIrp;
  _TRIAGE_POP_FX_DEVICE *FxDevice;
};

/* 1621 */
struct _TRIAGE_POP_FX_DEVICE
{
  _LIST_ENTRY Link;
  _IRP *Irp;
  _TRIAGE_POP_IRP_DATA *IrpData;
  int Status;
  int PowerReqCall;
  int PowerNotReqCall;
  _TRIAGE_DEVICE_NODE *DeviceNode;
};

/* 1620 */
struct _TRIAGE_POP_IRP_DATA
{
  _LIST_ENTRY Link;
  _IRP *Irp;
  _DEVICE_OBJECT *Pdo;
};

/* 1622 */
struct _TRIAGE_PNP_DEVICE_COMPLETION_REQUEST
{
  _LIST_ENTRY ListEntry;
  _TRIAGE_DEVICE_NODE *DeviceNode;
};

/* 1623 */
struct BATTERY_REPORTING_SCALE
{
  unsigned int Granularity;
  unsigned int Capacity;
};

/* 1624 */
struct SYSTEM_POWER_CAPABILITIES
{
  unsigned __int8 PowerButtonPresent;
  unsigned __int8 SleepButtonPresent;
  unsigned __int8 LidPresent;
  unsigned __int8 SystemS1;
  unsigned __int8 SystemS2;
  unsigned __int8 SystemS3;
  unsigned __int8 SystemS4;
  unsigned __int8 SystemS5;
  unsigned __int8 HiberFilePresent;
  unsigned __int8 FullWake;
  unsigned __int8 VideoDimPresent;
  unsigned __int8 ApmPresent;
  unsigned __int8 UpsPresent;
  unsigned __int8 ThermalControl;
  unsigned __int8 ProcessorThrottle;
  unsigned __int8 ProcessorMinThrottle;
  unsigned __int8 ProcessorMaxThrottle;
  unsigned __int8 FastSystemS4;
  unsigned __int8 Hiberboot;
  unsigned __int8 WakeAlarmPresent;
  unsigned __int8 AoAc;
  unsigned __int8 DiskSpinDown;
  unsigned __int8 HiberFileType;
  unsigned __int8 AoAcConnectivitySupported;
  unsigned __int8 spare3[6];
  unsigned __int8 SystemBatteriesPresent;
  unsigned __int8 BatteriesAreShortTerm;
  BATTERY_REPORTING_SCALE BatteryScale[3];
  _SYSTEM_POWER_STATE AcOnLineWake;
  _SYSTEM_POWER_STATE SoftLidWake;
  _SYSTEM_POWER_STATE RtcWake;
  _SYSTEM_POWER_STATE MinDeviceWakeState;
  _SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

/* 1625 */
struct __declspec(align(16)) _PF_KERNEL_GLOBALS
{
  unsigned __int64 AccessBufferAgeThreshold;
  _EX_RUNDOWN_REF AccessBufferRef;
  _KEVENT AccessBufferExistsEvent;
  unsigned int AccessBufferMax;
  _SLIST_HEADER AccessBufferList;
  int StreamSequenceNumber;
  unsigned int Flags;
  int ScenarioPrefetchCount;
};

/* 1626 */
struct __declspec(align(4)) _WAITING_IRP
{
  _LIST_ENTRY Links;
  _IRP *Irp;
  void (__cdecl *CompletionRoutine)(void *, _IRP *);
  void *Context;
  _KEVENT *Event;
  unsigned int Information;
  unsigned __int8 BreakAllRH;
};

/* 1627 */
struct __declspec(align(4)) _POP_IRP_WORKER_ENTRY
{
  _LIST_ENTRY Link;
  _ETHREAD *Thread;
  _IRP *Irp;
  _DEVICE_OBJECT *Device;
  unsigned __int8 Static;
};

/* 1628 */
struct _OBJECT_HEADER_PADDING_INFO
{
  unsigned int PaddingAmount;
};

/* 1629 */
union $22971E98F1DCAE471B592EC18ECB1551
{
  unsigned int PhysicalAddress;
  unsigned int VirtualSize;
};

/* 1630 */
struct _IMAGE_SECTION_HEADER
{
  unsigned __int8 Name[8];
  $22971E98F1DCAE471B592EC18ECB1551 Misc;
  unsigned int VirtualAddress;
  unsigned int SizeOfRawData;
  unsigned int PointerToRawData;
  unsigned int PointerToRelocations;
  unsigned int PointerToLinenumbers;
  unsigned __int16 NumberOfRelocations;
  unsigned __int16 NumberOfLinenumbers;
  unsigned int Characteristics;
};

/* 1631 */
union $646D2BB77C41F45205C73C75399E3CE5
{
  _CELL_DATA CellData;
  unsigned int List[1];
};

/* 1632 */
struct __unaligned __declspec(align(4)) _CM_CACHED_VALUE_INDEX
{
  unsigned int CellIndex;
  $646D2BB77C41F45205C73C75399E3CE5 Data;
};

/* 1633 */
struct __declspec(align(8)) _MI_TRIAGE_DUMP_DATA
{
  unsigned int BadPageCount;
  int BadPagesDetected;
  int ZeroedPageSingleBitErrorsDetected;
  int ScrubPasses;
  int ScrubBadPagesFound;
  unsigned int PageHashErrors;
  unsigned __int64 FeatureBits;
  unsigned int TimeZoneId;
};

/* 1634 */
struct _DELAY_ACK_FO
{
  _LIST_ENTRY Links;
  _FILE_OBJECT *OriginalFileObject;
};

/* 1635 */
struct _IMAGE_ROM_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int BaseOfBss;
  unsigned int GprMask;
  unsigned int CprMask[4];
  unsigned int GpValue;
};

/* 1636 */
struct _IMAGE_DEBUG_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Type;
  unsigned int SizeOfData;
  unsigned int AddressOfRawData;
  unsigned int PointerToRawData;
};

/* 1637 */
struct __unaligned __declspec(align(1)) $5A170138DB5C75C4B2B23757E85B2FF4
{
  unsigned __int64 MatchAny;
  unsigned __int64 MatchAll;
  unsigned int EnableProperty;
  _GUID Guid;
  unsigned __int8 Level;
};

/* 1638 */
union $FCEFAD3499577DB291781D3E3EEC2BCD
{
  char LoggerName[65];
  $5A170138DB5C75C4B2B23757E85B2FF4 __s1;
};

/* 1639 */
struct _ETW_WMITRACE_WORK
{
  unsigned int LoggerId;
  unsigned int SpareUlong;
  $FCEFAD3499577DB291781D3E3EEC2BCD ___u2;
  char FileName[129];
  unsigned int MaximumFileSize;
  unsigned int MinBuffers;
  unsigned int MaxBuffers;
  unsigned int BufferSize;
  unsigned int Mode;
  unsigned int FlushTimer;
  __declspec(align(8)) int Status;
};

/* 1640 */
struct _PNP_DEVICE_COMPLETION_REQUEST
{
  _LIST_ENTRY ListEntry;
  _DEVICE_NODE *DeviceNode;
  void *Context;
  _PNP_DEVNODE_STATE CompletionState;
  unsigned int IrpPended;
  int Status;
  void *Information;
  int ReferenceCount;
};

/* 1641 */
struct _SECTION_OBJECT
{
  void *StartingVa;
  void *EndingVa;
  void *Parent;
  void *LeftChild;
  void *RightChild;
  _SEGMENT_OBJECT *Segment;
};

/* 1642 */
struct __declspec(align(8)) _HEAP_LOOKASIDE
{
  _SLIST_HEADER ListHead;
  unsigned __int16 Depth;
  unsigned __int16 MaximumDepth;
  unsigned int TotalAllocates;
  unsigned int AllocateMisses;
  unsigned int TotalFrees;
  unsigned int FreeMisses;
  unsigned int LastTotalAllocates;
  unsigned int LastAllocateMisses;
  unsigned int Counters[2];
};

/* 1644 */
struct _RTL_ATOM_TABLE_REFERENCE
{
  _LIST_ENTRY LowBoxList;
  unsigned int LowBoxID;
  unsigned __int16 ReferenceCount;
  unsigned __int16 Flags;
};

/* 1643 */
struct _RTL_ATOM_TABLE_ENTRY
{
  _RTL_ATOM_TABLE_ENTRY *HashLink;
  unsigned __int16 HandleIndex;
  unsigned __int16 Atom;
  _RTL_ATOM_TABLE_REFERENCE Reference;
  unsigned __int8 NameLength;
  wchar_t Name[1];
};

/* 1645 */
struct _RTL_ATOM_TABLE
{
  unsigned int Signature;
  volatile int ReferenceCount;
  _EX_PUSH_LOCK PushLock;
  _HANDLE_TABLE *ExHandleTable;
  unsigned int Flags;
  unsigned int NumberOfBuckets;
  _RTL_ATOM_TABLE_ENTRY *Buckets[1];
};

/* 1646 */
struct _POP_SHUTDOWN_BUG_CHECK
{
  _ETHREAD *InitiatingThread;
  _EPROCESS *InitiatingProcess;
  void *ThreadId;
  void *ProcessId;
  unsigned int Code;
  unsigned int Parameter1;
  unsigned int Parameter2;
  unsigned int Parameter3;
  unsigned int Parameter4;
};

/* 1647 */
struct _PO_NOTIFY_ORDER_LEVEL
{
  unsigned int DeviceCount;
  unsigned int ActiveCount;
  _LIST_ENTRY WaitSleep;
  _LIST_ENTRY ReadySleep;
  _LIST_ENTRY ReadyS0;
  _LIST_ENTRY WaitS0;
};

/* 1648 */
struct _PO_DEVICE_NOTIFY_ORDER
{
  unsigned __int8 Locked;
  _DEVICE_OBJECT **WarmEjectPdoPointer;
  _PO_NOTIFY_ORDER_LEVEL OrderLevel[5];
};

/* 1649 */
struct __declspec(align(4)) _POP_DEVICE_SYS_STATE
{
  unsigned __int8 IrpMinor;
  _SYSTEM_POWER_STATE SystemState;
  unsigned int SpinLock;
  _KTHREAD *Thread;
  _KEVENT *AbortEvent;
  _KSEMAPHORE *ReadySemaphore;
  _KSEMAPHORE *FinishedSemaphore;
  _PO_DEVICE_NOTIFY_ORDER Order;
  _LIST_ENTRY Pending;
  int Status;
  _DEVICE_OBJECT *FailedDevice;
  unsigned __int8 Waking;
  unsigned __int8 Cancelled;
  unsigned __int8 IgnoreErrors;
  unsigned __int8 IgnoreNotImplemented;
  unsigned __int8 TimeRefreshLockAcquired;
};

/* 1650 */
struct $CDD2232B0F5859219E4E3B74573CBE05
{
  unsigned int Signature;
  unsigned int CheckSum;
};

/* 1651 */
struct $D728D3D6E0DE89D06E4A6564BB5488C1
{
  _GUID DiskId;
};

/* 1652 */
union $F6CC69BAC19BBC66590F6AF5C1617BE1
{
  $CDD2232B0F5859219E4E3B74573CBE05 Mbr;
  $D728D3D6E0DE89D06E4A6564BB5488C1 Gpt;
};

/* 1653 */
struct _DUMP_INITIALIZATION_CONTEXT
{
  unsigned int Length;
  unsigned int Reserved;
  void *MemoryBlock;
  void *CommonBuffer[2];
  _LARGE_INTEGER PhysicalAddress[2];
  void (__cdecl *StallRoutine)(unsigned int);
  unsigned __int8 (__cdecl *OpenRoutine)(_LARGE_INTEGER);
  int (__cdecl *WriteRoutine)(_LARGE_INTEGER *, _MDL *);
  void (__cdecl *FinishRoutine)();
  struct _ADAPTER_OBJECT *AdapterObject;
  void *MappedRegisterBase;
  void *PortConfiguration;
  unsigned __int8 CrashDump;
  unsigned __int8 MarkMemoryOnly;
  unsigned __int8 HiberResume;
  unsigned __int8 Reserved1;
  unsigned int MaximumTransferSize;
  unsigned int CommonBufferSize;
  void *TargetAddress;
  int (__cdecl *WritePendingRoutine)(int, _LARGE_INTEGER *, _MDL *, void *);
  unsigned int PartitionStyle;
  $F6CC69BAC19BBC66590F6AF5C1617BE1 DiskInfo;
  int (__cdecl *ReadRoutine)(int, _LARGE_INTEGER *, _MDL *);
  int (__cdecl *GetDriveTelemetryRoutine)(unsigned int, unsigned int, void *, unsigned int);
  unsigned int LogSectionTruncateSize;
  unsigned int Parameters[16];
  void (__cdecl *GetTransferSizesRoutine)(unsigned int *, unsigned int *);
  void (__cdecl *DumpNotifyRoutine)(_DUMP_EVENTS, void *, unsigned int);
};

/* 1654 */
struct __declspec(align(8)) _DUMP_STACK_CONTEXT
{
  _DUMP_INITIALIZATION_CONTEXT Init;
  _LARGE_INTEGER PartitionOffset;
  void *DumpPointers;
  unsigned int PointersLength;
  unsigned __int16 *ModulePrefix;
  _LIST_ENTRY DriverList;
  _STRING InitMsg;
  _STRING ProgMsg;
  _STRING DoneMsg;
  void *FileObject;
  _DEVICE_USAGE_NOTIFICATION_TYPE UsageType;
};

/* 1655 */
struct _PO_HIBER_PERF
{
  unsigned __int64 HiberIoTicks;
  unsigned __int64 HiberIoCpuTicks;
  unsigned __int64 HiberInitTicks;
  unsigned __int64 HiberHiberFileTicks;
  unsigned __int64 HiberCompressTicks;
  unsigned __int64 HiberSharedBufferTicks;
  unsigned __int64 HiberChecksumTicks;
  unsigned __int64 HiberChecksumIoTicks;
  _LARGE_INTEGER TotalHibernateTime;
  unsigned int POSTTime;
  unsigned int ResumeBootMgrTime;
  unsigned int BootmgrUserInputTime;
  unsigned __int64 ResumeAppTicks;
  unsigned __int64 ResumeAppStartTimestamp;
  unsigned __int64 ResumeLibraryInitTicks;
  unsigned __int64 ResumeInitTicks;
  unsigned __int64 ResumeRestoreImageStartTimestamp;
  unsigned __int64 ResumeHiberFileTicks;
  unsigned __int64 ResumeIoTicks;
  unsigned __int64 ResumeDecompressTicks;
  unsigned __int64 ResumeAllocateTicks;
  unsigned __int64 ResumeUserInOutTicks;
  unsigned __int64 ResumeMapTicks;
  unsigned __int64 ResumeUnmapTicks;
  unsigned __int64 ResumeChecksumTicks;
  unsigned __int64 ResumeChecksumIoTicks;
  unsigned __int64 ResumeKernelSwitchTimestamp;
  unsigned __int64 WriteLogDataTimestamp;
  unsigned __int64 KernelReturnFromHandler;
  unsigned __int64 TimeStampCounterAtSwitchTime;
  unsigned __int64 HalTscOffset;
  unsigned __int64 HvlTscOffset;
  unsigned __int64 SleeperThreadEnd;
  unsigned __int64 KernelReturnSystemPowerStateTimestamp;
  unsigned __int64 IoBoundedness;
  unsigned __int64 KernelDecompressTicks;
  unsigned __int64 KernelIoTicks;
  unsigned __int64 KernelCopyTicks;
  unsigned __int64 ReadCheckCount;
  unsigned __int64 KernelInitTicks;
  unsigned __int64 KernelResumeHiberFileTicks;
  unsigned __int64 KernelIoCpuTicks;
  unsigned __int64 KernelSharedBufferTicks;
  unsigned __int64 KernelAnimationTicks;
  unsigned __int64 KernelChecksumTicks;
  unsigned __int64 KernelChecksumIoTicks;
  _LARGE_INTEGER AnimationStart;
  _LARGE_INTEGER AnimationStop;
  unsigned int DeviceResumeTime;
  unsigned __int64 SecurePagesProcessed;
  unsigned __int64 BootPagesProcessed;
  unsigned __int64 KernelPagesProcessed;
  unsigned __int64 BootBytesWritten;
  unsigned __int64 KernelBytesWritten;
  unsigned __int64 BootPagesWritten;
  unsigned __int64 KernelPagesWritten;
  unsigned __int64 BytesWritten;
  unsigned int PagesWritten;
  unsigned int FileRuns;
  unsigned int NoMultiStageResumeReason;
  unsigned int MaxHuffRatio;
  unsigned __int64 AdjustedTotalResumeTime;
  unsigned __int64 ResumeCompleteTimestamp;
};

/* 1656 */
struct PO_MEMORY_IMAGE
{
  unsigned int Signature;
  unsigned int ImageType;
  unsigned int CheckSum;
  unsigned int LengthSelf;
  unsigned int PageSelf;
  unsigned int PageSize;
  _LARGE_INTEGER SystemTime;
  unsigned __int64 InterruptTime;
  unsigned int FeatureFlags;
  unsigned __int8 HiberFlags;
  unsigned __int8 spare[3];
  unsigned int NoHiberPtes;
  unsigned int HiberVa;
  unsigned int NoFreePages;
  unsigned int FreeMapCheck;
  unsigned int WakeCheck;
  unsigned __int64 NumPagesForLoader;
  unsigned int FirstBootRestorePage;
  unsigned int FirstKernelRestorePage;
  unsigned int FirstChecksumRestorePage;
  unsigned __int64 NoChecksumEntries;
  _PO_HIBER_PERF PerfInfo;
  unsigned int FirmwareRuntimeInformationPages;
  unsigned int FirmwareRuntimeInformation[1];
  unsigned int SiLogOffset;
  unsigned int NoBootLoaderLogPages;
  unsigned int BootLoaderLogPages[24];
  unsigned int NotUsed;
  unsigned int ResumeContextCheck;
  unsigned int ResumeContextPages;
  unsigned __int8 Hiberboot;
  unsigned __int64 HvCr3;
  unsigned __int64 HvEntryPoint;
  unsigned __int64 HvReservedTransitionAddress;
  unsigned __int64 HvReservedTransitionAddressSize;
  unsigned __int64 BootFlags;
  unsigned __int64 HalEntryPointPhysical;
  unsigned int HighestPhysicalPage;
  unsigned int BitlockerKeyPfns[4];
  unsigned int HardwareSignature;
};

/* 1657 */
struct _POP_PER_PROCESSOR_CONTEXT
{
  unsigned __int8 *UncompressedData;
  void *MappingVa;
  void *XpressEncodeWorkspace;
  unsigned __int8 *CompressedDataBuffer;
  unsigned __int64 CopyTicks;
  unsigned __int64 CompressTicks;
  unsigned __int64 BytesCopied;
  unsigned __int64 PagesProcessed;
  unsigned __int64 DecompressTicks;
  unsigned __int64 ResumeCopyTicks;
  unsigned __int64 SharedBufferTicks;
  unsigned __int64 DecompressTicksByMethod[2];
  unsigned __int64 DecompressSizeByMethod[2];
  unsigned int CompressCount;
  unsigned int HuffCompressCount;
};

/* 1658 */
struct __declspec(align(8)) _POP_IO_INFO
{
  _MDL *DumpMdl;
  _POP_IO_STATUS IoStatus;
  unsigned __int64 IoStartCount;
  unsigned __int64 IoBytesCompleted;
  unsigned __int64 IoBytesInProgress;
  unsigned __int64 RequestSize;
  _LARGE_INTEGER IoLocation;
  unsigned __int64 FileOffset;
  void *Buffer;
  unsigned __int8 AsyncCapable;
  unsigned __int64 BytesToRead;
  unsigned int Pages;
  unsigned __int64 HighestChecksumIndex;
  unsigned __int16 PreviousChecksum;
};

/* 1659 */
union $A4A79A4E6861261633DB4676E7449F3F
{
  _RTL_BITMAP DiscardMap;
  _RTL_BITMAP KernelPhaseMap;
};

/* 1660 */
struct __declspec(align(8)) _POP_HIBER_CONTEXT
{
  unsigned __int8 Reset;
  unsigned __int8 HiberFlags;
  unsigned __int8 WroteHiberFile;
  unsigned __int8 VerifyKernelPhaseOnResume;
  unsigned __int8 KernelPhaseVerificationActive;
  volatile unsigned __int8 InitializationFinished;
  volatile int NextTableLockHeld;
  volatile int BootPhaseFinishedBarrier;
  volatile int KernelResumeFinishedBarrier;
  unsigned __int8 MapFrozen;
  $A4A79A4E6861261633DB4676E7449F3F ___u10;
  _RTL_BITMAP BootPhaseMap;
  _LIST_ENTRY ClonedRanges;
  unsigned int ClonedRangeCount;
  unsigned __int64 ClonedPageCount;
  _RTL_BITMAP *CurrentMap;
  _LIST_ENTRY *NextCloneRange;
  unsigned int NextPreserve;
  _MDL *LoaderMdl;
  _MDL *AllocatedMdl;
  unsigned __int64 PagesOut;
  void *IoPages;
  unsigned int IoPagesCount;
  void *CurrentMcb;
  _DUMP_STACK_CONTEXT *DumpStack;
  _KPROCESSOR_STATE *WakeState;
  unsigned int IoProgress;
  int Status;
  unsigned int GraphicsProc;
  PO_MEMORY_IMAGE *MemoryImage;
  unsigned int *PerformanceStats;
  _MDL *BootLoaderLogMdl;
  unsigned int SiLogOffset;
  _MDL *FirmwareRuntimeInformationMdl;
  void *FirmwareRuntimeInformationVa;
  void *ResumeContext;
  unsigned int ResumeContextPages;
  unsigned int ProcessorCount;
  _POP_PER_PROCESSOR_CONTEXT *ProcessorContext;
  char *ProdConsBuffer;
  unsigned int ProdConsSize;
  unsigned int MaxDataPages;
  void *ExtraBuffer;
  unsigned int ExtraBufferSize;
  void *ExtraMapVa;
  unsigned int BitlockerKeyPFN;
  _POP_IO_INFO IoInfo;
  unsigned __int16 *IoChecksums;
  unsigned int IoChecksumsSize;
  unsigned int HardwareConfigurationSignature;
};

/* 1661 */
union $AAF8897CEB946256847D2953FBB2D9F6
{
  unsigned int ProcessImageNameOffset;
  unsigned int DeviceDescriptionOffset;
};

/* 1662 */
union $79850556B0FB9F12BC5738C5A1497B95
{
  unsigned int ProcessId;
  unsigned int DevicePathOffset;
};

/* 1663 */
struct _DIAGNOSTIC_BUFFER
{
  unsigned int Size;
  _REQUESTER_TYPE CallerType;
  $AAF8897CEB946256847D2953FBB2D9F6 ___u2;
  $79850556B0FB9F12BC5738C5A1497B95 ___u3;
  unsigned int ServiceTag;
  unsigned int ReasonOffset;
};

/* 1664 */
struct __declspec(align(8)) $C30BD079ADDDB4C10DA960BCBB2898C1
{
  unsigned __int64 RequestedTime;
  unsigned __int64 ProgrammedTime;
  _DIAGNOSTIC_BUFFER *TimerInfo;
};

/* 1665 */
struct __declspec(align(8)) _POP_POWER_ACTION
{
  unsigned __int8 Updates;
  unsigned __int8 State;
  unsigned __int8 Shutdown;
  POWER_ACTION Action;
  _SYSTEM_POWER_STATE LightestState;
  unsigned int Flags;
  int Status;
  POWER_POLICY_DEVICE_TYPE DeviceType;
  unsigned int DeviceTypeFlags;
  unsigned __int8 IrpMinor;
  unsigned __int8 Waking;
  _SYSTEM_POWER_STATE SystemState;
  _SYSTEM_POWER_STATE NextSystemState;
  _SYSTEM_POWER_STATE EffectiveSystemState;
  _SYSTEM_POWER_STATE CurrentSystemState;
  _POP_SHUTDOWN_BUG_CHECK *ShutdownBugCode;
  _POP_DEVICE_SYS_STATE *DevState;
  _POP_HIBER_CONTEXT *HiberContext;
  unsigned __int64 WakeTime;
  unsigned __int64 SleepTime;
  SYSTEM_POWER_CONDITION WakeAlarmSignaled;
  $C30BD079ADDDB4C10DA960BCBB2898C1 WakeAlarm[3];
  unsigned __int8 WakeAlarmPaused;
  unsigned __int64 WakeAlarmLastTime;
  SYSTEM_POWER_CAPABILITIES FilteredCapabilities;
};

/* 1666 */
struct __declspec(align(4)) _PI_RESOURCE_ARBITER_ENTRY
{
  _LIST_ENTRY DeviceArbiterList;
  unsigned __int8 ResourceType;
  _ARBITER_INTERFACE *ArbiterInterface;
  _DEVICE_NODE *DeviceNode;
  _LIST_ENTRY ResourceList;
  _LIST_ENTRY BestResourceList;
  _LIST_ENTRY BestConfig;
  _LIST_ENTRY ActiveArbiterList;
  unsigned __int8 State;
  unsigned __int8 ResourcesChanged;
};

/* 1667 */
struct _SECURITY_DESCRIPTOR
{
  unsigned __int8 Revision;
  unsigned __int8 Sbz1;
  unsigned __int16 Control;
  void *Owner;
  void *Group;
  _ACL *Sacl;
  _ACL *Dacl;
};

/* 1668 */
struct _LOCK_HEADER
{
  _RTL_AVL_TREE LockTree;
  unsigned int Count;
  unsigned int Lock;
  unsigned int Valid;
};

/* 1669 */
struct POWER_ACTION_POLICY
{
  POWER_ACTION Action;
  unsigned int Flags;
  unsigned int EventCode;
};

/* 1670 */
struct SYSTEM_POWER_LEVEL
{
  unsigned __int8 Enable;
  unsigned __int8 Spare[3];
  unsigned int BatteryLevel;
  POWER_ACTION_POLICY PowerPolicy;
  _SYSTEM_POWER_STATE MinSystemState;
};

/* 1671 */
struct _SYSTEM_POWER_POLICY
{
  unsigned int Revision;
  POWER_ACTION_POLICY PowerButton;
  POWER_ACTION_POLICY SleepButton;
  POWER_ACTION_POLICY LidClose;
  _SYSTEM_POWER_STATE LidOpenWake;
  unsigned int Reserved;
  POWER_ACTION_POLICY Idle;
  unsigned int IdleTimeout;
  unsigned __int8 IdleSensitivity;
  unsigned __int8 DynamicThrottle;
  unsigned __int8 Spare2[2];
  _SYSTEM_POWER_STATE MinSleep;
  _SYSTEM_POWER_STATE MaxSleep;
  _SYSTEM_POWER_STATE ReducedLatencySleep;
  unsigned int WinLogonFlags;
  unsigned int Spare3;
  unsigned int DozeS4Timeout;
  unsigned int BroadcastCapacityResolution;
  SYSTEM_POWER_LEVEL DischargePolicy[4];
  unsigned int VideoTimeout;
  unsigned __int8 VideoDimDisplay;
  unsigned int VideoReserved[3];
  unsigned int SpindownTimeout;
  unsigned __int8 OptimizeForPower;
  unsigned __int8 FanThrottleTolerance;
  unsigned __int8 ForcedThrottle;
  unsigned __int8 MinThrottle;
  POWER_ACTION_POLICY OverThrottled;
};

/* 1672 */
struct _VF_POOL_TRACE
{
  void *Address;
  unsigned int Size;
  _ETHREAD *Thread;
  void *StackTrace[13];
};

/* 1673 */
struct _MM_SESSION_SPACE_FLAGS
{
  unsigned __int32 Initialized : 1;
  unsigned __int32 DeletePending : 1;
  unsigned __int32 PoolInitialized : 1;
  unsigned __int32 DynamicVaInitialized : 1;
  unsigned __int32 WsInitialized : 1;
  unsigned __int32 PoolDestroyed : 1;
  unsigned __int32 ObjectInitialized : 1;
  unsigned __int32 LeakedPoolDeliberately : 1;
  unsigned __int32 Filler : 24;
};

/* 1674 */
union $CDCBC6DBF3A1C519DDAED2EEFCD4DE52
{
  unsigned int LongFlags;
  _MM_SESSION_SPACE_FLAGS Flags;
};

/* 1675 */
union $F329364974981A77F7D9E5CA4023E59B
{
  void (__cdecl *Function)(_DRIVER_OBJECT *);
  unsigned int FunctionValue;
};

/* 1676 */
struct _MI_SESSION_DRIVER_UNLOAD
{
  $F329364974981A77F7D9E5CA4023E59B ___u0;
};

/* 1677 */
struct __declspec(align(32)) _MM_SESSION_SPACE
{
  volatile int ReferenceCount;
  $CDCBC6DBF3A1C519DDAED2EEFCD4DE52 u;
  unsigned int SessionId;
  volatile int ProcessReferenceToSession;
  _LIST_ENTRY ProcessList;
  unsigned int SessionPageDirectoryIndex;
  volatile unsigned int NonPagablePages;
  volatile unsigned int CommittedPages;
  void *PagedPoolStart;
  void *PagedPoolEnd;
  void *SessionObject;
  void *SessionObjectHandle;
  unsigned int SessionPoolAllocationFailures[4];
  _RTL_AVL_TREE ImageTree;
  unsigned int LocaleId;
  unsigned int AttachCount;
  _KGATE AttachGate;
  _LIST_ENTRY WsListEntry;
  _GENERAL_LOOKASIDE Lookaside[24];
  _MMSESSION Session;
  _MM_PAGED_POOL_INFO PagedPoolInfo;
  _MMSUPPORT Vm;
  _MMWSLE *Wsle;
  _MI_SESSION_DRIVER_UNLOAD DriverUnload;
  _POOL_DESCRIPTOR PagedPool;
  _MMPTE *PageTables;
  unsigned int PagedPoolBitBuffer[16];
  _MI_SPECIAL_POOL SpecialPool;
  _EX_PUSH_LOCK SessionPteLock;
  int PoolBigEntriesInUse;
  unsigned int PagedPoolPdeCount;
  unsigned int SpecialPoolPdeCount;
  unsigned int DynamicSessionPdeCount;
  _MI_SYSTEM_PTE_TYPE SystemPteInfo;
  void *PoolTrackTableExpansion;
  unsigned int PoolTrackTableExpansionSize;
  void *PoolTrackBigPages;
  unsigned int PoolTrackBigPagesSize;
  _IO_SESSION_STATE IoState;
  unsigned int IoStateSequence;
  _KEVENT IoNotificationEvent;
  struct _ESILO *ServerSilo;
  unsigned __int64 CreateTime;
};

/* 1678 */
struct _NONOPAQUE_OPLOCK
{
  _IRP *IrpExclusiveOplock;
  _FILE_OBJECT *FileObject;
  _EPROCESS *ExclusiveOplockOwner;
  _ETHREAD *ExclusiveOplockOwnerThread;
  unsigned __int8 WaiterPriority;
  _LIST_ENTRY IrpOplocksR;
  _LIST_ENTRY IrpOplocksRH;
  _LIST_ENTRY RHBreakQueue;
  _LIST_ENTRY WaitingIrps;
  _LIST_ENTRY DelayAckFileObjectQueue;
  _LIST_ENTRY AtomicQueue;
  _GUID *DeleterParentKey;
  unsigned int OplockState;
  _FAST_MUTEX *FastMutex;
};

/* 1679 */
struct $CA2549C9282E981BBD06140190CACED9
{
  unsigned __int64 ErrorStatus : 1;
  unsigned __int64 PhysicalAddress : 1;
  unsigned __int64 PhysicalAddressMask : 1;
  unsigned __int64 Node : 1;
  unsigned __int64 Card : 1;
  unsigned __int64 Module : 1;
  unsigned __int64 Bank : 1;
  unsigned __int64 Device : 1;
  unsigned __int64 Row : 1;
  unsigned __int64 Column : 1;
  unsigned __int64 BitPosition : 1;
  unsigned __int64 RequesterId : 1;
  unsigned __int64 ResponderId : 1;
  unsigned __int64 TargetId : 1;
  unsigned __int64 ErrorType : 1;
  unsigned __int64 Reserved : 49;
};

/* 1680 */
union _WHEA_MEMORY_ERROR_SECTION_VALIDBITS
{
  $CA2549C9282E981BBD06140190CACED9 __s0;
  unsigned __int64 ValidBits;
};

/* 1681 */
struct $390C86F153586C246F7E5B624A004BCC
{
  unsigned __int64 Reserved1 : 8;
  unsigned __int64 ErrorType : 8;
  unsigned __int64 Address : 1;
  unsigned __int64 Control : 1;
  unsigned __int64 Data : 1;
  unsigned __int64 Responder : 1;
  unsigned __int64 Requester : 1;
  unsigned __int64 FirstError : 1;
  unsigned __int64 Overflow : 1;
  unsigned __int64 Reserved2 : 41;
};

/* 1682 */
union _WHEA_ERROR_STATUS
{
  unsigned __int64 ErrorStatus;
  $390C86F153586C246F7E5B624A004BCC __s1;
};

/* 1683 */
struct __unaligned __declspec(align(1)) _WHEA_MEMORY_ERROR_SECTION
{
  _WHEA_MEMORY_ERROR_SECTION_VALIDBITS ValidBits;
  _WHEA_ERROR_STATUS ErrorStatus;
  unsigned __int64 PhysicalAddress;
  unsigned __int64 PhysicalAddressMask;
  unsigned __int16 Node;
  unsigned __int16 Card;
  unsigned __int16 Module;
  unsigned __int16 Bank;
  unsigned __int16 Device;
  unsigned __int16 Row;
  unsigned __int16 Column;
  unsigned __int16 BitPosition;
  unsigned __int64 RequesterId;
  unsigned __int64 ResponderId;
  unsigned __int64 TargetId;
  unsigned __int8 ErrorType;
};

/* 1689 */
union $FC32CD6D1CE73E0D84E917919B8A620B
{
  _LIST_ENTRY ResourceList;
  _LIST_ENTRY FreeListEntry;
};

/* 1687 */
struct $ACDF71180F6620BE0295814E0676F670
{
  unsigned __int32 Active : 1;
  unsigned __int32 OnlyTryAcquireUsed : 1;
  unsigned __int32 ReleasedOutOfOrder : 1;
  unsigned __int32 SequenceNumber : 29;
};

/* 1688 */
union $63D9A5BDAF1EF9DF32D8415A35609DC7
{
  $ACDF71180F6620BE0295814E0676F670 __s0;
  unsigned int Whole;
};

/* 1684 */
struct _VI_DEADLOCK_NODE
{
  _VI_DEADLOCK_NODE *Parent;
  _LIST_ENTRY ChildrenList;
  _LIST_ENTRY SiblingsList;
  $FC32CD6D1CE73E0D84E917919B8A620B ___u3;
  _VI_DEADLOCK_RESOURCE *Root;
  _VI_DEADLOCK_THREAD *ThreadEntry;
  $63D9A5BDAF1EF9DF32D8415A35609DC7 u1;
  int ChildrenCount;
  void *StackTrace[8];
  void *ParentStackTrace[8];
};

/* 1691 */
union $EA8748E5C0079246F82175484E17B496
{
  _LIST_ENTRY HashChainList;
  _LIST_ENTRY FreeListEntry;
};

/* 1685 */
struct _VI_DEADLOCK_RESOURCE
{
  _VI_DEADLOCK_RESOURCE_TYPE Type;
  unsigned __int32 NodeCount : 16;
  unsigned __int32 RecursionCount : 16;
  void *ResourceAddress;
  _VI_DEADLOCK_THREAD *ThreadOwner;
  _LIST_ENTRY ResourceList;
  $EA8748E5C0079246F82175484E17B496 ___u6;
  void *StackTrace[8];
  void *LastAcquireTrace[8];
  void *LastReleaseTrace[8];
};

/* 1690 */
union $F4A9E73227FAA441BB78EE2CEF23DA16
{
  _LIST_ENTRY ListEntry;
  _LIST_ENTRY FreeListEntry;
};

/* 1686 */
struct __declspec(align(4)) _VI_DEADLOCK_THREAD
{
  _KTHREAD *Thread;
  _VI_DEADLOCK_NODE *CurrentSpinNode;
  _VI_DEADLOCK_NODE *CurrentOtherNode;
  $F4A9E73227FAA441BB78EE2CEF23DA16 ___u3;
  unsigned int NodeCount;
  volatile unsigned int PagingCount;
  unsigned __int8 ThreadUsesEresources;
};

/* 1692 */
struct $C3DB06099EBD5856FC036F4D3E4B4BD6
{
  unsigned __int32 Type : 2;
};

/* 1693 */
union $16C64BF5D2B8C13F21EF17A0A218B98D
{
  void *SystemCacheVa;
  void *SessionViewVa;
  _EPROCESS *VadsProcess;
  $C3DB06099EBD5856FC036F4D3E4B4BD6 __s3;
};

/* 1694 */
struct $76F0988B2BF53A175BEA8076CCD8C847
{
  unsigned __int32 SubsectionType : 1;
};

/* 1695 */
union $D9A57094F4A302A660CFDC7D26530595
{
  _SUBSECTION *Subsection;
  $76F0988B2BF53A175BEA8076CCD8C847 __s1;
};

/* 1696 */
struct _MI_REVERSE_VIEW_MAP
{
  _LIST_ENTRY ViewLinks;
  $16C64BF5D2B8C13F21EF17A0A218B98D ___u1;
  $D9A57094F4A302A660CFDC7D26530595 ___u2;
  unsigned __int64 SectionOffset;
};

/* 1697 */
struct _TRIAGE_EX_WORK_QUEUE
{
  _KPRIQUEUE WorkPriQueue;
};

/* 1698 */
struct _TRIAGE_9F_PNP
{
  unsigned __int16 Signature;
  unsigned __int16 Revision;
  _TRIAGE_PNP_DEVICE_COMPLETION_QUEUE *CompletionQueue;
  _TRIAGE_EX_WORK_QUEUE *DelayedWorkQueue;
};

/* 1699 */
struct _POP_CURRENT_BROADCAST
{
  unsigned __int8 InProgress;
  _SYSTEM_POWER_STATE_CONTEXT SystemContext;
  POWER_ACTION PowerAction;
  _POP_DEVICE_SYS_STATE *DeviceState;
};

/* 1700 */
struct _PNP_DEVICE_EVENT_LIST
{
  int Status;
  _KMUTANT EventQueueMutex;
  _FAST_MUTEX Lock;
  _LIST_ENTRY List;
};

/* 1701 */
struct $31210AAD4295EF40720414A785869845
{
  __int16 KernelApcDisable;
  __int16 SpecialApcDisable;
};

/* 1702 */
union $051B1C75ED6019D055C7555A51299659
{
  $31210AAD4295EF40720414A785869845 __s0;
  unsigned int CombinedApcDisable;
};

/* 1703 */
struct _IOV_IRP_TRACE
{
  _IRP *Irp;
  _KTHREAD *Thread;
  $051B1C75ED6019D055C7555A51299659 ___u2;
  unsigned __int8 Irql;
  void *StackTrace[12];
};

/* 1706 */
struct $D632D276E131991289600EC1ABBC3675
{
  unsigned int PercentLevel;
};

/* 1707 */
struct $A3B43B6A1871B428E41C2E15F2C9D618
{
  unsigned int Type;
};

/* 1708 */
union $BBE584A0400088F59A386045E8D4B78D
{
  $D632D276E131991289600EC1ABBC3675 Battery;
  $A3B43B6A1871B428E41C2E15F2C9D618 Button;
};

/* 1704 */
struct _POP_ACTION_TRIGGER
{
  POWER_POLICY_DEVICE_TYPE Type;
  unsigned int Flags;
  _POP_TRIGGER_WAIT *Wait;
  $BBE584A0400088F59A386045E8D4B78D ___u3;
};

/* 1705 */
struct _POP_TRIGGER_WAIT
{
  _KEVENT Event;
  int Status;
  _LIST_ENTRY Link;
  _POP_ACTION_TRIGGER *Trigger;
};

/* 1709 */
struct $AC535D88491F1F885A942C62590F7F03
{
  void *UserData;
  void *Owner;
};

/* 1710 */
struct $42BA0214849829A6DEE6416DB699B1C7
{
  _LIST_ENTRY ListHead;
};

/* 1711 */
union $DA047E21A34920FD07A79BF410803CC2
{
  $AC535D88491F1F885A942C62590F7F03 Allocated;
  $42BA0214849829A6DEE6416DB699B1C7 Merged;
};

/* 1712 */
struct __declspec(align(8)) _RTLP_RANGE_LIST_ENTRY
{
  unsigned __int64 Start;
  unsigned __int64 End;
  $DA047E21A34920FD07A79BF410803CC2 ___u2;
  unsigned __int8 Attributes;
  unsigned __int8 PublicFlags;
  unsigned __int16 PrivateFlags;
  _LIST_ENTRY ListEntry;
};

/* 1713 */
struct $12EDD93CAC4208332C3108DBB4839320
{
  unsigned __int16 AllowScaling : 1;
  unsigned __int16 Disabled : 1;
  unsigned __int16 Reserved : 14;
};

/* 1714 */
union $D9489BB26AF3D6230A65333955D47154
{
  unsigned __int16 AsUSHORT;
  $12EDD93CAC4208332C3108DBB4839320 __s1;
};

/* 1715 */
struct PROCESSOR_IDLESTATE_INFO
{
  unsigned int TimeCheck;
  unsigned __int8 DemotePercent;
  unsigned __int8 PromotePercent;
  unsigned __int8 Spare[2];
};

/* 1716 */
struct PROCESSOR_IDLESTATE_POLICY
{
  unsigned __int16 Revision;
  $D9489BB26AF3D6230A65333955D47154 Flags;
  unsigned int PolicyCount;
  PROCESSOR_IDLESTATE_INFO Policy[3];
};

/* 1717 */
struct _PTE_TRACKER
{
  _LIST_ENTRY ListEntry;
  _MDL *Mdl;
  unsigned int Count;
  void *SystemVa;
  void *StartVa;
  unsigned int Offset;
  unsigned int Length;
  unsigned int Page;
  unsigned __int32 IoMapping : 1;
  unsigned __int32 Matched : 1;
  unsigned __int32 CacheAttribute : 2;
  unsigned __int32 GuardPte : 1;
  unsigned __int32 Spare : 27;
  void *StackTrace[7];
};

/* 1718 */
struct _SHARED_CACHE_MAP_LIST_CURSOR
{
  _LIST_ENTRY SharedCacheMapLinks;
  unsigned int Flags;
};

/* 1719 */
struct _PNP_DEVICE_ACTION_ENTRY
{
  _LIST_ENTRY ListEntry;
  _DEVICE_OBJECT *DeviceObject;
  _PNP_DEVICE_ACTION_REQUEST RequestType;
  unsigned __int8 ReorderingBarrier;
  unsigned int RequestArgument;
  _KEVENT *CompletionEvent;
  int *CompletionStatus;
  _GUID ActivityId;
};

/* 1720 */
struct _ETW_REPLY_QUEUE
{
  _KQUEUE Queue;
  int EventsLost;
};

/* 1721 */
union $654E83E89CAB2C1EC2AB4F095B6C2AA0
{
  unsigned int ReplyIndex;
  unsigned int Timeout;
};

/* 1722 */
union $50CA8CBBA05A5E98ABD5165AD2FEFF3A
{
  unsigned int ReplyCount;
  unsigned int NotifyeeCount;
};

/* 1723 */
union $A0D7831E9BD209436320E83CE4C08798
{
  unsigned __int64 ReplyHandle;
  void *ReplyObject;
  unsigned int RegIndex;
};

/* 1724 */
struct _ETWP_NOTIFICATION_HEADER
{
  _ETW_NOTIFICATION_TYPE NotificationType;
  unsigned int NotificationSize;
  int RefCount;
  unsigned __int8 ReplyRequested;
  $654E83E89CAB2C1EC2AB4F095B6C2AA0 ___u4;
  $50CA8CBBA05A5E98ABD5165AD2FEFF3A ___u5;
  $A0D7831E9BD209436320E83CE4C08798 ___u6;
  unsigned int TargetPID;
  unsigned int SourcePID;
  _GUID DestinationGuid;
  _GUID SourceGuid;
};

/* 1728 */
struct $BAE40FBE6666958798E69D1C7680AE16
{
  _ETW_REPLY_QUEUE *ReplyQueue;
  unsigned int SessionId;
};

/* 1729 */
union $9BE24DB34D8BABFB7BA9C16669CF9BCF
{
  $BAE40FBE6666958798E69D1C7680AE16 __s0;
  _ETW_QUEUE_ENTRY *ReplySlot[4];
  void *Caller;
};

/* 1730 */
union $2FDE90382350CE23ABC4F93CDBD7414E
{
  _EPROCESS *Process;
  void *CallbackContext;
};

/* 1731 */
struct $8144C077339A757F6BEDB255A1EF615B
{
  unsigned __int8 DbgKernelRegistration : 1;
  unsigned __int8 DbgUserRegistration : 1;
  unsigned __int8 DbgReplyRegistration : 1;
  unsigned __int8 DbgClassicRegistration : 1;
  unsigned __int8 DbgSessionSpaceRegistration : 1;
  unsigned __int8 DbgModernRegistration : 1;
  unsigned __int8 DbgClosed : 1;
  unsigned __int8 DbgInserted : 1;
};

/* 1732 */
union $8F8615BA295DE6ABFA17F4A4B3E1CF78
{
  unsigned __int8 Flags;
  $8144C077339A757F6BEDB255A1EF615B __s1;
};

/* 1725 */
struct _ETW_REG_ENTRY
{
  _LIST_ENTRY RegList;
  _LIST_ENTRY GroupRegList;
  _ETW_GUID_ENTRY *GuidEntry;
  _ETW_GUID_ENTRY *GroupEntry;
  $9BE24DB34D8BABFB7BA9C16669CF9BCF ___u4;
  $2FDE90382350CE23ABC4F93CDBD7414E ___u5;
  void *Callback;
  unsigned __int16 Index;
  $8F8615BA295DE6ABFA17F4A4B3E1CF78 ___u8;
  unsigned __int8 EnableMask;
  unsigned __int8 GroupEnableMask;
  unsigned __int8 UseDescriptorType;
  _ETW_PROVIDER_TRAITS *Traits;
};

/* 1726 */
struct _ETW_QUEUE_ENTRY
{
  _LIST_ENTRY ListEntry;
  _ETWP_NOTIFICATION_HEADER *DataBlock;
  _ETW_REG_ENTRY *RegEntry;
  _ETW_REG_ENTRY *ReplyObject;
  void *WakeReference;
  unsigned __int16 RegIndex;
  unsigned __int16 ReplyIndex;
  unsigned int Flags;
};

/* 1727 */
struct __declspec(align(4)) _ETW_PROVIDER_TRAITS
{
  _RTL_BALANCED_NODE Node;
  unsigned int ReferenceCount;
  unsigned __int8 Traits[1];
};

/* 1736 */
union $A01924D88C9FAEF089DC2AA7F69076BC
{
  _EPROCESS *ServerProcess;
  _EPROCESS *MappingProcess;
};

/* 1733 */
struct _LPCP_PORT_OBJECT
{
  _LPCP_PORT_OBJECT *ConnectionPort;
  _LPCP_PORT_OBJECT *ConnectedPort;
  _LPCP_PORT_QUEUE MsgQueue;
  _CLIENT_ID Creator;
  void *ClientSectionBase;
  void *ServerSectionBase;
  void *PortContext;
  _ETHREAD *ClientThread;
  _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  _SECURITY_CLIENT_CONTEXT StaticSecurity;
  _LIST_ENTRY LpcReplyChainHead;
  _LIST_ENTRY LpcDataInfoChainHead;
  $A01924D88C9FAEF089DC2AA7F69076BC ___u12;
  unsigned __int16 MaxMessageLength;
  unsigned __int16 MaxConnectionInfoLength;
  unsigned int Flags;
  _KEVENT WaitEvent;
};

/* 1735 */
struct _LPCP_PORT_QUEUE
{
  _LPCP_NONPAGED_PORT_QUEUE *NonPagedPortQueue;
  _KSEMAPHORE *Semaphore;
  _LIST_ENTRY ReceiveHead;
};

/* 1734 */
struct _LPCP_NONPAGED_PORT_QUEUE
{
  _KSEMAPHORE Semaphore;
  _LPCP_PORT_OBJECT *BackPointer;
};

/* 1737 */
struct _LDR_SERVICE_TAG_RECORD
{
  _LDR_SERVICE_TAG_RECORD *Next;
  unsigned int ServiceTag;
};

/* 1738 */
struct _LDRP_CSLIST
{
  _SINGLE_LIST_ENTRY *Tail;
};

/* 1739 */
struct _LDR_DDAG_NODE
{
  _LIST_ENTRY Modules;
  _LDR_SERVICE_TAG_RECORD *ServiceTagList;
  unsigned int LoadCount;
  unsigned int LoadWhileUnloadingCount;
  unsigned int LowestLink;
  _LDRP_CSLIST Dependencies;
  _LDRP_CSLIST IncomingDependencies;
  _LDR_DDAG_STATE State;
  _SINGLE_LIST_ENTRY CondenseLink;
  unsigned int PreorderNumber;
};

/* 1740 */
struct $AF26E7012D7EC357CA489ADC8407C7B0
{
  unsigned __int32 PackagedBinary : 1;
  unsigned __int32 MarkedForRemoval : 1;
  unsigned __int32 ImageDll : 1;
  unsigned __int32 LoadNotificationsSent : 1;
  unsigned __int32 TelemetryEntryProcessed : 1;
  unsigned __int32 ProcessStaticImport : 1;
  unsigned __int32 InLegacyLists : 1;
  unsigned __int32 InIndexes : 1;
  unsigned __int32 ShimDll : 1;
  unsigned __int32 InExceptionTable : 1;
  unsigned __int32 ReservedFlags1 : 2;
  unsigned __int32 LoadInProgress : 1;
  unsigned __int32 LoadConfigProcessed : 1;
  unsigned __int32 EntryProcessed : 1;
  unsigned __int32 ProtectDelayLoad : 1;
  unsigned __int32 ReservedFlags3 : 2;
  unsigned __int32 DontCallForThreads : 1;
  unsigned __int32 ProcessAttachCalled : 1;
  unsigned __int32 ProcessAttachFailed : 1;
  unsigned __int32 CorDeferredValidate : 1;
  unsigned __int32 CorImage : 1;
  unsigned __int32 DontRelocate : 1;
  unsigned __int32 CorILOnly : 1;
  unsigned __int32 ReservedFlags5 : 3;
  unsigned __int32 Redirected : 1;
  unsigned __int32 ReservedFlags6 : 2;
  unsigned __int32 CompatDatabaseProcessed : 1;
};

/* 1741 */
union $2F48079910672D6B3B58793E8BEDA92C
{
  unsigned __int8 FlagGroup[4];
  unsigned int Flags;
  $AF26E7012D7EC357CA489ADC8407C7B0 __s2;
};

/* 1742 */
struct _LDR_DATA_TABLE_ENTRY
{
  _LIST_ENTRY InLoadOrderLinks;
  _LIST_ENTRY InMemoryOrderLinks;
  _LIST_ENTRY InInitializationOrderLinks;
  void *DllBase;
  void *EntryPoint;
  unsigned int SizeOfImage;
  _UNICODE_STRING FullDllName;
  _UNICODE_STRING BaseDllName;
  $2F48079910672D6B3B58793E8BEDA92C ___u8;
  unsigned __int16 ObsoleteLoadCount;
  unsigned __int16 TlsIndex;
  _LIST_ENTRY HashLinks;
  unsigned int TimeDateStamp;
  struct _ACTIVATION_CONTEXT *EntryPointActivationContext;
  void *Lock;
  _LDR_DDAG_NODE *DdagNode;
  _LIST_ENTRY NodeModuleLink;
  struct _LDRP_LOAD_CONTEXT *LoadContext;
  void *ParentDllBase;
  void *SwitchBackContext;
  _RTL_BALANCED_NODE BaseAddressIndexNode;
  _RTL_BALANCED_NODE MappingInfoIndexNode;
  unsigned int OriginalBase;
  _LARGE_INTEGER LoadTime;
  unsigned int BaseNameHashValue;
  _LDR_DLL_LOAD_REASON LoadReason;
  unsigned int ImplicitPathOptions;
  unsigned int ReferenceCount;
};

/* 1743 */
struct _VF_KE_CRITICAL_REGION_TRACE
{
  _ETHREAD *Thread;
  void *StackTrace[7];
};

/* 1744 */
struct _VF_AVL_TABLE
{
  _RTL_AVL_TABLE RtlTable;
  _VF_AVL_TREE_NODE *ReservedNode;
  void *NodeToFree;
  __declspec(align(128)) volatile int Lock;
};

/* 1745 */
union $B444BA825E2FBC29D2376799EA7368A2
{
  unsigned int NodeSize;
  unsigned int UseLookaside;
};

/* 1746 */
struct _VF_AVL_TREE
{
  unsigned int NodeRangeSize;
  volatile unsigned int NodeCount;
  _VF_AVL_TABLE *Tables;
  unsigned int TablesNo;
  $B444BA825E2FBC29D2376799EA7368A2 u1;
};

/* 1747 */
struct _HEAP_FREE_ENTRY_EXTRA
{
  unsigned __int16 TagIndex;
  unsigned __int16 FreeBackTraceIndex;
};

/* 1748 */
struct __declspec(align(4)) _NB10
{
  unsigned int Signature;
  unsigned int Offset;
  unsigned int TimeStamp;
  unsigned int Age;
  char PdbName[1];
};

/* 1749 */
struct __declspec(align(4)) _RSDS
{
  unsigned int Signature;
  _GUID Guid;
  unsigned int Age;
  char PdbName[1];
};

/* 1750 */
union _CVDD
{
  unsigned int Signature;
  _NB10 NB10;
  _RSDS RsDs;
};

/* 1751 */
struct _PROVIDER_BINARY_ENTRY
{
  _LIST_ENTRY ListEntry;
  unsigned __int8 ConsumersNotified;
  unsigned __int8 Spare[3];
  unsigned int DebugIdSize;
  _CVDD DebugId;
};

/* 1752 */
struct _VF_ADDRESS_RANGE
{
  unsigned __int8 *Start;
  unsigned __int8 *End;
};

/* 1753 */
struct __declspec(align(8)) _VI_DEADLOCK_GLOBALS
{
  __int64 TimeAcquire;
  __int64 TimeRelease;
  _LIST_ENTRY *ResourceDatabase;
  unsigned int ResourceDatabaseCount;
  _VF_ADDRESS_RANGE ResourceAddressRange[1023];
  _LIST_ENTRY *ThreadDatabase;
  unsigned int ThreadDatabaseCount;
  _VF_ADDRESS_RANGE ThreadAddressRange[1023];
  volatile unsigned int AllocationFailures;
  unsigned int NodesTrimmedBasedOnAge;
  unsigned int NodesTrimmedBasedOnCount;
  unsigned int NodesSearched;
  unsigned int MaxNodesSearched;
  unsigned int SequenceNumber;
  unsigned int RecursionDepthLimit;
  unsigned int SearchedNodesLimit;
  unsigned int DepthLimitHits;
  unsigned int SearchLimitHits;
  unsigned int StackLimitHits;
  unsigned int ABC_ACB_Skipped;
  unsigned int OutOfOrderReleases;
  unsigned int NodesReleasedOutOfOrder;
  unsigned int TotalReleases;
  unsigned int RootNodesDeleted;
  unsigned int ForgetHistoryCounter;
  void *Instigator;
  unsigned int NumberOfParticipants;
  _VI_DEADLOCK_NODE *Participant[32];
  int ChildrenCountWatermark;
  _KERNEL_STACK_LIMITS StackType;
  unsigned int StackLowLimit;
  unsigned int StackHighLimit;
};

/* 1754 */
struct _VF_WATCHDOG_IRP
{
  _LIST_ENTRY ListEntry;
  _IRP *Irp;
  unsigned int DueTickCount;
  volatile unsigned __int8 Inserted;
  char TrackedStackLocation;
  unsigned __int16 CancelTimeoutTicks;
};

/* 1755 */
struct _TRAPFRAME_LOG_ENTRY
{
  unsigned int Thread;
  unsigned __int8 CpuNumber;
  unsigned __int8 TrapType;
  unsigned __int16 Padding;
  unsigned int R0;
  unsigned int R1;
  unsigned int R2;
  unsigned int R3;
  unsigned int R12;
  unsigned int Sp;
  unsigned int Lr;
  unsigned int R11;
  unsigned int Pc;
  unsigned int Cpsr;
};

/* 1756 */
union $9C335EC2B8A712535CFC0F6DE6384053
{
  unsigned __int8 NameHint[4];
  unsigned int HashKey;
};

/* 1757 */
struct _CM_INDEX
{
  unsigned int Cell;
  $9C335EC2B8A712535CFC0F6DE6384053 ___u1;
};

/* 1758 */
struct _OBJECT_SYMBOLIC_LINK
{
  _LARGE_INTEGER CreationTime;
  _UNICODE_STRING LinkTarget;
  unsigned int DosDeviceDriveIndex;
  unsigned int Flags;
};

/* 1759 */
struct _VF_TRACKER
{
  unsigned int TrackerFlags;
  unsigned int TrackerSize;
  unsigned int TrackerIndex;
  unsigned int TraceDepth;
};

/* 1760 */
struct _CALL_PERFORMANCE_DATA
{
  unsigned int SpinLock;
  _LIST_ENTRY HashTable[64];
};

/* 1761 */
struct _TRIAGE_9F_POWER
{
  unsigned __int16 Signature;
  unsigned __int16 Revision;
  _LIST_ENTRY *IrpList;
  _LIST_ENTRY *ThreadList;
  _TRIAGE_EX_WORK_QUEUE *DelayedWorkQueue;
};

/* 1762 */
struct _OBJECT_REF_TRACE
{
  void *StackTrace[16];
};

/* 1763 */
struct __declspec(align(4)) _STACK_TABLE
{
  unsigned __int16 NumStackTraces;
  unsigned __int16 TraceCapacity;
  _OBJECT_REF_TRACE *StackTrace[16];
  unsigned __int16 StackTableHash[16381];
};

/* 1764 */
struct _POP_POWER_SETTING_VALUES
{
  unsigned int StructureSize;
  _SYSTEM_POWER_POLICY PopPolicy;
  SYSTEM_POWER_CONDITION CurrentAcDcPowerState;
  unsigned __int8 AwayModeEnabled;
  unsigned __int8 AwayModeEngaged;
  unsigned __int8 AwayModePolicyAllowed;
  volatile int AwayModeIgnoreUserPresent;
  volatile int AwayModeIgnoreAction;
  unsigned __int8 DisableFastS4;
  unsigned __int8 DisableStandbyStates;
  unsigned int UnattendSleepTimeout;
  volatile unsigned int DiskIgnoreTime;
  volatile unsigned int DeviceIdlePolicy;
  unsigned int VideoDimTimeout;
  unsigned int VideoNormalBrightness;
  unsigned int VideoDimBrightness;
  unsigned int AlsOffset;
  unsigned int AlsEnabled;
  unsigned int EsBrightness;
  unsigned __int8 SwitchShutdownForced;
  unsigned int SystemCoolingPolicy;
  unsigned __int8 MediaBufferingEngaged;
  unsigned __int8 OffloadedAudio;
  unsigned __int8 NonOffloadedAudio;
  unsigned __int8 FullscreenVideoPlayback;
  unsigned int EsBatteryThreshold;
  unsigned __int8 EsUserAwaySetting;
  unsigned int WiFiInStandby;
};

/* 1765 */
struct _DEFERRED_WRITE
{
  __int16 NodeTypeCode;
  __int16 NodeByteSize;
  _FILE_OBJECT *FileObject;
  unsigned int BytesToWrite;
  _LIST_ENTRY DeferredWriteLinks;
  _KEVENT *Event;
  void (__cdecl *PostRoutine)(void *, void *);
  void *Context1;
  void *Context2;
};

/* 1766 */
typedef struct _GUID GUID;

/* 1767 */
struct C_SCOPE_TABLE
{
  void *Begin;
  void *End;
  void *Handler;
  void *Target;
};

/* 1768 */
union __declspec(align(8)) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 1769 */
typedef __n64 int8x8_t;

/* 1770 */
typedef __n64 uint8x8_t;

/* 1771 */
typedef __n64 int16x4_t;

/* 1772 */
typedef __n64 int32x2_t;

/* 1773 */
typedef __n64 uint16x4_t;

/* 1774 */
typedef __n64 uint32x2_t;

/* 1775 */
typedef __n128 int8x16_t;

/* 1776 */
typedef __n128 int16x8_t;

/* 1777 */
typedef __n128 int32x4_t;

/* 1778 */
typedef __n128 int64x2_t;

/* 1779 */
typedef __n128 uint8x16_t;

/* 1780 */
typedef __n128 uint16x8_t;

/* 1781 */
typedef __n128 uint32x4_t;

/* 1782 */
typedef __n128 uint64x2_t;

/* 1783 */
typedef __n64 poly8x8_t;

/* 1784 */
typedef __n64 poly16x4_t;

/* 1785 */
typedef __n128 poly16x8_t;

/* 1786 */
typedef __n128 poly8x16_t;

/* 1787 */
typedef __n64 float32x2_t;

/* 1788 */
typedef __n128 float32x4_t;

/* 1789 */
typedef __n128 float64x2_t;

/* 1790 */
typedef __n128 poly128_t;

/* 1791 */
typedef void **va_list;

/* 1792 */
struct int32x4x2_t
{
  int32x4_t val[2];
};

/* 1793 */
typedef int BOOL;

